[10:36:03.194] |I| [init_config]: backend-renderer: Vulkan
[10:36:03.194] |I| [init_config]: log-level: 2
[10:36:03.393] |I| [main]: Vita3K v0.1.5 2692-067135d2
[10:36:03.393] |I| [main]: Number of logical CPU cores: 6
[10:36:03.393] |I| [main]: Available ram memory: 15943 mo
[10:36:03.471] |I| [create]: Swap interval = -1
[10:36:03.472] |I| [create]: GPU = NVIDIA GeForce GTX 1070/PCIe/SSE2
[10:36:03.472] |I| [create]: GL_VERSION = 4.6.0 NVIDIA 510.73.05
[10:36:03.472] |I| [create]: GL_SHADING_LANGUAGE_VERSION = 4.60 NVIDIA
[10:36:03.472] |I| [create]: Your GPU supports shader interlock, some games that use programmable blending will have better performance.
[10:36:13.111] |I| [install_pkg]: sce_sys
[10:36:13.111] |I| [install_pkg]: sce_sys/about
[10:36:13.111] |I| [install_pkg]: sce_sys/livearea
[10:36:13.111] |I| [install_pkg]: sce_sys/livearea/contents
[10:36:13.111] |I| [install_pkg]: sce_sys/manual
[10:36:13.111] |I| [install_pkg]: sce_sys/manual/02
[10:36:13.111] |I| [install_pkg]: sce_sys/manual/03
[10:36:13.111] |I| [install_pkg]: sce_sys/manual/04
[10:36:13.111] |I| [install_pkg]: sce_sys/manual/05
[10:36:13.111] |I| [install_pkg]: sce_sys/retail
[10:36:13.111] |I| [install_pkg]: sce_sys/retail/livearea
[10:36:13.111] |I| [install_pkg]: sce_sys/retail/livearea/contents
[10:36:13.112] |I| [install_pkg]: sce_sys/trophy
[10:36:13.112] |I| [install_pkg]: sce_sys/trophy/NPWR03776_00
[10:36:13.112] |I| [install_pkg]: sce_sys/param.sfo
[10:36:13.112] |I| [install_pkg]: sce_sys/about/right.suprx
[10:36:13.112] |I| [install_pkg]: sce_sys/clearsign
[10:36:13.112] |I| [install_pkg]: sce_sys/icon0.png
[10:36:13.112] |I| [install_pkg]: sce_sys/keystone
[10:36:13.112] |I| [install_pkg]: sce_sys/livearea/contents/Guac_store_button.png
[10:36:13.112] |I| [install_pkg]: sce_sys/livearea/contents/MBA_store_button.png
[10:36:13.112] |I| [install_pkg]: sce_sys/livearea/contents/TitleMenu_BGD.png
[10:36:13.114] |I| [install_pkg]: sce_sys/livearea/contents/TitleMenu_Logo_2-fr.png
[10:36:13.114] |I| [install_pkg]: sce_sys/livearea/contents/TitleMenu_Logo_2.png
[10:36:13.114] |I| [install_pkg]: sce_sys/livearea/contents/drinkboxButton.png
[10:36:13.114] |I| [install_pkg]: sce_sys/livearea/contents/template.xml
[10:36:13.114] |I| [install_pkg]: sce_sys/manual/001.png
[10:36:13.115] |I| [install_pkg]: sce_sys/manual/002.png
[10:36:13.115] |I| [install_pkg]: sce_sys/manual/003.png
[10:36:13.116] |I| [install_pkg]: sce_sys/manual/004.png
[10:36:13.116] |I| [install_pkg]: sce_sys/manual/005.png
[10:36:13.116] |I| [install_pkg]: sce_sys/manual/006.png
[10:36:13.117] |I| [install_pkg]: sce_sys/manual/007.png
[10:36:13.117] |I| [install_pkg]: sce_sys/manual/008.png
[10:36:13.117] |I| [install_pkg]: sce_sys/manual/009.png
[10:36:13.117] |I| [install_pkg]: sce_sys/manual/010.png
[10:36:13.118] |I| [install_pkg]: sce_sys/manual/011.png
[10:36:13.118] |I| [install_pkg]: sce_sys/manual/012.png
[10:36:13.118] |I| [install_pkg]: sce_sys/manual/013.png
[10:36:13.122] |I| [install_pkg]: sce_sys/manual/014.png
[10:36:13.126] |I| [install_pkg]: sce_sys/manual/015.png
[10:36:13.129] |I| [install_pkg]: sce_sys/manual/016.png
[10:36:13.133] |I| [install_pkg]: sce_sys/manual/017.png
[10:36:13.136] |I| [install_pkg]: sce_sys/manual/018.png
[10:36:13.139] |I| [install_pkg]: sce_sys/manual/02/001.png
[10:36:13.139] |I| [install_pkg]: sce_sys/manual/02/002.png
[10:36:13.139] |I| [install_pkg]: sce_sys/manual/02/003.png
[10:36:13.139] |I| [install_pkg]: sce_sys/manual/02/004.png
[10:36:13.140] |I| [install_pkg]: sce_sys/manual/02/005.png
[10:36:13.140] |I| [install_pkg]: sce_sys/manual/02/006.png
[10:36:13.140] |I| [install_pkg]: sce_sys/manual/02/007.png
[10:36:13.140] |I| [install_pkg]: sce_sys/manual/02/008.png
[10:36:13.140] |I| [install_pkg]: sce_sys/manual/02/009.png
[10:36:13.141] |I| [install_pkg]: sce_sys/manual/02/010.png
[10:36:13.141] |I| [install_pkg]: sce_sys/manual/02/011.png
[10:36:13.144] |I| [install_pkg]: sce_sys/manual/02/012.png
[10:36:13.147] |I| [install_pkg]: sce_sys/manual/02/013.png
[10:36:13.150] |I| [install_pkg]: sce_sys/manual/02/014.png
[10:36:13.153] |I| [install_pkg]: sce_sys/manual/02/015.png
[10:36:13.155] |I| [install_pkg]: sce_sys/manual/02/016.png
[10:36:13.158] |I| [install_pkg]: sce_sys/manual/03/001.png
[10:36:13.159] |I| [install_pkg]: sce_sys/manual/03/002.png
[10:36:13.159] |I| [install_pkg]: sce_sys/manual/03/003.png
[10:36:13.159] |I| [install_pkg]: sce_sys/manual/03/004.png
[10:36:13.159] |I| [install_pkg]: sce_sys/manual/03/005.png
[10:36:13.159] |I| [install_pkg]: sce_sys/manual/03/006.png
[10:36:13.160] |I| [install_pkg]: sce_sys/manual/03/007.png
[10:36:13.160] |I| [install_pkg]: sce_sys/manual/03/008.png
[10:36:13.160] |I| [install_pkg]: sce_sys/manual/03/009.png
[10:36:13.160] |I| [install_pkg]: sce_sys/manual/03/010.png
[10:36:13.160] |I| [install_pkg]: sce_sys/manual/03/011.png
[10:36:13.163] |I| [install_pkg]: sce_sys/manual/03/012.png
[10:36:13.166] |I| [install_pkg]: sce_sys/manual/03/013.png
[10:36:13.169] |I| [install_pkg]: sce_sys/manual/03/014.png
[10:36:13.172] |I| [install_pkg]: sce_sys/manual/03/015.png
[10:36:13.175] |I| [install_pkg]: sce_sys/manual/03/016.png
[10:36:13.178] |I| [install_pkg]: sce_sys/manual/04/001.png
[10:36:13.178] |I| [install_pkg]: sce_sys/manual/04/002.png
[10:36:13.178] |I| [install_pkg]: sce_sys/manual/04/003.png
[10:36:13.178] |I| [install_pkg]: sce_sys/manual/04/004.png
[10:36:13.179] |I| [install_pkg]: sce_sys/manual/04/005.png
[10:36:13.179] |I| [install_pkg]: sce_sys/manual/04/006.png
[10:36:13.179] |I| [install_pkg]: sce_sys/manual/04/007.png
[10:36:13.179] |I| [install_pkg]: sce_sys/manual/04/008.png
[10:36:13.180] |I| [install_pkg]: sce_sys/manual/04/009.png
[10:36:13.180] |I| [install_pkg]: sce_sys/manual/04/010.png
[10:36:13.180] |I| [install_pkg]: sce_sys/manual/04/011.png
[10:36:13.183] |I| [install_pkg]: sce_sys/manual/04/012.png
[10:36:13.186] |I| [install_pkg]: sce_sys/manual/04/013.png
[10:36:13.189] |I| [install_pkg]: sce_sys/manual/04/014.png
[10:36:13.192] |I| [install_pkg]: sce_sys/manual/04/015.png
[10:36:13.195] |I| [install_pkg]: sce_sys/manual/04/016.png
[10:36:13.197] |I| [install_pkg]: sce_sys/manual/05/001.png
[10:36:13.198] |I| [install_pkg]: sce_sys/manual/05/002.png
[10:36:13.198] |I| [install_pkg]: sce_sys/manual/05/003.png
[10:36:13.198] |I| [install_pkg]: sce_sys/manual/05/004.png
[10:36:13.198] |I| [install_pkg]: sce_sys/manual/05/005.png
[10:36:13.199] |I| [install_pkg]: sce_sys/manual/05/006.png
[10:36:13.199] |I| [install_pkg]: sce_sys/manual/05/007.png
[10:36:13.199] |I| [install_pkg]: sce_sys/manual/05/008.png
[10:36:13.199] |I| [install_pkg]: sce_sys/manual/05/009.png
[10:36:13.199] |I| [install_pkg]: sce_sys/manual/05/010.png
[10:36:13.200] |I| [install_pkg]: sce_sys/manual/05/011.png
[10:36:13.202] |I| [install_pkg]: sce_sys/manual/05/012.png
[10:36:13.206] |I| [install_pkg]: sce_sys/manual/05/013.png
[10:36:13.208] |I| [install_pkg]: sce_sys/manual/05/014.png
[10:36:13.211] |I| [install_pkg]: sce_sys/manual/05/015.png
[10:36:13.214] |I| [install_pkg]: sce_sys/manual/05/016.png
[10:36:13.217] |I| [install_pkg]: sce_sys/pic0.png
[10:36:13.218] |I| [install_pkg]: sce_sys/retail/livearea/contents/Guac_store_button.png
[10:36:13.218] |I| [install_pkg]: sce_sys/retail/livearea/contents/MBA_store_button.png
[10:36:13.218] |I| [install_pkg]: sce_sys/retail/livearea/contents/TitleMenu_BGD.png
[10:36:13.219] |I| [install_pkg]: sce_sys/retail/livearea/contents/TitleMenu_Logo_2-fr.png
[10:36:13.219] |I| [install_pkg]: sce_sys/retail/livearea/contents/TitleMenu_Logo_2.png
[10:36:13.219] |I| [install_pkg]: sce_sys/retail/livearea/contents/drinkboxButton.png
[10:36:13.219] |I| [install_pkg]: sce_sys/retail/livearea/contents/template.xml
[10:36:13.220] |I| [install_pkg]: sce_sys/trophy/NPWR03776_00/TROPHY.TRP
[10:36:13.226] |I| [install_pkg]: sce_module
[10:36:13.226] |I| [install_pkg]: sce_module/libc.suprx
[10:36:13.227] |I| [install_pkg]: sce_module/libfios2.suprx
[10:36:13.228] |I| [install_pkg]: sce_module/libult.suprx
[10:36:13.228] |I| [install_pkg]: eboot.bin
[10:36:13.244] |I| [install_pkg]: media
[10:36:13.244] |I| [install_pkg]: thumbnail
[10:36:13.244] |I| [install_pkg]: levels.dat
[10:36:13.325] |I| [install_pkg]: media/audio.fev.psp2
[10:36:13.327] |I| [install_pkg]: media/effects.fsb.psp2
[10:36:13.735] |I| [install_pkg]: media/music.fsb.psp2
[10:36:13.964] |I| [install_pkg]: misc.dat
[10:36:13.969] |I| [install_pkg]: resources.dat
[10:36:14.349] |I| [install_pkg]: shaders.dat.psp2
[10:36:14.350] |I| [install_pkg]: thumbnail/save_icon0.png
[10:36:14.350] |I| [install_pkg]: sce_pfs
[10:36:14.350] |I| [install_pkg]: sce_pfs/files.db
[10:36:14.350] |I| [install_pkg]: sce_pfs/unicv.db
[10:36:14.351] |I| [install_pkg]: sce_pfs/pflist
[10:36:14.351] |I| [install_pkg]: sce_sys/package
[10:36:14.352] |I| [install_pkg]: sce_sys/package/temp.bin
[10:36:14.352] |I| [install_pkg]: sce_sys/package/digs.bin
[10:36:16.236] |I| [install_pkg]: Decrypted /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/sce_sys/about/right.suprx with klicensee 90b75194f780a03ef03562f0a5061e11
[10:36:16.239] |I| [install_pkg]: Decrypted /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/sce_module/libc.suprx with klicensee 90b75194f780a03ef03562f0a5061e11
[10:36:16.241] |I| [install_pkg]: Decrypted /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/sce_module/libfios2.suprx with klicensee 90b75194f780a03ef03562f0a5061e11
[10:36:16.242] |I| [install_pkg]: Decrypted /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/sce_module/libult.suprx with klicensee 90b75194f780a03ef03562f0a5061e11
[10:36:16.338] |I| [install_pkg]: Decrypted /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/eboot.bin with klicensee 90b75194f780a03ef03562f0a5061e11
[10:36:16.338] |I| [copy_license]: Success copy license file to: /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/license/PCSB00189/EP2145-PCSB00189_00-GUACAMELEE000000.rif
[10:36:25.879] |I| [load_app_impl]: cpu-backend: Dynarmic
[10:36:25.879] |I| [load_app_impl]: CPU Optimisation state: true
[10:36:25.879] |I| [load_app_impl]: ngs state: true
[10:36:25.879] |I| [load_app_impl]: Resolution multiplier: 2
[10:36:25.879] |I| [load_app_impl]: 1 Controllers Connected
[10:36:25.879] |I| [load_app_impl]: Controller 0: PS4 Controller
[10:36:25.879] |I| [load_app_impl]: modules mode: Automatic
[10:36:25.879] |I| [load_app_impl]: Title: Guacamelee!
[10:36:25.879] |I| [load_app_impl]: Serial: PCSB00189
[10:36:25.879] |I| [load_app_impl]: Version: 1.00
[10:36:25.879] |I| [load_app_impl]: Category: gd
[10:36:25.886] |C| [load_self]: Unknown segment type 0x6FFFFF01
[10:36:25.886] |I| [load_self]: Loaded module segment 0 @ [0x00007000 - 0x00042C2C / 0x81000000] (size: 0x0003BC2C) of module app0:sce_module/libc.suprx
[10:36:25.886] |I| [load_self]: Loaded module segment 1 @ [0x00043000 - 0x00045380 / 0x8103C000] (size: 0x00002380) of module app0:sce_module/libc.suprx
[10:36:25.886] |I| [load_self]: Loading symbols for SELF: app0:sce_module/libc.suprx
[10:36:25.886] |W| [load_var_imports]: 	NID NOT FOUND 0xDF084DFA (UNRECOGNISED) at 0x37D88, setting to stub value 0xDEADBEEF
[10:36:25.887] |I| [pre_load_module]: Pre-load module SceLibc (at "sce_module/libc.suprx") loaded
[10:36:25.890] |C| [load_self]: Unknown segment type 0x6FFFFF01
[10:36:25.890] |I| [load_self]: Loaded module segment 0 @ [0x00047000 - 0x000683BC / 0x81000000] (size: 0x000213BC) of module app0:sce_module/libfios2.suprx
[10:36:25.890] |I| [load_self]: Loaded module segment 1 @ [0x00069000 - 0x0006E1B8 / 0x81022000] (size: 0x000051B8) of module app0:sce_module/libfios2.suprx
[10:36:25.890] |I| [load_self]: Loading symbols for SELF: app0:sce_module/libfios2.suprx
[10:36:25.890] |I| [pre_load_module]: Pre-load module SceLibFios2 (at "sce_module/libfios2.suprx") loaded
[10:36:25.893] |C| [load_self]: Unknown segment type 0x6FFFFF01
[10:36:25.893] |I| [load_self]: Loaded module segment 0 @ [0x0006F000 - 0x00082474 / 0x81000000] (size: 0x00013474) of module app0:sce_module/libult.suprx
[10:36:25.893] |I| [load_self]: Loaded module segment 1 @ [0x00083000 - 0x00083814 / 0x81014000] (size: 0x00000814) of module app0:sce_module/libult.suprx
[10:36:25.893] |I| [load_self]: Loading symbols for SELF: app0:sce_module/libult.suprx
[10:36:25.893] |I| [pre_load_module]: Pre-load module SceUlt (at "sce_module/libult.suprx") loaded
[10:36:25.897] |I| [load_self]: Loaded module segment 0 @ [0x00084000 - 0x000D4F04 / 0x81000000] (size: 0x00050F04) of module vs0:sys/external/libSceFt2.suprx
[10:36:25.897] |I| [load_self]: Loaded module segment 1 @ [0x000D5000 - 0x000D52F4 / 0x81051000] (size: 0x000002F4) of module vs0:sys/external/libSceFt2.suprx
[10:36:25.897] |I| [load_self]: Loading symbols for SELF: vs0:sys/external/libSceFt2.suprx
[10:36:25.897] |W| [load_var_imports]: 	NID NOT FOUND 0x93B8AA67 (UNRECOGNISED) at 0xD4EE0, setting to stub value 0xDEADBEEF
[10:36:25.898] |I| [pre_load_module]: Pre-load module SceLibft2 (at "sys/external/libSceFt2.suprx") loaded
[10:36:25.900] |I| [load_self]: Loaded module segment 0 @ [0x000D7000 - 0x000E6F14 / 0x81000000] (size: 0x0000FF14) of module vs0:sys/external/libpvf.suprx
[10:36:25.900] |I| [load_self]: Loaded module segment 1 @ [0x000E7000 - 0x000E7008 / 0x81010000] (size: 0x00000008) of module vs0:sys/external/libpvf.suprx
[10:36:25.900] |I| [load_self]: Loading symbols for SELF: vs0:sys/external/libpvf.suprx
[10:36:25.900] |I| [pre_load_module]: Pre-load module SceLibPvf (at "sys/external/libpvf.suprx") loaded
[10:36:25.983] |C| [load_self]: Unknown segment type 0x6FFFFF01
[10:36:25.983] |I| [load_self]: Loaded module segment 0 @ [0x81000000 - 0x81967CD4 / 0x81000000] (size: 0x00967CD4) of module app0:eboot.bin
[10:36:25.983] |I| [load_self]: Loaded module segment 1 @ [0x81968000 - 0x81A59DDC / 0x81968000] (size: 0x000F1DDC) of module app0:eboot.bin
[10:36:25.983] |I| [load_self]: Loading symbols for SELF: app0:eboot.bin
[10:36:25.983] |I| [load_app_impl]: Main executable Game_psp2 (eboot.bin) loaded
[10:36:26.017] |I| [run_app]: Module SceLibc (at "app0:sce_module/libc.suprx") module_start returned 0x0
[10:36:26.030] |W| [stubbed_impl]: Stubbed sceKernelGetProcessId import called. (pid: 0)
[10:36:26.031] |W| [unimplemented_impl]: Unimplemented _sceFiosKernelOverlayGetList import called.
[10:36:26.031] |I| [run_app]: Module SceLibFios2 (at "app0:sce_module/libfios2.suprx") module_start returned 0x0
[10:36:26.043] |W| [unimplemented_impl]: Unimplemented _sceUlobjMgrRegisterLibultProtocolRevision import called.
[10:36:26.043] |I| [run_app]: Module SceUlt (at "app0:sce_module/libult.suprx") module_start returned 0x0
[10:36:27.487] |W| [unimplemented_impl]: Unimplemented sceAppUtilInit import called.
[10:36:27.487] |W| [unimplemented_impl]: Unimplemented sceCommonDialogSetConfigParam import called.
[10:36:27.526] |I| [export_sceIoOpen]: Opening file: app0:misc.dat
[10:36:27.542] |I| [export_sceIoOpen]: Opening file: app0:levels.dat
[10:36:27.550] |I| [export_sceIoOpen]: Opening file: app0:resources.dat
[10:36:27.654] |W| [unimplemented_impl]: Unimplemented sceNpTusInit import called.
[10:36:27.659] |I| [export_sceIoOpen]: Opening file: app0:shaders.dat.psp2
[10:36:27.668] |W| [stubbed_impl]: Stubbed sceGxmMapFragmentUsseMemory import called. (always return success)
[10:36:27.674] |W| [stubbed_impl]: Stubbed sceGxmMapVertexUsseMemory import called. (always return success)
[10:36:27.708] |W| [stubbed_impl]: Stubbed sceGxmGetRenderTargetMemSize import called. (2MB host mem)
[10:36:27.989] |W| [unimplemented_impl]: Unimplemented sceNpBasicInit import called.
[10:36:27.989] |E| [ret_error_impl]: sceNetTerm returned SCE_NET_ERROR_ENOTINIT (0x804101C8)
[10:36:27.989] |W| [stubbed_impl]: Stubbed sceNetCtlTerm import called. (Stub)
[10:36:27.989] |W| [stubbed_impl]: Stubbed sceNetCtlInit import called. (Stub)
[10:36:27.990] |W| [stubbed_impl]: Stubbed sceHttpInit import called. (Fail when called)
[10:36:27.990] |W| [unimplemented_impl]: Unimplemented sceMotionStartSampling import called.
[10:36:27.990] |W| [unimplemented_impl]: Unimplemented sceMotionSetTiltCorrection import called.
[10:36:27.990] |W| [unimplemented_impl]: Unimplemented sceMotionSetDeadband import called.
[10:36:27.990] |W| [unimplemented_impl]: Unimplemented sceMotionReset import called.
[10:36:27.990] |W| [unimplemented_impl]: Unimplemented sceNpGetServiceState import called.
[10:36:27.990] |W| [stubbed_impl]: Stubbed sceNpCheckCallback import called. (Stub)
[10:36:27.991] |W| [stubbed_impl]: Stubbed __sceAppMgrGetAppState import called. (Set to 0.)
[10:36:28.009] |W| [unimplemented_impl]: Unimplemented sceNgsSystemSetFlags import called.
[10:36:28.038] |W| [unimplemented_impl]: Unimplemented sceCommonDialogUpdate import called.
[10:36:28.097] |I| [load_shader_generic]: Generating frag shader 7f7cb5d3d3542ebd3a0da3b50eb4976007a9b8abb4a4d5154d7eacc83e6f7e09
[10:36:28.098] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 7f7cb5d3d3542ebd3a0da3b50eb4976007a9b8abb4a4d5154d7eacc83e6f7e09

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _105)
{
    return unpackHalf2x16(floatBitsToUint(_105));
}

float pack2xF16(vec2 _201)
{
    return uintBitsToFloat(packHalf2x16(_201));
}

void primary_program()
{
    vec2 _187 = vec2(sa[0].x, sa[0].y);
    vec2 _189 = unpack2xF16(_187.x);
    vec2 _191 = unpack2xF16(_187.y);
    vec4 _196 = vec4(_189.x, _189.y, _191.x, _191.y);
    vec2 _213 = vec2(pack2xF16(vec2(_196.x, _196.y)), pack2xF16(vec2(_196.z, _196.w)));
    pa[0] = vec4(_213.x, _213.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _135)
{
    uint _138 = floatBitsToUint(_135);
    return uvec2(bitfieldExtract(_138, 0, 16), bitfieldExtract(_138, 16, 16));
}

void frag_output_finalize()
{
    vec2 _101 = vec2(pa[0].x, pa[0].y);
    vec2 _112 = unpack2xF16(_101.x);
    vec2 _114 = unpack2xF16(_101.y);
    out_color = vec4(_112.x, _112.y, _114.x, _114.y);
    vec2 _131 = vec2(pa[0].x, pa[0].y);
    uvec2 _144 = unpack2xU16(_131.x);
    uvec2 _146 = unpack2xU16(_131.y);
    out_color_ui = uvec4(_144.x, _144.y, _146.x, _146.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    primary_program();
    frag_output_finalize();
}


[10:36:28.115] |I| [load_shader_generic]: Generating vert shader f460d789db98b23153d7dc411b90750a7298a04fc863e6044ebfe3fb833f2be3
[10:36:28.116] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: f460d789db98b23153d7dc411b90750a7298a04fc863e6044ebfe3fb833f2be3

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    internals[0] = vec4(pa[0].x, pa[0].y, 1.0, 1.0) * vec4(1.0);
    vec2 _122 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_122.x, _122.y, outs[0].z, outs[0].w);
    vec2 _132 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _132.x, _132.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
}

void main()
{
    pa[0] = IN_in_position0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:28.139] |E| [compile_program]: Fragment info
-------------
0(32) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:28.184] |I| [load_shader_generic]: Generating frag shader a62c07b42b0dcc4efbaa977b2ce2cdc0af51be692e584207bf356354abe03f61
[10:36:28.185] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: a62c07b42b0dcc4efbaa977b2ce2cdc0af51be692e584207bf356354abe03f61

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _167)
{
    return uintBitsToFloat(packHalf2x16(_167));
}

void primary_program()
{
}

vec2 unpack2xF16(float _88)
{
    return unpackHalf2x16(floatBitsToUint(_88));
}

uvec2 unpack2xU16(float _118)
{
    uint _121 = floatBitsToUint(_118);
    return uvec2(bitfieldExtract(_121, 0, 16), bitfieldExtract(_121, 16, 16));
}

void frag_output_finalize()
{
    vec2 _84 = vec2(pa[0].x, pa[0].y);
    vec2 _95 = unpack2xF16(_84.x);
    vec2 _97 = unpack2xF16(_84.y);
    out_color = vec4(_95.x, _95.y, _97.x, _97.y);
    vec2 _114 = vec2(pa[0].x, pa[0].y);
    uvec2 _127 = unpack2xU16(_114.x);
    uvec2 _129 = unpack2xU16(_114.y);
    out_color_ui = uvec4(_127.x, _127.y, _129.x, _129.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    frag_init();
    vec4 _164 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _177 = vec2(pack2xF16(_164.xy), pack2xF16(_164.zw));
    pa[0] = vec4(_177.x, _177.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:36:28.187] |I| [load_shader_generic]: Generating vert shader 5bb81883dcfee8c8e4b93e4b4dca55cf301303cf4c8a17730c3402dbb6f06579
[10:36:28.192] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 5bb81883dcfee8c8e4b93e4b4dca55cf301303cf4c8a17730c3402dbb6f06579

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _120 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_120.x, _120.y, outs[1].z, outs[1].w);
    vec2 _130 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _130.x, _130.y);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 1.0) * vec4(1.0);
    vec2 _150 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_150.x, _150.y, outs[0].z, outs[0].w);
    vec2 _160 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _160.x, _160.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:28.247] |I| [load_shader_generic]: Generating frag shader 7bb5d764317b6bc752f661e3f436a217a7a36d22e661a5411c15dbd3c292dd4f
[10:36:28.248] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 7bb5d764317b6bc752f661e3f436a217a7a36d22e661a5411c15dbd3c292dd4f

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 1) in vec4 v_Color0;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _161)
{
    return uintBitsToFloat(packHalf2x16(_161));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _89)
{
    return unpackHalf2x16(floatBitsToUint(_89));
}

void primary_program()
{
    vec2 _203 = vec2(pa[0].z, pa[0].w);
    vec2 _205 = unpack2xF16(_203.x);
    vec2 _207 = unpack2xF16(_203.y);
    vec2 _219 = vec2(pa[0].x, pa[0].y);
    vec2 _221 = unpack2xF16(_219.x);
    vec2 _223 = unpack2xF16(_219.y);
    vec4 _229 = vec4(_205.x, _205.y, _207.x, _207.y) * vec4(_221.x, _221.y, _223.x, _223.y);
    vec2 _238 = vec2(pack2xF16(vec2(_229.x, _229.y)), pack2xF16(vec2(_229.z, _229.w)));
    pa[0] = vec4(_238.x, _238.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _119)
{
    uint _122 = floatBitsToUint(_119);
    return uvec2(bitfieldExtract(_122, 0, 16), bitfieldExtract(_122, 16, 16));
}

void frag_output_finalize()
{
    vec2 _85 = vec2(pa[0].x, pa[0].y);
    vec2 _96 = unpack2xF16(_85.x);
    vec2 _98 = unpack2xF16(_85.y);
    out_color = vec4(_96.x, _96.y, _98.x, _98.y);
    vec2 _115 = vec2(pa[0].x, pa[0].y);
    uvec2 _128 = unpack2xU16(_115.x);
    uvec2 _130 = unpack2xU16(_115.y);
    out_color_ui = uvec4(_128.x, _128.y, _130.x, _130.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    vec2 _173 = vec2(pack2xF16(vec2(v_Color0.x, v_Color0.y)), pack2xF16(vec2(v_Color0.z, v_Color0.w)));
    pa[0] = vec4(_173.x, _173.y, pa[0].z, pa[0].w);
    frag_init();
    vec4 _186 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _191 = vec2(pack2xF16(_186.xy), pack2xF16(_186.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _191.x, _191.y);
    primary_program();
    frag_output_finalize();
}


[10:36:28.249] |I| [load_shader_generic]: Generating vert shader 8fca2bd24cea419f662a25e247bb20bbe01e3a625750b46809c511ee4d770a0b
[10:36:28.251] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 8fca2bd24cea419f662a25e247bb20bbe01e3a625750b46809c511ee4d770a0b

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[4];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_colour0;
layout(location = 2) in vec4 IN_in_texcoord0;
layout(location = 1) out vec4 v_Color0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _149 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_149.x, _149.y, outs[1].z, outs[1].w);
    vec2 _159 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _159.x, _159.y);
    vec2 _169 = vec2(pa[2].x, pa[2].y);
    outs[2] = vec4(_169.x, _169.y, outs[2].z, outs[2].w);
    vec2 _179 = vec2(pa[2].z, pa[2].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _179.x, _179.y);
    vec2 _193 = vec2(pa[0].x, pa[0].y);
    vec2 _200 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_193.x, _193.y, _200.x, _200.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _290 = internals[1];
    _290.x = 1.0 / internals[0].w;
    internals[1] = _290;
    vec2 _306 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_306.x, _306.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _327 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_327.x, _327.y, outs[0].z, outs[0].w);
    vec2 _337 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _337.x, _337.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_Color0 = outs[1];
    v_TexCoord0 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 4)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    pa[1] = IN_in_colour0;
    pa[2] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:28.261] |E| [compile_program]: Fragment info
-------------
0(30) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:28.261] |I| [load_shader_generic]: Generating frag shader 07bc3e67449c1dd136cb08a638f782b46a8b813f84d3d637c1b7951197d0c34f
[10:36:28.263] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 07bc3e67449c1dd136cb08a638f782b46a8b813f84d3d637c1b7951197d0c34f

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 1) in vec4 v_Color0;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _183)
{
    return uintBitsToFloat(packHalf2x16(_183));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _111)
{
    return unpackHalf2x16(floatBitsToUint(_111));
}

void primary_program()
{
    vec2 _225 = vec2(pa[0].x, pa[0].y);
    vec2 _227 = unpack2xF16(_225.x);
    vec2 _229 = unpack2xF16(_225.y);
    vec2 _241 = vec2(sa[0].x, sa[0].y);
    vec2 _243 = unpack2xF16(_241.x);
    vec2 _245 = unpack2xF16(_241.y);
    vec2 _257 = vec2(sa[0].z, sa[0].w);
    vec2 _259 = unpack2xF16(_257.x);
    vec2 _261 = unpack2xF16(_257.y);
    vec4 _268 = (vec4(_227.x, _227.y, _229.x, _229.y) * vec4(_243.x, _243.y, _245.x, _245.y)) + vec4(_259.x, _259.y, _261.x, _261.y);
    vec2 _277 = vec2(pack2xF16(vec2(_268.x, _268.y)), pack2xF16(vec2(_268.z, _268.w)));
    pa[0] = vec4(_277.x, _277.y, pa[0].z, pa[0].w);
    vec4 _305 = pa[0];
    _305.y = pack2xF16(vec2(unpack2xF16(pa[0].y).x, unpack2xF16(pa[0].y).y * unpack2xF16(pa[0].w).x));
    pa[0] = _305;
}

uvec2 unpack2xU16(float _141)
{
    uint _144 = floatBitsToUint(_141);
    return uvec2(bitfieldExtract(_144, 0, 16), bitfieldExtract(_144, 16, 16));
}

void frag_output_finalize()
{
    vec2 _107 = vec2(pa[0].x, pa[0].y);
    vec2 _118 = unpack2xF16(_107.x);
    vec2 _120 = unpack2xF16(_107.y);
    out_color = vec4(_118.x, _118.y, _120.x, _120.y);
    vec2 _137 = vec2(pa[0].x, pa[0].y);
    uvec2 _150 = unpack2xU16(_137.x);
    uvec2 _152 = unpack2xU16(_137.y);
    out_color_ui = uvec4(_150.x, _150.y, _152.x, _152.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    vec2 _195 = vec2(pack2xF16(vec2(v_Color0.x, v_Color0.y)), pack2xF16(vec2(v_Color0.z, v_Color0.w)));
    pa[0] = vec4(_195.x, _195.y, pa[0].z, pa[0].w);
    frag_init();
    vec4 _208 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _213 = vec2(pack2xF16(_208.xy), pack2xF16(_208.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _213.x, _213.y);
    primary_program();
    frag_output_finalize();
}


[10:36:28.276] |E| [compile_program]: Fragment info
-------------
0(35) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:28.277] |I| [load_shader_generic]: Generating vert shader e086800498d9edf8b12565c37c003323c6fe1f68cabc3d97c08807ab191d669d
[10:36:28.278] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: e086800498d9edf8b12565c37c003323c6fe1f68cabc3d97c08807ab191d669d

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_colour0;
layout(location = 2) in vec4 IN_in_texcoord0;
layout(location = 1) out vec4 v_Color0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _128 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_128.x, _128.y, outs[1].z, outs[1].w);
    vec2 _138 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _138.x, _138.y);
    vec2 _148 = vec2(pa[2].x, pa[2].y);
    outs[2] = vec4(_148.x, _148.y, outs[2].z, outs[2].w);
    vec2 _158 = vec2(pa[2].z, pa[2].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _158.x, _158.y);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 1.0) * vec4(1.0);
    vec2 _178 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_178.x, _178.y, outs[0].z, outs[0].w);
    vec2 _188 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _188.x, _188.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_Color0 = outs[1];
    v_TexCoord0 = outs[2];
}

void main()
{
    pa[0] = IN_in_position0;
    pa[1] = IN_in_colour0;
    pa[2] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:28.285] |E| [compile_program]: Fragment info
-------------
0(30) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:28.336] |W| [unimplemented_impl]: Unimplemented sceNpScoreInit import called.
[10:36:28.350] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/user/00/trophy/data/NPWR03776_00/TROPUSR.DAT (target path: ux0:/user/00/trophy/data/NPWR03776_00/TROPUSR.DAT)
[10:36:28.350] |W| [io_error_impl]: open_file (create_trophy_context) returned 0x80010002
[10:36:28.353] |W| [stubbed_impl]: Stubbed sceNpTrophyCreateHandle import called. (Stubbed handle with 1)
[10:36:28.365] |E| [ret_error_impl]: sceMsgDialogClose returned SCE_COMMON_DIALOG_ERROR_NOT_SUPPORTED (0x80020405)
[10:36:28.365] |E| [ret_error_impl]: sceMsgDialogTerm returned SCE_COMMON_DIALOG_ERROR_NOT_SUPPORTED (0x80020405)
[10:36:28.508] |I| [load_shader_generic]: Generating frag shader 3933436a9ccdc58b052937f5078b821cebc3e6798f09f7386f806cf6562faaad
[10:36:28.510] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 3933436a9ccdc58b052937f5078b821cebc3e6798f09f7386f806cf6562faaad

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _190)
{
    return uintBitsToFloat(packHalf2x16(_190));
}

vec2 unpack2xF16(float _115)
{
    return unpackHalf2x16(floatBitsToUint(_115));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec2 _246 = unpack2xF16(pa[0].x);
    vec2 _258 = vec2(sa[0].x, sa[0].y);
    vec2 _260 = unpack2xF16(_258.x);
    vec2 _262 = unpack2xF16(_258.y);
    vec2 _274 = vec2(pa[0].z, pa[0].w);
    vec2 _276 = unpack2xF16(_274.x);
    vec2 _278 = unpack2xF16(_274.y);
    vec4 _285 = (vec4(_246.x, _246.x, _246.x, _246.x) * vec4(_260.x, _260.y, _262.x, _262.y)) + vec4(_276.x, _276.y, _278.x, _278.y);
    vec2 _294 = vec2(pack2xF16(vec2(_285.x, _285.y)), pack2xF16(vec2(_285.z, _285.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _294.x, _294.y);
    vec2 _303 = unpack2xF16(pa[0].x);
    vec2 _315 = vec2(sa[0].z, sa[0].w);
    vec2 _317 = unpack2xF16(_315.x);
    vec2 _319 = unpack2xF16(_315.y);
    vec2 _331 = vec2(pa[0].z, pa[0].w);
    vec2 _333 = unpack2xF16(_331.x);
    vec2 _335 = unpack2xF16(_331.y);
    vec4 _342 = (vec4(_303.y, _303.y, _303.y, _303.y) * vec4(_317.x, _317.y, _319.x, _319.y)) + vec4(_333.x, _333.y, _335.x, _335.y);
    vec2 _351 = vec2(pack2xF16(vec2(_342.x, _342.y)), pack2xF16(vec2(_342.z, _342.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _351.x, _351.y);
    vec2 _360 = unpack2xF16(pa[0].y);
    vec2 _372 = vec2(sa[1].x, sa[1].y);
    vec2 _374 = unpack2xF16(_372.x);
    vec2 _376 = unpack2xF16(_372.y);
    vec2 _388 = vec2(pa[0].z, pa[0].w);
    vec2 _390 = unpack2xF16(_388.x);
    vec2 _392 = unpack2xF16(_388.y);
    vec4 _399 = (vec4(_360.x, _360.x, _360.x, _360.x) * vec4(_374.x, _374.y, _376.x, _376.y)) + vec4(_390.x, _390.y, _392.x, _392.y);
    vec2 _408 = vec2(pack2xF16(vec2(_399.x, _399.y)), pack2xF16(vec2(_399.z, _399.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _408.x, _408.y);
    vec2 _417 = unpack2xF16(pa[0].y);
    vec2 _429 = vec2(sa[1].z, sa[1].w);
    vec2 _431 = unpack2xF16(_429.x);
    vec2 _433 = unpack2xF16(_429.y);
    vec2 _445 = vec2(pa[0].z, pa[0].w);
    vec2 _447 = unpack2xF16(_445.x);
    vec2 _449 = unpack2xF16(_445.y);
    vec4 _456 = (vec4(_417.y, _417.y, _417.y, _417.y) * vec4(_431.x, _431.y, _433.x, _433.y)) + vec4(_447.x, _447.y, _449.x, _449.y);
    vec2 _465 = vec2(pack2xF16(vec2(_456.x, _456.y)), pack2xF16(vec2(_456.z, _456.w)));
    r[0] = vec4(_465.x, _465.y, r[0].z, r[0].w);
    vec2 _474 = unpack2xF16(pa[1].x);
    vec2 _483 = unpack2xF16(sa[3].x);
    vec2 _487 = vec2(_474.x, _474.y) + vec2(_483.x, _483.x);
    internals[1] = vec4(_487.x, _487.y, internals[1].z, internals[1].w);
    vec4 _508 = internals[1];
    _508.x = dot(vec3(internals[1].x, internals[1].y, 0.0), vec3(internals[1].x, internals[1].y, 1.0));
    internals[1] = _508;
    vec2 _521 = unpack2xF16(sa[2].x);
    vec2 _530 = unpack2xF16(sa[2].x);
    vec2 _536 = (vec2(internals[1].x, internals[1].x) * vec2(_521.x, _521.x)) + (vec2(0.0) - vec2(_530.y, _530.y));
    vec2 _544 = unpack2xF16(pa[0].y);
    vec2 _549 = vec2(pack2xF16(vec2(_536.x, _536.y)), pack2xF16(vec2(_544.x, _544.y)));
    pa[0] = vec4(_549.x, _549.y, pa[0].z, pa[0].w);
    vec2 _571 = unpack2xF16(pa[0].w);
    vec2 _576 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_571.x, _571.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _576.x, _576.y);
    vec2 _585 = unpack2xF16(pa[0].z);
    vec2 _597 = vec2(sa[2].z, sa[2].w);
    vec2 _599 = unpack2xF16(_597.x);
    vec2 _601 = unpack2xF16(_597.y);
    vec2 _613 = vec2(r[0].x, r[0].y);
    vec2 _615 = unpack2xF16(_613.x);
    vec2 _617 = unpack2xF16(_613.y);
    vec4 _624 = (vec4(_585.x, _585.x, _585.x, _585.x) * vec4(_599.x, _599.y, _601.x, _601.y)) + vec4(_615.x, _615.y, _617.x, _617.y);
    vec2 _633 = vec2(pack2xF16(vec2(_624.x, _624.y)), pack2xF16(vec2(_624.z, _624.w)));
    pa[0] = vec4(_633.x, _633.y, pa[0].z, pa[0].w);
    vec2 _642 = unpack2xF16(pa[0].z);
    vec2 _654 = vec2(r[0].x, r[0].y);
    vec2 _656 = unpack2xF16(_654.x);
    vec2 _658 = unpack2xF16(_654.y);
    vec2 _671 = vec2(pa[0].x, pa[0].y);
    vec2 _673 = unpack2xF16(_671.x);
    vec2 _675 = unpack2xF16(_671.y);
    vec4 _682 = (vec4(_642.x, _642.x, _642.x, _642.x) * (vec4(0.0) - vec4(_656.x, _656.y, _658.x, _658.y))) + vec4(_673.x, _673.y, _675.x, _675.y);
    vec2 _691 = vec2(pack2xF16(vec2(_682.x, _682.y)), pack2xF16(vec2(_682.z, _682.w)));
    pa[0] = vec4(_691.x, _691.y, pa[0].z, pa[0].w);
    vec2 _709 = vec2(pa[0].x, pa[0].y);
    vec2 _711 = unpack2xF16(_709.x);
    vec4 _718 = vec4(1.0, 1.0, 1.0, unpack2xF16(r[0].y).y) * vec4(_711.x, _711.y, unpack2xF16(_709.y).x, 1.0);
    vec2 _727 = vec2(pack2xF16(vec2(_718.x, _718.y)), pack2xF16(vec2(_718.z, _718.w)));
    pa[0] = vec4(_727.x, _727.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _145)
{
    uint _148 = floatBitsToUint(_145);
    return uvec2(bitfieldExtract(_148, 0, 16), bitfieldExtract(_148, 16, 16));
}

void frag_output_finalize()
{
    vec2 _111 = vec2(pa[0].x, pa[0].y);
    vec2 _122 = unpack2xF16(_111.x);
    vec2 _124 = unpack2xF16(_111.y);
    out_color = vec4(_122.x, _122.y, _124.x, _124.y);
    vec2 _141 = vec2(pa[0].x, pa[0].y);
    uvec2 _154 = unpack2xU16(_141.x);
    uvec2 _156 = unpack2xU16(_141.y);
    out_color_ui = uvec4(_154.x, _154.y, _156.x, _156.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    vec4 _67 = sa[3];
    _67.x = -3.0688941478729248046875e-05;
    sa[3] = _67;
    vec2 _185 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _201 = unpack2xF16(pa[1].y);
    vec2 _206 = vec2(pack2xF16(vec2(_185.x, _185.y)), pack2xF16(vec2(_201.x, _201.y)));
    pa[1] = vec4(_206.x, _206.y, pa[1].z, pa[1].w);
    frag_init();
    vec4 _219 = texture(fragTex_sampler2, v_TexCoord0.xy);
    vec2 _224 = vec2(pack2xF16(_219.xy), pack2xF16(_219.zw));
    pa[0] = vec4(_224.x, _224.y, pa[0].z, pa[0].w);
    vec4 _230 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _235 = vec2(pack2xF16(_230.xy), pack2xF16(_230.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _235.x, _235.y);
    primary_program();
    frag_output_finalize();
}


[10:36:28.512] |I| [load_shader_generic]: Generating vert shader 645d9fc7221680c7dde4bb793c5f6918b9714c539ea733595a6a4027cabe94f8
[10:36:28.515] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 645d9fc7221680c7dde4bb793c5f6918b9714c539ea733595a6a4027cabe94f8

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[2];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _158 = sa[3];
    _158.x = (0.0 - sa[1].z) + sa[1].x;
    sa[3] = _158;
    vec2 _173 = vec2(sa[0].z, sa[0].w) * vec2(sa[2].x, sa[2].x);
    sa[4] = vec4(sa[4].x, sa[4].y, _173.x, _173.y);
    vec4 _190 = sa[2];
    _190.y = sa[0].w * sa[2].x;
    sa[2] = _190;
    vec2 _205 = vec2(sa[1].x, sa[1].y) * vec2(sa[2].x, sa[2].x);
    sa[3] = vec4(sa[3].x, sa[3].y, _205.x, _205.y);
    vec4 _222 = sa[4];
    _222.y = sa[1].y * sa[2].x;
    sa[4] = _222;
    vec2 _237 = vec2(sa[1].z, sa[1].w) * vec2(sa[2].x, sa[2].x);
    sa[2] = vec4(sa[2].x, sa[2].y, _237.x, _237.y);
    vec4 _254 = sa[3];
    _254.y = sa[1].w * sa[2].x;
    sa[3] = _254;
    vec2 _269 = vec2(sa[0].x, sa[0].y) * vec2(sa[2].x, sa[2].x);
    sa[0] = vec4(sa[0].x, sa[0].y, _269.x, _269.y);
    vec4 _286 = sa[1];
    _286.y = sa[0].y * sa[2].x;
    sa[1] = _286;
}

void primary_program()
{
    vec2 _296 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _296.x, _296.y);
    p[1] = pa[1].y < 0.5;
    p[0] = pa[1].y > 0.5;
    if (p[0])
    {
        p[0] = pa[1].x < 0.5;
    }
    if (p[1])
    {
        p[1] = pa[1].x > 0.5;
    }
    vec2 _351 = vec2(sa[2].z, sa[2].w);
    vec3 _362 = vec3(_351.x, _351.y, vec2(sa[3].x, sa[3].y).y);
    internals[0] = vec4(_362.x, _362.y, internals[0].z, _362.z);
    if (!p[1])
    {
        vec2 _385 = vec2(sa[3].z, sa[3].w);
        vec3 _396 = vec3(_385.x, _385.y, vec2(sa[4].x, sa[4].y).y);
        internals[0] = vec4(_396.x, _396.y, internals[0].z, _396.z);
    }
    vec2 _414 = vec2(sa[0].z, sa[0].w);
    vec3 _425 = vec3(_414.x, _414.y, vec2(sa[1].x, sa[1].y).y);
    internals[1] = vec4(_425.x, _425.y, internals[1].z, _425.z);
    if (!p[0])
    {
        vec3 _441 = vec3(internals[0].x, internals[0].y, internals[0].w);
        internals[1] = vec4(_441.x, _441.y, internals[1].z, _441.z);
    }
    p[0] = pa[1].y > 0.5;
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 1.0) * vec4(1.0);
    vec2 _468 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_468.x, _468.y, outs[0].z, outs[0].w);
    vec2 _478 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _478.x, _478.y);
    if (p[0])
    {
        p[0] = pa[1].x > 0.5;
    }
    vec2 _517 = vec2(vec2(sa[4].z, sa[4].w).x, vec2(sa[4].z, sa[4].w).y);
    outs[2] = vec4(_517.x, _517.y, outs[2].z, outs[2].w);
    if (!p[0])
    {
        vec2 _532 = vec2(internals[1].x, internals[1].y);
        outs[2] = vec4(_532.x, _532.y, outs[2].z, outs[2].w);
    }
    vec4 _544 = outs[2];
    _544.w = sa[2].y;
    outs[2] = _544;
    if (!p[0])
    {
        vec4 _557 = outs[2];
        _557.w = internals[1].w;
        outs[2] = _557;
    }
    vec4 _565 = outs[2];
    _565.z = sa[3].x;
    outs[2] = _565;
    vec2 _572 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_572.x, _572.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    vec4 _65 = sa[2];
    _65.x = 0.00999999977648258209228515625;
    sa[2] = _65;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:28.518] |I| [export_sceIoOpen]: Opening file: app0:settings.ini
[10:36:28.518] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/settings.ini (target path: app0:settings.ini)
[10:36:28.518] |W| [io_error_impl]: open_file (sceIoOpen) returned 0x80010002
[10:36:28.530] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/user/00/savedata/PCSB00189/SlotParam_0.bin (target path: savedata0:/SlotParam_0.bin)
[10:36:28.530] |W| [io_error_impl]: open_file (sceAppUtilSaveDataSlotGetParam) returned 0x80010002
[10:36:28.530] |E| [ret_error_impl]: sceAppUtilSaveDataSlotGetParam returned SCE_APPUTIL_ERROR_SAVEDATA_SLOT_NOT_FOUND (0x80100641)
[10:36:28.544] |E| [compile_program]: Vertex info
-----------
0(33) : warning C7050: "internals[0].z" might be used before being initialized
0(33) : warning C7050: "internals[1].z" might be used before being initialized

Fragment info
-------------
0(35) : warning C7050: "pa[0].zw" might be used before being initialized
0(35) : warning C7050: "pa[1].yzw" might be used before being initialized
0(38) : warning C7050: "r[0].zw" might be used before being initialized
0(37) : warning C7050: "internals[1].zw" might be used before being initialized


[10:36:28.549] |W| [unimplemented_impl]: Unimplemented sceNpCommerce2Init import called.
[10:36:28.551] |W| [unimplemented_impl]: Unimplemented sceNpActivityInit import called.
[10:36:28.555] |I| [export_sceIoOpen]: Opening file: app0:preloadTextures.ini
[10:36:28.555] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/app/PCSB00189/preloadTextures.ini (target path: app0:preloadTextures.ini)
[10:36:28.555] |W| [io_error_impl]: open_file (sceIoOpen) returned 0x80010002
[10:36:33.862] |I| [export_sceIoOpen]: Opening file: app0:media/audio.fev.psp2
[10:36:33.961] |W| [unimplemented_impl]: Unimplemented sceMotionGetState import called.
[10:36:34.078] |I| [export_sceIoOpen]: Opening file: app0:media/effects.fsb.psp2
[10:36:34.104] |I| [load_shader_generic]: Generating frag shader 548dbbde7d946c7a3d8b7abf9142dc89b5c93401e2c7141f4e53321e13103976
[10:36:34.106] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 548dbbde7d946c7a3d8b7abf9142dc89b5c93401e2c7141f4e53321e13103976

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _105)
{
    return unpackHalf2x16(floatBitsToUint(_105));
}

float pack2xF16(vec2 _218)
{
    return uintBitsToFloat(packHalf2x16(_218));
}

void secondary_program()
{
    vec2 _187 = vec2(sa[0].z, sa[0].w);
    vec2 _189 = unpack2xF16(_187.x);
    vec2 _191 = unpack2xF16(_187.y);
    vec2 _203 = vec2(sa[0].x, sa[0].y);
    vec2 _205 = unpack2xF16(_203.x);
    vec2 _207 = unpack2xF16(_203.y);
    vec4 _213 = vec4(_189.x, _189.y, _191.x, _191.y) + vec4(_205.x, _205.y, _207.x, _207.y);
    vec2 _230 = vec2(pack2xF16(vec2(_213.x, _213.y)), pack2xF16(vec2(_213.z, _213.w)));
    sa[0] = vec4(_230.x, _230.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _243 = vec2(sa[0].x, sa[0].y);
    vec2 _245 = unpack2xF16(_243.x);
    vec2 _247 = unpack2xF16(_243.y);
    vec4 _252 = vec4(_245.x, _245.y, _247.x, _247.y);
    vec2 _261 = vec2(pack2xF16(vec2(_252.x, _252.y)), pack2xF16(vec2(_252.z, _252.w)));
    pa[0] = vec4(_261.x, _261.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _135)
{
    uint _138 = floatBitsToUint(_135);
    return uvec2(bitfieldExtract(_138, 0, 16), bitfieldExtract(_138, 16, 16));
}

void frag_output_finalize()
{
    vec2 _101 = vec2(pa[0].x, pa[0].y);
    vec2 _112 = unpack2xF16(_101.x);
    vec2 _114 = unpack2xF16(_101.y);
    out_color = vec4(_112.x, _112.y, _114.x, _114.y);
    vec2 _131 = vec2(pa[0].x, pa[0].y);
    uvec2 _144 = unpack2xU16(_131.x);
    uvec2 _146 = unpack2xU16(_131.y);
    out_color_ui = uvec4(_144.x, _144.y, _146.x, _146.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:34.107] |I| [load_shader_generic]: Generating vert shader a171a5f599d992a1c27551bfbb5e3ffb4d076c48ad0ec92d10abe67a849b587e
[10:36:34.109] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: a171a5f599d992a1c27551bfbb5e3ffb4d076c48ad0ec92d10abe67a849b587e

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _138 = vec2(pa[0].x, pa[0].y);
    vec2 _145 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_138.x, _138.y, _145.x, _145.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _235 = internals[1];
    _235.x = 1.0 / internals[0].w;
    internals[1] = _235;
    vec2 _251 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    pa[0] = vec4(_251.x, _251.y, pa[0].z, pa[0].w);
    vec4 _268 = pa[0];
    _268.z = sa[4].x + internals[0].z;
    pa[0] = _268;
    internals[0] = vec4(pa[0].x, pa[0].y, pa[0].z, 1.0) * vec4(1.0);
    vec2 _286 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_286.x, _286.y, outs[0].z, outs[0].w);
    vec2 _296 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _296.x, _296.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:34.124] |E| [compile_program]: Fragment info
-------------
0(32) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:38.917] |I| [load_shader_generic]: Generating frag shader 88fd9a26da45dad306bec81929ce77a97a7ebee6c44030680a9be917d36daac1
[10:36:38.918] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 88fd9a26da45dad306bec81929ce77a97a7ebee6c44030680a9be917d36daac1

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _167)
{
    return uintBitsToFloat(packHalf2x16(_167));
}

void primary_program()
{
}

vec2 unpack2xF16(float _88)
{
    return unpackHalf2x16(floatBitsToUint(_88));
}

uvec2 unpack2xU16(float _118)
{
    uint _121 = floatBitsToUint(_118);
    return uvec2(bitfieldExtract(_121, 0, 16), bitfieldExtract(_121, 16, 16));
}

void frag_output_finalize()
{
    vec2 _84 = vec2(pa[0].x, pa[0].y);
    vec2 _95 = unpack2xF16(_84.x);
    vec2 _97 = unpack2xF16(_84.y);
    out_color = vec4(_95.x, _95.y, _97.x, _97.y);
    vec2 _114 = vec2(pa[0].x, pa[0].y);
    uvec2 _127 = unpack2xU16(_114.x);
    uvec2 _129 = unpack2xU16(_114.y);
    out_color_ui = uvec4(_127.x, _127.y, _129.x, _129.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    frag_init();
    vec4 _164 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _177 = vec2(pack2xF16(_164.xy), pack2xF16(_164.zw));
    pa[0] = vec4(_177.x, _177.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:36:38.919] |I| [load_shader_generic]: Generating vert shader c0efddf19e6cdb55b02b0778101f664470cc0b91e4767b2134be0e869afd7428
[10:36:38.920] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: c0efddf19e6cdb55b02b0778101f664470cc0b91e4767b2134be0e869afd7428

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[4];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _141 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_141.x, _141.y, outs[1].z, outs[1].w);
    vec2 _151 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _151.x, _151.y);
    vec2 _165 = vec2(pa[0].x, pa[0].y);
    vec2 _172 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_165.x, _165.y, _172.x, _172.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _262 = internals[1];
    _262.x = 1.0 / internals[0].w;
    internals[1] = _262;
    vec2 _278 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_278.x, _278.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _299 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_299.x, _299.y, outs[0].z, outs[0].w);
    vec2 _309 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _309.x, _309.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 4)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:38.931] |I| [load_shader_generic]: Generating frag shader aa1dff8236a5ad4cfdc1db76054b2786fe16cd0e62d2e05fb76ff6e4faa38911
[10:36:38.935] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: aa1dff8236a5ad4cfdc1db76054b2786fe16cd0e62d2e05fb76ff6e4faa38911

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 11) in vec4 v_TexCoord7;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 5) in vec4 v_TexCoord1;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 7) in vec4 v_TexCoord3;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 9) in vec4 v_TexCoord5;
layout(location = 10) in vec4 v_TexCoord6;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _211)
{
    return uintBitsToFloat(packHalf2x16(_211));
}

vec2 unpack2xF16(float _136)
{
    return unpackHalf2x16(floatBitsToUint(_136));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _330 = unpack2xF16(sa[0].y);
    vec2 _341 = vec2(sa[0].z, sa[0].w);
    vec2 _343 = unpack2xF16(_341.x);
    vec3 _350 = vec3(_330.x, _330.x, _330.x) * vec3(_343.x, _343.y, unpack2xF16(_341.y).x);
    vec2 _363 = vec2(pack2xF16(vec2(_350.x, _350.y)), pack2xF16(vec2(_350.z, unpack2xF16(sa[0].y).y)));
    sa[0] = vec4(_363.x, _363.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _395 = unpack2xF16(pa[0].w);
    vec2 _400 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].x).y, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_395.x, _395.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _400.x, _400.y);
    vec2 _429 = unpack2xF16(pa[0].w);
    vec2 _434 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].z).y, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_429.x, _429.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _434.x, _434.y);
    vec2 _463 = unpack2xF16(pa[0].w);
    vec2 _468 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[2].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_463.x, _463.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _468.x, _468.y);
    vec2 _497 = unpack2xF16(pa[0].w);
    vec2 _502 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[2].z).y, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_497.x, _497.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _502.x, _502.y);
    vec2 _511 = unpack2xF16(pa[0].z);
    vec2 _520 = unpack2xF16(pa[3].x);
    vec2 _529 = unpack2xF16(sa[4].x);
    vec2 _534 = (vec2(_511.x, _511.x) * vec2(_520.y, _520.y)) + vec2(_529.x, _529.x);
    vec2 _542 = unpack2xF16(pa[1].y);
    vec2 _547 = vec2(pack2xF16(vec2(_534.x, _534.y)), pack2xF16(vec2(_542.x, _542.y)));
    pa[1] = vec4(_547.x, _547.y, pa[1].z, pa[1].w);
    p[1] = unpack2xF16(pa[1].x).x >= 0.0;
    if (!p[1])
    {
        discard;
    }
    vec2 _592 = unpack2xF16(pa[1].y);
    vec2 _597 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[3].x).y, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_592.x, _592.y)));
    pa[1] = vec4(_597.x, _597.y, pa[1].z, pa[1].w);
    vec2 _606 = unpack2xF16(pa[0].x);
    vec4 _611 = texture(fragTex_sampler2, vec2(_606.x, _606.y));
    vec2 _620 = vec2(pack2xF16(vec2(_611.x, _611.y)), pack2xF16(vec2(_611.z, _611.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _620.x, _620.y);
    vec2 _629 = unpack2xF16(pa[0].y);
    vec2 _632 = vec2(_629.x, _629.y);
    internals[0] = vec4(_632.x, _632.y, internals[0].z, internals[0].w);
    vec4 _653 = internals[0];
    _653.x = dot(vec3(internals[0].x, internals[0].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
    internals[0] = _653;
    vec2 _670 = unpack2xF16(pa[0].y);
    vec2 _675 = vec2(pack2xF16(vec2(inversesqrt(internals[0].x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_670.x, _670.y)));
    pa[0] = vec4(_675.x, _675.y, pa[0].z, pa[0].w);
    vec2 _698 = unpack2xF16(pa[0].y);
    vec2 _703 = vec2(pack2xF16(vec2(1.0 / (0.0 - unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_698.x, _698.y)));
    pa[0] = vec4(_703.x, _703.y, pa[0].z, pa[0].w);
    vec2 _732 = unpack2xF16(pa[0].y);
    vec2 _737 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(sa[3].w).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_732.x, _732.y)));
    pa[0] = vec4(_737.x, _737.y, pa[0].z, pa[0].w);
    vec2 _766 = unpack2xF16(pa[0].y);
    vec2 _771 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[3].z).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_766.x, _766.y)));
    pa[0] = vec4(_771.x, _771.y, pa[0].z, pa[0].w);
    vec2 _793 = unpack2xF16(pa[0].y);
    vec2 _798 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_793.x, _793.y)));
    pa[0] = vec4(_798.x, _798.y, pa[0].z, pa[0].w);
    vec2 _807 = unpack2xF16(pa[0].z);
    vec2 _816 = unpack2xF16(sa[1].y);
    vec2 _825 = unpack2xF16(pa[0].x);
    vec2 _830 = (vec2(_807.x, _807.x) * vec2(_816.x, _816.x)) + vec2(_825.x, _825.x);
    vec2 _838 = unpack2xF16(pa[0].y);
    vec2 _843 = vec2(pack2xF16(vec2(_830.x, _830.y)), pack2xF16(vec2(_838.x, _838.y)));
    pa[0] = vec4(_843.x, _843.y, pa[0].z, pa[0].w);
    vec2 _856 = vec2(unpack2xF16(pa[0].x).x, 0.5) * vec2(1.0);
    vec2 _864 = unpack2xF16(pa[0].y);
    vec2 _869 = vec2(pack2xF16(vec2(_856.x, _856.y)), pack2xF16(vec2(_864.x, _864.y)));
    pa[0] = vec4(_869.x, _869.y, pa[0].z, pa[0].w);
    vec2 _878 = unpack2xF16(pa[0].x);
    vec4 _883 = texture(fragTex_sampler0, vec2(_878.x, _878.y));
    vec2 _892 = vec2(pack2xF16(vec2(_883.x, _883.y)), pack2xF16(vec2(_883.z, _883.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _892.x, _892.y);
    vec2 _902 = vec2(sa[0].x, sa[0].y);
    vec2 _904 = unpack2xF16(_902.x);
    vec2 _916 = unpack2xF16(pa[1].x);
    vec3 _921 = vec3(_904.x, _904.y, unpack2xF16(_902.y).x) * vec3(_916.x, _916.x, _916.x);
    vec2 _934 = vec2(pack2xF16(vec2(_921.x, _921.y)), pack2xF16(vec2(_921.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_934.x, _934.y, pa[0].z, pa[0].w);
    vec2 _944 = vec2(pa[0].x, pa[0].y);
    vec2 _946 = unpack2xF16(_944.x);
    vec2 _959 = vec2(pa[0].z, pa[0].w);
    vec2 _961 = unpack2xF16(_959.x);
    vec3 _968 = vec3(_946.x, _946.y, unpack2xF16(_944.y).x) * vec3(_961.x, _961.y, unpack2xF16(_959.y).x);
    vec2 _981 = vec2(pack2xF16(vec2(_968.x, _968.y)), pack2xF16(vec2(_968.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_981.x, _981.y, pa[0].z, pa[0].w);
    vec2 _991 = vec2(pa[0].x, pa[0].y);
    vec2 _993 = unpack2xF16(_991.x);
    vec4 _1001 = vec4(_993.x, _993.y, unpack2xF16(_991.y).x, 1.0) * vec4(1.0);
    vec2 _1010 = vec2(pack2xF16(vec2(_1001.x, _1001.y)), pack2xF16(vec2(_1001.z, _1001.w)));
    pa[0] = vec4(_1010.x, _1010.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _166)
{
    uint _169 = floatBitsToUint(_166);
    return uvec2(bitfieldExtract(_169, 0, 16), bitfieldExtract(_169, 16, 16));
}

void frag_output_finalize()
{
    vec2 _132 = vec2(pa[0].x, pa[0].y);
    vec2 _143 = unpack2xF16(_132.x);
    vec2 _145 = unpack2xF16(_132.y);
    out_color = vec4(_143.x, _143.y, _145.x, _145.y);
    vec2 _162 = vec2(pa[0].x, pa[0].y);
    uvec2 _175 = unpack2xU16(_162.x);
    uvec2 _177 = unpack2xU16(_162.y);
    out_color_ui = uvec4(_175.x, _175.y, _177.x, _177.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(vec2(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41).x, vec2(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41).y, sa[1].z, sa[1].w);
    sa[3] = vec4(sa[3].x, sa[3].y, vec3(2.1523944412029190209388486399333e-41, 2.0950813340120340027380680999768e-41, 6.6006762863556183308791358291288e-41).x, vec3(2.1523944412029190209388486399333e-41, 2.0950813340120340027380680999768e-41, 6.6006762863556183308791358291288e-41).y);
    sa[4] = vec4(vec3(2.1523944412029190209388486399333e-41, 2.0950813340120340027380680999768e-41, 6.6006762863556183308791358291288e-41).z, sa[4].y, sa[4].z, sa[4].w);
    vec2 _206 = vec2(v_TexCoord7.x, v_TexCoord7.y);
    vec2 _222 = unpack2xF16(pa[0].y);
    vec2 _227 = vec2(pack2xF16(vec2(_206.x, _206.y)), pack2xF16(vec2(_222.x, _222.y)));
    pa[0] = vec4(_227.x, _227.y, pa[0].z, pa[0].w);
    vec2 _234 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _242 = unpack2xF16(pa[0].z);
    vec2 _247 = vec2(pack2xF16(vec2(_234.x, _234.y)), pack2xF16(vec2(_242.x, _242.y)));
    pa[0] = vec4(pa[0].x, _247.x, _247.y, pa[0].w);
    frag_init();
    vec4 _259 = texture(fragTex_sampler1, v_TexCoord1.xy);
    vec2 _264 = vec2(pack2xF16(_259.xy), pack2xF16(_259.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _264.x, _264.y);
    vec4 _270 = texture(fragTex_sampler1, v_TexCoord2.xy);
    vec2 _275 = vec2(pack2xF16(_270.xy), pack2xF16(_270.zw));
    pa[1] = vec4(_275.x, _275.y, pa[1].z, pa[1].w);
    vec4 _281 = texture(fragTex_sampler1, v_TexCoord3.xy);
    vec2 _286 = vec2(pack2xF16(_281.xy), pack2xF16(_281.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _286.x, _286.y);
    vec4 _292 = texture(fragTex_sampler1, v_TexCoord4.xy);
    vec2 _297 = vec2(pack2xF16(_292.xy), pack2xF16(_292.zw));
    pa[2] = vec4(_297.x, _297.y, pa[2].z, pa[2].w);
    vec4 _303 = texture(fragTex_sampler1, v_TexCoord5.xy);
    vec2 _308 = vec2(pack2xF16(_303.xy), pack2xF16(_303.zw));
    pa[2] = vec4(pa[2].x, pa[2].y, _308.x, _308.y);
    vec4 _314 = texture(fragTex_sampler1, v_TexCoord6.xy);
    vec2 _319 = vec2(pack2xF16(_314.xy), pack2xF16(_314.zw));
    pa[3] = vec4(_319.x, _319.y, pa[3].z, pa[3].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:38.937] |I| [load_shader_generic]: Generating vert shader 62ab9700847b67aeffb73885dd3c968128f12477c1a4962264e74f7d6a4e887b
[10:36:38.938] |E| [operator()]: Missing implementation for DUAL FSUBFLR.
[10:36:38.951] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 62ab9700847b67aeffb73885dd3c968128f12477c1a4962264e74f7d6a4e887b

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[11];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
layout(location = 11) out vec4 v_TexCoord7;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _241 = sa[4];
    _241.z = (sa[10].y * (0.0 - sa[17].y)) + sa[17].w;
    sa[4] = _241;
    vec4 _255 = internals[0];
    _255.x = fract(sa[4].z);
    internals[0] = _255;
    vec4 _275 = internals[1];
    _275.x = (internals[0].x * sa[17].x) + sa[16].w;
    internals[1] = _275;
    vec4 _290 = internals[2];
    _290.x = (internals[1].x * internals[1].x) + 0.0;
    internals[2] = _290;
    vec4 _310 = internals[0];
    _310.x = (internals[2].x * sa[16].z) + sa[16].y;
    internals[0] = _310;
    vec4 _331 = internals[0];
    _331.x = (internals[0].x * internals[2].x) + (0.0 - sa[16].x);
    internals[0] = _331;
    vec4 _351 = internals[0];
    _351.x = (internals[0].x * internals[2].x) + sa[17].w;
    internals[0] = _351;
    vec4 _366 = sa[4];
    _366.z = (internals[1].x * internals[0].x) + 0.0;
    sa[4] = _366;
    vec4 _386 = internals[0];
    _386.x = (internals[2].x * sa[15].z) + sa[15].y;
    internals[0] = _386;
    vec4 _407 = internals[0];
    _407.x = (internals[0].x * internals[2].x) + (0.0 - sa[15].w);
    internals[0] = _407;
    vec4 _427 = internals[1];
    _427.x = (internals[0].x * internals[2].x) + sa[17].z;
    internals[1] = _427;
    vec4 _441 = internals[0];
    _441.x = sa[4].z * sa[4].z;
    internals[0] = _441;
    vec4 _461 = internals[0];
    _461.x = (sa[4].z * sa[4].z) + internals[0].x;
    internals[0] = _461;
    vec4 _477 = sa[18];
    _477.x = (1.0 * sa[17].z) + (0.0 - internals[0].x);
    sa[18] = _477;
    vec4 _492 = internals[0];
    _492.x = (internals[1].x * sa[4].z) + 0.0;
    internals[0] = _492;
    vec4 _513 = sa[9];
    _513.x = (internals[1].x * sa[4].z) + internals[0].x;
    sa[9] = _513;
    vec4 _527 = sa[8];
    _527.z = sa[9].z * sa[9].w;
    sa[8] = _527;
    vec4 _542 = internals[0];
    _542.x = (0.0 - sa[10].z) * sa[10].w;
    internals[0] = _542;
    vec4 _557 = sa[8];
    _557.x = (internals[0].x * sa[14].y) + 0.0;
    sa[8] = _557;
    vec4 _575 = sa[7];
    _575.z = fract(abs(sa[8].x));
    sa[7] = _575;
    vec4 _595 = internals[0];
    _595.x = (sa[10].y * sa[17].y) + sa[17].w;
    internals[0] = _595;
    vec4 _609 = internals[0];
    _609.x = fract(internals[0].x);
    internals[0] = _609;
    vec4 _629 = sa[6];
    _629.z = (internals[0].x * sa[17].x) + sa[16].w;
    sa[6] = _629;
    vec4 _643 = sa[5];
    _643.z = sa[6].z * sa[6].z;
    sa[5] = _643;
    vec4 _653 = sa[4];
    _653.z = (0.0 - sa[7].z) * 1.0;
    sa[4] = _653;
}

void primary_program()
{
    vec4 _670 = outs[0];
    _670.x = sa[4].x * pa[0].x;
    outs[0] = _670;
    vec4 _690 = internals[0];
    _690.x = (pa[0].y * sa[5].x) + outs[0].x;
    internals[0] = _690;
    vec4 _710 = internals[0];
    _710.x = (pa[0].z * sa[6].x) + internals[0].x;
    internals[0] = _710;
    vec4 _730 = internals[0];
    _730.x = (pa[0].w * sa[7].x) + internals[0].x;
    internals[0] = _730;
    vec4 _750 = internals[0];
    _750.x = (internals[0].x * sa[9].y) + sa[8].z;
    internals[0] = _750;
    vec4 _765 = internals[0];
    _765.x = (internals[0].x * sa[13].w) + 0.0;
    internals[0] = _765;
    vec4 _785 = internals[0];
    _785.x = (internals[0].x * sa[17].y) + sa[17].w;
    internals[0] = _785;
    vec4 _799 = internals[0];
    _799.x = fract(internals[0].x);
    internals[0] = _799;
    vec4 _819 = internals[1];
    _819.x = (internals[0].x * sa[17].x) + sa[16].w;
    internals[1] = _819;
    vec4 _834 = r[0];
    _834.x = (internals[1].x * internals[1].x) + 0.0;
    r[0] = _834;
    vec4 _854 = internals[0];
    _854.x = (r[0].x * sa[16].z) + sa[16].y;
    internals[0] = _854;
    vec4 _875 = internals[0];
    _875.x = (internals[0].x * r[0].x) + (0.0 - sa[16].x);
    internals[0] = _875;
    vec4 _895 = internals[0];
    _895.x = (internals[0].x * r[0].x) + sa[17].w;
    internals[0] = _895;
    vec4 _910 = internals[2];
    _910.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _910;
    vec4 _930 = internals[0];
    _930.x = (r[0].x * sa[15].z) + sa[15].y;
    internals[0] = _930;
    vec4 _951 = internals[0];
    _951.x = (r[0].x * internals[0].x) + (0.0 - sa[15].w);
    internals[0] = _951;
    vec4 _971 = internals[0];
    _971.x = (r[0].x * internals[0].x) + sa[17].z;
    internals[0] = _971;
    vec2 _986 = vec2(internals[0].x, internals[0].x) * vec2(internals[2].x, internals[2].x);
    vec4 _989 = pa[0];
    pa[0] = vec4(_986.x, _986.y, pa[0].z, pa[0].w);
    internals[1] = _989;
    vec4 _1014 = internals[0];
    _1014.x = (internals[0].x * internals[2].x) + pa[0].x;
    internals[0] = _1014;
    vec4 _1029 = internals[0];
    _1029.x = (1.0 * sa[14].z) + internals[0].x;
    internals[0] = _1029;
    vec4 _1044 = internals[0];
    _1044.x = (internals[0].x * sa[8].w) + 0.0;
    internals[0] = _1044;
    vec4 _1059 = internals[0];
    _1059.x = (internals[0].x * pa[1].y) + 0.0;
    internals[0] = _1059;
    vec4 _1079 = internals[0];
    _1079.x = (internals[0].x * pa[1].y) + internals[1].x;
    internals[0] = _1079;
    internals[0] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[0] = (vec4(internals[1].y, internals[1].y, internals[1].y, internals[1].y) * sa[1]) + internals[0];
    internals[0] = (vec4(internals[1].z, internals[1].z, internals[1].z, internals[1].z) * sa[2]) + internals[0];
    internals[0] = (vec4(internals[1].w, internals[1].w, internals[1].w, internals[1].w) * sa[3]) + internals[0];
    vec4 _1163 = outs[0];
    _1163.y = 1.0 / internals[0].w;
    outs[0] = _1163;
    vec4 _1172 = internals[1];
    _1172.x = sa[8].x;
    internals[1] = _1172;
    vec4 _1193 = outs[7];
    _1193.z = (internals[1].x < 0.0) ? sa[4].z : sa[7].z;
    outs[7] = _1193;
    vec4 _1207 = r[1];
    _1207.x = sa[8].x * sa[12].w;
    r[1] = _1207;
    vec4 _1215 = pa[0];
    _1215.y = sa[12].z;
    pa[0] = _1215;
    vec4 _1235 = pa[0];
    _1235.x = (pa[0].y * sa[8].x) + sa[14].y;
    pa[0] = _1235;
    vec4 _1243 = internals[1];
    _1243.x = sa[12].y;
    internals[1] = _1243;
    vec4 _1263 = r[0];
    _1263.x = (internals[1].x * sa[8].x) + sa[12].x;
    r[0] = _1263;
    vec4 _1271 = pa[0];
    _1271.y = sa[11].w;
    pa[0] = _1271;
    vec4 _1291 = r[1];
    _1291.z = (pa[0].y * sa[8].x) + sa[11].z;
    r[1] = _1291;
    vec4 _1309 = internals[2];
    _1309.x = fract(abs(pa[0].x));
    internals[2] = _1309;
    vec4 _1327 = outs[0];
    _1327.x = fract(abs(r[0].x));
    outs[0] = _1327;
    vec4 _1345 = outs[0];
    _1345.z = fract(abs(r[1].x));
    outs[0] = _1345;
    vec4 _1363 = outs[1];
    _1363.z = fract(abs(r[1].z));
    outs[1] = _1363;
    vec4 _1374 = internals[1];
    _1374.x = (internals[2].x * (0.0 - 1.0)) + 0.0;
    internals[1] = _1374;
    vec4 _1394 = outs[6];
    _1394.z = (pa[0].x < 0.0) ? internals[1].x : internals[2].x;
    outs[6] = _1394;
    vec4 _1408 = internals[1];
    _1408.x = sa[15].x * pa[0].x;
    internals[1] = _1408;
    vec4 _1428 = internals[1];
    _1428.x = (internals[1].x * sa[17].y) + sa[17].w;
    internals[1] = _1428;
    vec4 _1442 = internals[1];
    _1442.x = fract(internals[1].x);
    internals[1] = _1442;
    vec4 _1462 = internals[2];
    _1462.x = (internals[1].x * sa[17].x) + sa[16].w;
    internals[2] = _1462;
    vec4 _1477 = pa[0];
    _1477.x = (internals[2].x * internals[2].x) + 0.0;
    pa[0] = _1477;
    vec4 _1497 = internals[1];
    _1497.x = (pa[0].x * sa[16].z) + sa[16].y;
    internals[1] = _1497;
    vec4 _1518 = internals[1];
    _1518.x = (pa[0].x * internals[1].x) + (0.0 - sa[16].x);
    internals[1] = _1518;
    vec4 _1538 = internals[1];
    _1538.x = (pa[0].x * internals[1].x) + sa[17].w;
    internals[1] = _1538;
    vec4 _1553 = pa[0];
    _1553.z = (internals[1].x * internals[2].x) + 0.0;
    pa[0] = _1553;
    vec4 _1573 = internals[1];
    _1573.x = (pa[0].x * sa[15].z) + sa[15].y;
    internals[1] = _1573;
    vec4 _1594 = internals[1];
    _1594.x = (internals[1].x * pa[0].x) + (0.0 - sa[15].w);
    internals[1] = _1594;
    vec4 _1614 = pa[0];
    _1614.w = (internals[1].x * pa[0].x) + sa[17].z;
    pa[0] = _1614;
    vec4 _1624 = internals[1];
    _1624.x = (0.0 - outs[0].x) * 1.0;
    internals[1] = _1624;
    vec4 _1644 = outs[4];
    _1644.x = (r[0].x < 0.0) ? internals[1].x : outs[0].x;
    outs[4] = _1644;
    vec2 _1659 = vec2(pa[0].z, pa[0].z) * vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_1659.x, _1659.y, pa[0].z, pa[0].w);
    vec4 _1682 = internals[2];
    _1682.x = (pa[0].z * pa[0].z) + pa[0].x;
    internals[2] = _1682;
    vec4 _1702 = internals[1];
    _1702.x = (pa[0].z * pa[0].w) + pa[0].y;
    internals[1] = _1702;
    vec4 _1718 = internals[1];
    _1718.y = (1.0 * sa[17].z) + (0.0 - internals[2].x);
    internals[1] = _1718;
    vec4 _1732 = internals[2];
    _1732.x = sa[15].x * r[0].x;
    internals[2] = _1732;
    vec4 _1752 = internals[2];
    _1752.x = (internals[2].x * sa[17].y) + sa[17].w;
    internals[2] = _1752;
    vec4 _1787 = internals[2];
    _1787.x = (internals[1].x * sa[17].x) + sa[16].w;
    internals[2] = _1787;
    vec4 _1795 = internals[1];
    _1795.x = sa[16].z;
    internals[1] = _1795;
    vec4 _1815 = internals[1];
    _1815.x = (internals[1].x * sa[5].z) + sa[16].y;
    internals[1] = _1815;
    vec4 _1836 = internals[1];
    _1836.x = (internals[1].x * sa[5].z) + (0.0 - sa[16].x);
    internals[1] = _1836;
    vec4 _1856 = internals[1];
    _1856.x = (internals[1].x * sa[5].z) + sa[17].w;
    internals[1] = _1856;
    vec4 _1881 = pa[0];
    _1881.z = sa[6].z * internals[1].x;
    pa[0] = _1881;
    vec4 _1884 = internals[1];
    _1884.x = internals[2].x * internals[2].x;
    internals[1] = _1884;
    vec4 _1892 = pa[0];
    _1892.y = sa[15].z;
    pa[0] = _1892;
    vec4 _1912 = pa[0];
    _1912.x = (pa[0].y * sa[5].z) + sa[15].y;
    pa[0] = _1912;
    vec4 _1933 = pa[0];
    _1933.x = (pa[0].x * sa[5].z) + (0.0 - sa[15].w);
    pa[0] = _1933;
    vec4 _1953 = pa[0];
    _1953.w = (pa[0].x * sa[5].z) + sa[17].z;
    pa[0] = _1953;
    vec2 _1968 = vec2(pa[0].z, pa[0].z) * vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_1968.x, _1968.y, pa[0].z, pa[0].w);
    vec4 _1991 = pa[0];
    _1991.x = (pa[0].z * pa[0].z) + pa[0].x;
    pa[0] = _1991;
    vec4 _2006 = outs[0];
    _2006.x = (0.0 - pa[0].x) + sa[17].z;
    outs[0] = _2006;
    vec4 _2026 = r[0];
    _2026.x = (pa[0].w * pa[0].z) + pa[0].y;
    r[0] = _2026;
    vec4 _2040 = pa[0];
    _2040.z = sa[14].x + sa[10].x;
    pa[0] = _2040;
    vec4 _2054 = pa[0];
    _2054.x = pa[1].x * outs[0].x;
    pa[0] = _2054;
    vec4 _2075 = pa[0];
    _2075.x = (r[0].x * (0.0 - pa[1].y)) + pa[0].x;
    pa[0] = _2075;
    vec4 _2089 = pa[0];
    _2089.x = min(pa[0].x, sa[17].z);
    pa[0] = _2089;
    vec4 _2098 = pa[0];
    _2098.x = max(pa[0].x, 0.0);
    pa[0] = _2098;
    vec4 _2112 = pa[0];
    _2112.z = pa[0].z + pa[0].x;
    pa[0] = _2112;
    vec4 _2132 = pa[0];
    _2132.x = (internals[1].x * sa[16].z) + sa[16].y;
    pa[0] = _2132;
    vec4 _2153 = pa[0];
    _2153.x = (pa[0].x * internals[1].x) + (0.0 - sa[16].x);
    pa[0] = _2153;
    vec4 _2173 = pa[0];
    _2173.x = (pa[0].x * internals[1].x) + sa[17].w;
    pa[0] = _2173;
    vec4 _2188 = r[0];
    _2188.z = (internals[2].x * pa[0].x) + 0.0;
    r[0] = _2188;
    vec4 _2208 = internals[2];
    _2208.x = (internals[1].x * sa[15].z) + sa[15].y;
    internals[2] = _2208;
    vec4 _2229 = internals[2];
    _2229.x = (internals[1].x * internals[2].x) + (0.0 - sa[15].w);
    internals[2] = _2229;
    vec4 _2249 = r[0];
    _2249.w = (internals[1].x * internals[2].x) + sa[17].z;
    r[0] = _2249;
    vec4 _2263 = internals[1];
    _2263.x = pa[1].x * r[0].x;
    internals[1] = _2263;
    vec4 _2283 = internals[1];
    _2283.x = (pa[1].y * outs[0].x) + internals[1].x;
    internals[1] = _2283;
    vec4 _2297 = r[2];
    _2297.x = pa[0].z * sa[14].z;
    r[2] = _2297;
    vec4 _2312 = r[2];
    _2312.y = (internals[1].x * sa[15].w) + 0.0;
    r[2] = _2312;
    vec4 _2332 = outs[1];
    _2332.x = (pa[0].z * sa[14].z) + sa[13].y;
    outs[1] = _2332;
    vec4 _2346 = outs[1];
    _2346.y = sa[13].x * r[2].y;
    outs[1] = _2346;
    vec4 _2356 = internals[1];
    _2356.x = (0.0 - outs[0].z) * 1.0;
    internals[1] = _2356;
    vec4 _2376 = outs[2];
    _2376.z = (r[1].x < 0.0) ? internals[1].x : outs[0].z;
    outs[2] = _2376;
    vec2 _2391 = vec2(r[0].z, r[0].z) * vec2(r[0].z, r[0].w);
    pa[0] = vec4(_2391.x, _2391.y, pa[0].z, pa[0].w);
    vec4 _2414 = internals[1];
    _2414.x = (r[0].z * r[0].z) + pa[0].x;
    internals[1] = _2414;
    vec4 _2434 = r[0];
    _2434.z = (r[0].w * r[0].z) + pa[0].y;
    r[0] = _2434;
    vec4 _2450 = r[0];
    _2450.w = (1.0 * sa[17].z) + (0.0 - internals[1].x);
    r[0] = _2450;
    vec4 _2464 = internals[1];
    _2464.x = r[1].x * sa[15].x;
    internals[1] = _2464;
    vec4 _2484 = internals[1];
    _2484.x = (internals[1].x * sa[17].y) + sa[17].w;
    internals[1] = _2484;
    vec4 _2498 = internals[1];
    _2498.x = fract(internals[1].x);
    internals[1] = _2498;
    vec4 _2518 = internals[2];
    _2518.x = (internals[1].x * sa[17].x) + sa[16].w;
    internals[2] = _2518;
    vec4 _2533 = pa[0];
    _2533.x = (internals[2].x * internals[2].x) + 0.0;
    pa[0] = _2533;
    vec4 _2553 = internals[1];
    _2553.x = (pa[0].x * sa[16].z) + sa[16].y;
    internals[1] = _2553;
    vec4 _2574 = internals[1];
    _2574.x = (pa[0].x * internals[1].x) + (0.0 - sa[16].x);
    internals[1] = _2574;
    vec4 _2594 = internals[1];
    _2594.x = (pa[0].x * internals[1].x) + sa[17].w;
    internals[1] = _2594;
    vec4 _2609 = internals[1];
    _2609.x = (internals[2].x * internals[1].x) + 0.0;
    internals[1] = _2609;
    vec4 _2629 = internals[2];
    _2629.x = (pa[0].x * sa[15].z) + sa[15].y;
    internals[2] = _2629;
    vec4 _2650 = internals[2];
    _2650.x = (internals[2].x * pa[0].x) + (0.0 - sa[15].w);
    internals[2] = _2650;
    vec4 _2670 = r[0];
    _2670.x = (internals[2].x * pa[0].x) + sa[17].z;
    r[0] = _2670;
    vec4 _2686 = internals[1];
    vec4 _2691 = internals[1];
    vec4 _2697 = internals[2];
    _2697.x = abs(r[0].x) * internals[1].x;
    internals[2] = _2697;
    vec4 _2700 = pa[0];
    _2700.x = _2686.x * _2691.x;
    pa[0] = _2700;
    vec4 _2720 = pa[0];
    _2720.z = (internals[1].x * internals[1].x) + pa[0].x;
    pa[0] = _2720;
    vec4 _2740 = pa[0];
    _2740.x = (internals[1].x * r[0].x) + internals[2].x;
    pa[0] = _2740;
    vec4 _2755 = pa[0];
    _2755.y = (0.0 - pa[0].z) + sa[17].z;
    pa[0] = _2755;
    vec2 _2778 = (vec2(pa[0].x, pa[0].y) * vec2(sa[14].w, sa[14].w)) + vec2(r[2].x, r[2].y);
    outs[2] = vec4(_2778.x, _2778.y, outs[2].z, outs[2].w);
    vec4 _2791 = internals[1];
    _2791.x = (0.0 - outs[1].z) * 1.0;
    internals[1] = _2791;
    vec4 _2811 = outs[7];
    _2811.x = (r[1].z < 0.0) ? internals[1].x : outs[1].z;
    outs[7] = _2811;
    vec2 _2825 = vec2(0.0, sa[8].x) + vec2(sa[13].z, sa[13].z);
    pa[0] = vec4(pa[0].x, pa[0].y, _2825.x, _2825.y);
    vec2 _2835 = vec2(outs[1].x, outs[1].y);
    pa[0] = vec4(_2835.x, _2835.y, pa[0].z, pa[0].w);
    vec2 _2861 = (vec2(pa[0].x, pa[0].y) * vec2(sa[11].x, sa[11].y)) + vec2(pa[0].z, pa[0].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _2861.x, _2861.y);
    vec4 _2878 = internals[1];
    _2878.x = sa[15].x * r[1].z;
    internals[1] = _2878;
    vec4 _2898 = internals[1];
    _2898.x = (internals[1].x * sa[17].y) + sa[17].w;
    internals[1] = _2898;
    vec4 _2912 = r[0];
    _2912.x = fract(internals[1].x);
    r[0] = _2912;
    vec4 _2926 = internals[1];
    _2926.x = sa[8].x * sa[15].x;
    internals[1] = _2926;
    vec4 _2946 = internals[1];
    _2946.x = (internals[1].x * sa[17].y) + sa[17].w;
    internals[1] = _2946;
    vec4 _2960 = r[0];
    _2960.y = fract(internals[1].x);
    r[0] = _2960;
    vec4 _2974 = internals[1];
    _2974.x = sa[18].x * pa[1].x;
    internals[1] = _2974;
    vec4 _2995 = internals[1];
    _2995.x = (pa[1].y * (0.0 - sa[9].x)) + internals[1].x;
    internals[1] = _2995;
    vec4 _3011 = internals[1];
    _3011.x = (1.0 * (0.0 - sa[10].x)) + internals[1].x;
    internals[1] = _3011;
    vec4 _3025 = internals[1];
    _3025.x = min(internals[1].x, sa[17].z);
    internals[1] = _3025;
    vec4 _3034 = internals[1];
    _3034.x = max(internals[1].x, 0.0);
    internals[1] = _3034;
    vec4 _3049 = internals[1];
    _3049.x = (1.0 * sa[14].x) + internals[1].x;
    internals[1] = _3049;
    vec4 _3063 = internals[2];
    _3063.x = sa[9].x * pa[1].x;
    internals[2] = _3063;
    vec4 _3083 = internals[2];
    _3083.x = (pa[1].y * sa[18].x) + internals[2].x;
    internals[2] = _3083;
    vec4 _3098 = internals[1];
    _3098.y = (internals[2].x * sa[15].w) + 0.0;
    internals[1] = _3098;
    vec2 _3121 = (vec2(r[0].z, r[0].w) * vec2(sa[14].w, sa[14].w)) + vec2(internals[1].x, internals[1].y);
    pa[0] = vec4(pa[0].x, pa[0].y, _3121.x, _3121.y);
    vec2 _3140 = (vec2(internals[0].x, internals[0].y) * vec2(outs[0].y, outs[0].y)) + vec2(0.0);
    internals[0] = vec4(_3140.x, _3140.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _3161 = vec2(internals[0].x, internals[0].y);
    vec4 _3171 = outs[6];
    vec2 _3176 = vec2(internals[1].x, internals[1].y) + vec2(_3171.x, _3171.y);
    outs[0] = vec4(_3161.x, _3161.y, outs[0].z, outs[0].w);
    internals[2] = vec4(_3176.x, _3176.y, internals[2].z, internals[2].w);
    vec2 _3189 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _3189.x, _3189.y);
    vec2 _3206 = vec2(0.0, outs[6].z) + vec2(internals[2].x, internals[2].y);
    pa[0] = vec4(_3206.x, _3206.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _3225 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_3225.x, _3225.y, outs[3].z, outs[3].w);
    vec2 _3235 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _3235.x, _3235.y);
    vec2 _3252 = vec2(0.0, outs[4].x) + vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_3252.x, _3252.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _3271 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_3271.x, _3271.y, outs[4].z, outs[4].w);
    vec2 _3281 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _3281.x, _3281.y);
    vec2 _3298 = vec2(0.0, outs[2].z) + vec2(outs[2].x, outs[2].y);
    pa[0] = vec4(_3298.x, _3298.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _3317 = vec2(internals[0].x, internals[0].y);
    outs[5] = vec4(_3317.x, _3317.y, outs[5].z, outs[5].w);
    vec2 _3327 = vec2(internals[0].z, internals[0].w);
    outs[5] = vec4(outs[5].x, outs[5].y, _3327.x, _3327.y);
    vec2 _3345 = vec2(r[2].x, r[2].y) + vec2(outs[6].x, outs[6].y);
    pa[0] = vec4(_3345.x, _3345.y, pa[0].z, pa[0].w);
    vec2 _3362 = vec2(0.0, outs[6].z) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_3362.x, _3362.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _3381 = vec2(internals[0].x, internals[0].y);
    outs[6] = vec4(_3381.x, _3381.y, outs[6].z, outs[6].w);
    vec2 _3391 = vec2(internals[0].z, internals[0].w);
    outs[6] = vec4(outs[6].x, outs[6].y, _3391.x, _3391.y);
    vec2 _3408 = vec2(0.0, outs[7].z) + vec2(internals[1].x, internals[1].y);
    outs[2] = vec4(_3408.x, _3408.y, outs[2].z, outs[2].w);
    internals[1] = vec4(outs[1].z, outs[1].w, 0.0, 0.0) * vec4(1.0);
    vec2 _3427 = vec2(internals[1].x, internals[1].y);
    outs[8] = vec4(_3427.x, _3427.y, outs[8].z, outs[8].w);
    vec2 _3437 = vec2(internals[1].z, internals[1].w);
    outs[8] = vec4(outs[8].x, outs[8].y, _3437.x, _3437.y);
    vec2 _3463 = (vec2(r[0].x, r[0].y) * vec2(sa[17].x, sa[17].x)) + vec2(sa[16].w, sa[16].w);
    internals[0] = vec4(_3463.x, _3463.y, internals[0].z, internals[0].w);
    vec4 _3480 = internals[0];
    vec4 _3485 = internals[0];
    vec4 _3491 = internals[1];
    _3491.x = internals[0].y * internals[0].y;
    internals[1] = _3491;
    vec4 _3494 = pa[0];
    _3494.x = _3480.x * _3485.x;
    pa[0] = _3494;
    vec4 _3514 = internals[2];
    _3514.x = (pa[0].x * sa[16].z) + sa[16].y;
    internals[2] = _3514;
    vec4 _3535 = internals[2];
    _3535.x = (pa[0].x * internals[2].x) + (0.0 - sa[16].x);
    internals[2] = _3535;
    vec4 _3555 = internals[2];
    _3555.x = (pa[0].x * internals[2].x) + sa[17].w;
    internals[2] = _3555;
    vec4 _3570 = pa[0];
    _3570.z = (internals[0].x * internals[2].x) + 0.0;
    pa[0] = _3570;
    vec4 _3590 = internals[2];
    _3590.x = (pa[0].x * sa[15].z) + sa[15].y;
    internals[2] = _3590;
    vec4 _3611 = internals[2];
    _3611.x = (internals[2].x * pa[0].x) + (0.0 - sa[15].w);
    internals[2] = _3611;
    vec4 _3631 = pa[0];
    _3631.w = (internals[2].x * pa[0].x) + sa[17].z;
    pa[0] = _3631;
    vec4 _3651 = internals[2];
    _3651.x = (internals[1].x * sa[16].z) + sa[16].y;
    internals[2] = _3651;
    vec4 _3672 = internals[2];
    _3672.x = (internals[1].x * internals[2].x) + (0.0 - sa[16].x);
    internals[2] = _3672;
    vec4 _3692 = internals[2];
    _3692.x = (internals[1].x * internals[2].x) + sa[17].w;
    internals[2] = _3692;
    vec4 _3707 = internals[2];
    _3707.x = (internals[0].y * internals[2].x) + 0.0;
    internals[2] = _3707;
    vec4 _3727 = internals[0];
    _3727.x = (internals[1].x * sa[15].z) + sa[15].y;
    internals[0] = _3727;
    vec4 _3748 = internals[0];
    _3748.x = (internals[0].x * internals[1].x) + (0.0 - sa[15].w);
    internals[0] = _3748;
    vec4 _3768 = pa[1];
    _3768.x = (internals[0].x * internals[1].x) + sa[17].z;
    pa[1] = _3768;
    vec2 _3783 = vec2(pa[0].z, pa[0].z) * vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_3783.x, _3783.y, pa[0].z, pa[0].w);
    vec4 _3806 = internals[0];
    _3806.x = (pa[0].z * pa[0].z) + pa[0].x;
    internals[0] = _3806;
    vec4 _3826 = pa[0];
    _3826.x = (pa[0].z * pa[0].w) + pa[0].y;
    pa[0] = _3826;
    vec4 _3842 = pa[0];
    _3842.y = (1.0 * sa[17].z) + (0.0 - internals[0].x);
    pa[0] = _3842;
    vec2 _3865 = (vec2(pa[0].x, pa[0].y) * vec2(sa[14].w, sa[14].w)) + vec2(r[2].x, r[2].y);
    pa[0] = vec4(_3865.x, _3865.y, pa[0].z, pa[0].w);
    vec2 _3882 = vec2(0.0, outs[7].x) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_3882.x, _3882.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _3901 = vec2(internals[0].x, internals[0].y);
    outs[7] = vec4(_3901.x, _3901.y, outs[7].z, outs[7].w);
    vec4 _3918 = internals[1];
    _3918.x = internals[2].x * internals[2].x;
    internals[1] = _3918;
    vec2 _3925 = vec2(internals[0].z, internals[0].w);
    outs[7] = vec4(outs[7].x, outs[7].y, _3925.x, _3925.y);
    vec4 _3948 = internals[1];
    _3948.x = (internals[2].x * internals[2].x) + internals[1].x;
    internals[1] = _3948;
    vec4 _3963 = internals[0];
    _3963.x = (internals[2].x * pa[1].x) + 0.0;
    internals[0] = _3963;
    vec4 _3983 = pa[0];
    _3983.x = (internals[2].x * pa[1].x) + internals[0].x;
    pa[0] = _3983;
    vec4 _3999 = pa[0];
    _3999.y = (1.0 * sa[17].z) + (0.0 - internals[1].x);
    pa[0] = _3999;
    vec2 _4022 = (vec2(pa[0].x, pa[0].y) * vec2(sa[14].w, sa[14].w)) + vec2(outs[2].x, outs[2].y);
    pa[0] = vec4(_4022.x, _4022.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _4041 = vec2(internals[0].x, internals[0].y);
    outs[2] = vec4(_4041.x, _4041.y, outs[2].z, outs[2].w);
    vec2 _4051 = vec2(internals[0].z, internals[0].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _4051.x, _4051.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
    v_TexCoord7 = outs[8];
}

void main()
{
    int i = 0;
    while (i < 11)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[11] = vec4(0.00937500037252902984619140625, 0.300000011920928955078125, 0.85000002384185791015625, 0.439999997615814208984375);
    sa[12] = vec4(0.550000011920928955078125, 0.540000021457672119140625, 0.839999973773956298828125, 0.769999980926513671875);
    sa[13] = vec4(8.0, 0.75, -0.20000000298023223876953125, 0.300000011920928955078125);
    sa[14] = vec4(-0.00999999977648258209228515625, 0.25, -1.0, 0.00999999977648258209228515625);
    sa[15] = vec4(11.0, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 0.125);
    sa[16] = vec4(0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875);
    sa[17] = vec4(6.283185482025146484375, 0.15915493667125701904296875, 1.0, 0.5);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:39.013] |E| [compile_program]: Vertex info
-----------
0(39) : warning C7050: "internals[0]" might be used before being initialized
0(39) : warning C7050: "internals[1]" might be used before being initialized
0(39) : warning C7050: "internals[2]" might be used before being initialized
0(40) : warning C7050: "r[0]" might be used before being initialized
0(40) : warning C7050: "r[1]" might be used before being initialized
0(40) : warning C7050: "r[2]" might be used before being initialized

Fragment info
-------------
0(43) : warning C7050: "pa[0].yzw" might be used before being initialized
0(43) : warning C7050: "pa[1].zw" might be used before being initialized
0(43) : warning C7050: "pa[2].zw" might be used before being initialized
0(43) : warning C7050: "pa[3].zw" might be used before being initialized
0(45) : warning C7050: "internals[0].zw" might be used before being initialized


[10:36:39.013] |I| [load_shader_generic]: Generating frag shader f18bb202811d7276db0928f051fb78e00d110dbfe4b4014743ac820465108394
[10:36:39.015] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: f18bb202811d7276db0928f051fb78e00d110dbfe4b4014743ac820465108394

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _194)
{
    return uintBitsToFloat(packHalf2x16(_194));
}

vec2 unpack2xF16(float _122)
{
    return unpackHalf2x16(floatBitsToUint(_122));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _274 = unpack2xF16(sa[2].w);
    vec2 _279 = vec2(pack2xF16(vec2(unpack2xF16(sa[1].x).y * unpack2xF16(sa[1].x).x, unpack2xF16(sa[2].z).y)), pack2xF16(vec2(_274.x, _274.y)));
    sa[2] = vec4(sa[2].x, sa[2].y, _279.x, _279.y);
    vec2 _288 = unpack2xF16(sa[1].y);
    vec2 _297 = unpack2xF16(sa[1].x);
    vec2 _307 = unpack2xF16(sa[1].y);
    vec2 _312 = (vec2(_288.x, _288.x) * (vec2(0.0) - vec2(_297.y, _297.y))) + vec2(_307.x, _307.x);
    vec2 _320 = unpack2xF16(sa[1].y);
    vec2 _325 = vec2(pack2xF16(vec2(_312.x, _312.y)), pack2xF16(vec2(_320.x, _320.y)));
    sa[1] = vec4(_325.x, _325.y, sa[1].z, sa[1].w);
}

void primary_program()
{
    vec2 _357 = unpack2xF16(pa[1].y);
    vec2 _362 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].x).x + unpack2xF16(sa[1].w).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_357.x, _357.y)));
    pa[1] = vec4(_362.x, _362.y, pa[1].z, pa[1].w);
    vec2 _391 = unpack2xF16(pa[0].y);
    vec2 _396 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].y).x * unpack2xF16(sa[1].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_391.x, _391.y)));
    pa[0] = vec4(_396.x, _396.y, pa[0].z, pa[0].w);
    vec2 _405 = unpack2xF16(pa[1].x);
    vec2 _416 = unpack2xF16(pa[0].y);
    vec2 _426 = unpack2xF16(pa[0].x);
    vec2 _431 = (abs(vec2(_405.x, _405.x)) * (vec2(0.0) - vec2(_416.x, _416.x))) + vec2(_426.x, _426.x);
    vec2 _439 = unpack2xF16(pa[0].y);
    vec2 _444 = vec2(pack2xF16(vec2(_431.x, _431.y)), pack2xF16(vec2(_439.x, _439.y)));
    pa[0] = vec4(_444.x, _444.y, pa[0].z, pa[0].w);
    vec2 _473 = unpack2xF16(pa[1].y);
    vec2 _478 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].z).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_473.x, _473.y)));
    pa[1] = vec4(_478.x, _478.y, pa[1].z, pa[1].w);
    vec2 _508 = unpack2xF16(pa[0].y);
    vec2 _513 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].x).y) + unpack2xF16(sa[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_508.x, _508.y)));
    pa[0] = vec4(_513.x, _513.y, pa[0].z, pa[0].w);
    vec2 _542 = unpack2xF16(pa[0].y);
    vec2 _547 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].x).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_542.x, _542.y)));
    pa[0] = vec4(_547.x, _547.y, pa[0].z, pa[0].w);
    vec2 _556 = unpack2xF16(pa[0].x);
    vec2 _565 = unpack2xF16(pa[0].z);
    vec2 _574 = unpack2xF16(sa[1].x);
    vec2 _579 = (vec2(_556.x, _556.x) * vec2(_565.x, _565.x)) + vec2(_574.x, _574.x);
    vec2 _587 = unpack2xF16(pa[0].y);
    vec2 _592 = vec2(pack2xF16(vec2(_579.x, _579.y)), pack2xF16(vec2(_587.x, _587.y)));
    pa[0] = vec4(_592.x, _592.y, pa[0].z, pa[0].w);
    vec2 _621 = unpack2xF16(pa[0].y);
    vec2 _626 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_621.x, _621.y)));
    pa[0] = vec4(_626.x, _626.y, pa[0].z, pa[0].w);
    vec2 _648 = unpack2xF16(pa[0].y);
    vec2 _653 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_648.x, _648.y)));
    pa[0] = vec4(_653.x, _653.y, pa[0].z, pa[0].w);
    vec2 _662 = unpack2xF16(pa[0].x);
    vec2 _674 = vec2(sa[0].x, sa[0].y);
    vec2 _676 = unpack2xF16(_674.x);
    vec2 _678 = unpack2xF16(_674.y);
    vec2 _690 = vec2(sa[0].z, sa[0].w);
    vec2 _692 = unpack2xF16(_690.x);
    vec2 _694 = unpack2xF16(_690.y);
    vec4 _701 = (vec4(_662.x, _662.x, _662.x, _662.x) * vec4(_676.x, _676.y, _678.x, _678.y)) + vec4(_692.x, _692.y, _694.x, _694.y);
    vec2 _710 = vec2(pack2xF16(vec2(_701.x, _701.y)), pack2xF16(vec2(_701.z, _701.w)));
    pa[0] = vec4(_710.x, _710.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _152)
{
    uint _155 = floatBitsToUint(_152);
    return uvec2(bitfieldExtract(_155, 0, 16), bitfieldExtract(_155, 16, 16));
}

void frag_output_finalize()
{
    vec2 _118 = vec2(pa[0].x, pa[0].y);
    vec2 _129 = unpack2xF16(_118.x);
    vec2 _131 = unpack2xF16(_118.y);
    out_color = vec4(_129.x, _129.y, _131.x, _131.y);
    vec2 _148 = vec2(pa[0].x, pa[0].y);
    uvec2 _161 = unpack2xU16(_148.x);
    uvec2 _163 = unpack2xU16(_148.y);
    out_color_ui = uvec4(_161.x, _161.y, _163.x, _163.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(sa[1].x, sa[1].y, vec3(2.0089014784560577528762587306044e-41, 6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41).x, vec3(2.0089014784560577528762587306044e-41, 6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41).y);
    sa[2] = vec4(vec3(2.0089014784560577528762587306044e-41, 6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41).z, sa[2].y, sa[2].z, sa[2].w);
    vec2 _206 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_206.x, _206.y, pa[0].z, pa[0].w);
    vec2 _213 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _221 = unpack2xF16(pa[1].y);
    vec2 _226 = vec2(pack2xF16(vec2(_213.x, _213.y)), pack2xF16(vec2(_221.x, _221.y)));
    pa[1] = vec4(_226.x, _226.y, pa[1].z, pa[1].w);
    frag_init();
    vec4 _238 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _243 = vec2(pack2xF16(_238.xy), pack2xF16(_238.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _243.x, _243.y);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:39.017] |I| [load_shader_generic]: Generating vert shader 017dacb423fea8ab7966ae3e4e432b057eac5d7adb5ac5135091b20b23c9f13a
[10:36:39.020] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 017dacb423fea8ab7966ae3e4e432b057eac5d7adb5ac5135091b20b23c9f13a

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _166 = sa[7];
    _166.z = sa[5].y * sa[4].z;
    sa[7] = _166;
    vec4 _174 = sa[7];
    _174.w = sa[4].z;
    sa[7] = _174;
    vec4 _188 = internals[0];
    _188.x = sa[4].x * sa[6].x;
    internals[0] = _188;
    vec4 _206 = internals[0];
    _206.x = fract(abs(internals[0].x));
    internals[0] = _206;
    vec4 _221 = sa[7];
    _221.x = (internals[0].x * sa[5].x) + 0.0;
    sa[7] = _221;
    vec4 _235 = sa[6];
    _235.z = sa[6].x * sa[4].y;
    sa[6] = _235;
    vec4 _249 = internals[0];
    _249.x = sa[4].x * sa[5].w;
    internals[0] = _249;
    vec4 _267 = internals[0];
    _267.x = fract(abs(internals[0].x));
    internals[0] = _267;
    vec4 _282 = sa[6];
    _282.x = (internals[0].x * sa[5].z) + 0.0;
    sa[6] = _282;
    vec4 _292 = sa[5];
    _292.z = (0.0 - sa[6].x) * 1.0;
    sa[5] = _292;
    vec4 _302 = sa[4];
    _302.z = (0.0 - sa[7].x) * 1.0;
    sa[4] = _302;
}

void primary_program()
{
    vec2 _312 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _312.x, _312.y);
    vec2 _326 = vec2(pa[0].x, pa[0].y);
    vec2 _333 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_326.x, _326.y, _333.x, _333.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _423 = internals[1];
    _423.x = sa[4].x;
    internals[1] = _423;
    vec4 _444 = internals[2];
    _444.x = (internals[1].x < 0.0) ? sa[5].z : sa[6].x;
    internals[2] = _444;
    vec4 _464 = pa[0];
    _464.x = (internals[1].x < 0.0) ? sa[4].z : sa[7].x;
    pa[0] = _464;
    vec4 _473 = pa[0];
    _473.y = 1.0 / internals[0].w;
    pa[0] = _473;
    p[0] = internals[2].x > sa[5].x;
    if (p[0])
    {
        vec4 _505 = pa[0];
        _505.x = (0.0 - pa[0].x) + sa[5].x;
        pa[0] = _505;
    }
    vec4 _519 = pa[0];
    _519.x = pa[0].x * sa[6].z;
    pa[0] = _519;
    vec4 _537 = internals[2];
    _537.x = fract(abs(pa[0].x));
    internals[2] = _537;
    vec4 _548 = internals[1];
    _548.x = (internals[2].x * (0.0 - 1.0)) + 0.0;
    internals[1] = _548;
    vec4 _568 = internals[1];
    _568.x = (pa[0].x < 0.0) ? internals[1].x : internals[2].x;
    internals[1] = _568;
    vec2 _584 = (vec2(internals[0].x, internals[0].y) * vec2(pa[0].y, pa[0].y)) + vec2(0.0);
    internals[0] = vec4(_584.x, _584.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _605 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_605.x, _605.y, outs[0].z, outs[0].w);
    vec2 _615 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _615.x, _615.y);
    vec2 _626 = vec2(internals[1].x, 0.0) * vec2(1.0);
    pa[0] = vec4(_626.x, _626.y, pa[0].z, pa[0].w);
    vec2 _653 = (vec2(pa[1].x, pa[1].x) * vec2(sa[7].z, sa[7].w)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_653.x, _653.y, pa[0].z, pa[0].w);
    vec4 _664 = pa[0];
    _664.z = sa[4].w;
    pa[0] = _664;
    internals[0] = vec4(pa[0].x, pa[0].y, pa[0].z, 0.0) * vec4(1.0);
    vec2 _681 = vec2(internals[0].x, internals[0].y);
    outs[2] = vec4(_681.x, _681.y, outs[2].z, outs[2].w);
    vec2 _691 = vec2(internals[0].z, internals[0].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _691.x, _691.y);
    vec2 _701 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_701.x, _701.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(100.0, 0.03125, 200.0, 0.004999999888241291046142578125);
    vec4 _73 = sa[6];
    _73.x = 0.00999999977648258209228515625;
    sa[6] = _73;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:39.048] |E| [compile_program]: Vertex info
-----------
0(33) : warning C7050: "internals[0]" might be used before being initialized
0(33) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(35) : warning C7050: "pa[0].zw" might be used before being initialized
0(35) : warning C7050: "pa[1].yzw" might be used before being initialized


[10:36:39.048] |I| [load_shader_generic]: Generating frag shader 4931f301615314eba746f9ffdaa378f529c4004ffbceda9a8b2deb0a9cd9f828
[10:36:39.050] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 4931f301615314eba746f9ffdaa378f529c4004ffbceda9a8b2deb0a9cd9f828

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 6) in vec4 v_TexCoord2;
layout(location = 5) in vec4 v_TexCoord1;
layout(location = 7) in vec4 v_TexCoord3;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _164)
{
    return uintBitsToFloat(packHalf2x16(_164));
}

vec2 unpack2xF16(float _92)
{
    return unpackHalf2x16(floatBitsToUint(_92));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec2 _248 = vec2(pa[0].z, pa[0].w);
    vec2 _250 = unpack2xF16(_248.x);
    vec2 _252 = unpack2xF16(_248.y);
    vec2 _264 = vec2(pa[1].x, pa[1].y);
    vec2 _266 = unpack2xF16(_264.x);
    vec2 _268 = unpack2xF16(_264.y);
    vec4 _274 = vec4(_250.x, _250.y, _252.x, _252.y) + vec4(_266.x, _266.y, _268.x, _268.y);
    vec2 _283 = vec2(pack2xF16(vec2(_274.x, _274.y)), pack2xF16(vec2(_274.z, _274.w)));
    pa[1] = vec4(_283.x, _283.y, pa[1].z, pa[1].w);
    vec2 _312 = unpack2xF16(pa[0].w);
    vec2 _317 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].y).y * unpack2xF16(pa[1].w).y, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_312.x, _312.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _317.x, _317.y);
    vec4 _345 = pa[1];
    _345.y = pack2xF16(vec2(unpack2xF16(pa[1].y).x, unpack2xF16(pa[0].z).x * unpack2xF16(pa[2].x).y));
    pa[1] = _345;
    vec2 _352 = vec2(pa[1].x, pa[1].y);
    vec2 _354 = unpack2xF16(_352.x);
    vec2 _356 = unpack2xF16(_352.y);
    vec2 _368 = vec2(pa[0].x, pa[0].y);
    vec2 _370 = unpack2xF16(_368.x);
    vec2 _372 = unpack2xF16(_368.y);
    vec4 _378 = vec4(_354.x, _354.y, _356.x, _356.y) * vec4(_370.x, _370.y, _372.x, _372.y);
    vec2 _387 = vec2(pack2xF16(vec2(_378.x, _378.y)), pack2xF16(vec2(_378.z, _378.w)));
    pa[0] = vec4(_387.x, _387.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _122)
{
    uint _125 = floatBitsToUint(_122);
    return uvec2(bitfieldExtract(_125, 0, 16), bitfieldExtract(_125, 16, 16));
}

void frag_output_finalize()
{
    vec2 _88 = vec2(pa[0].x, pa[0].y);
    vec2 _99 = unpack2xF16(_88.x);
    vec2 _101 = unpack2xF16(_88.y);
    out_color = vec4(_99.x, _99.y, _101.x, _101.y);
    vec2 _118 = vec2(pa[0].x, pa[0].y);
    uvec2 _131 = unpack2xU16(_118.x);
    uvec2 _133 = unpack2xU16(_118.y);
    out_color_ui = uvec4(_131.x, _131.y, _133.x, _133.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    vec2 _176 = vec2(pack2xF16(vec2(v_TexCoord2.x, v_TexCoord2.y)), pack2xF16(vec2(v_TexCoord2.z, v_TexCoord2.w)));
    pa[0] = vec4(_176.x, _176.y, pa[0].z, pa[0].w);
    vec2 _183 = vec2(v_TexCoord1.x, v_TexCoord1.y);
    vec2 _191 = unpack2xF16(pa[2].y);
    vec2 _196 = vec2(pack2xF16(vec2(_183.x, _183.y)), pack2xF16(vec2(_191.x, _191.y)));
    pa[2] = vec4(_196.x, _196.y, pa[2].z, pa[2].w);
    frag_init();
    vec4 _209 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _214 = vec2(pack2xF16(_209.xy), pack2xF16(_209.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _214.x, _214.y);
    vec4 _220 = texture(fragTex_sampler0, v_TexCoord4.xy);
    vec2 _225 = vec2(pack2xF16(_220.xy), pack2xF16(_220.zw));
    pa[1] = vec4(_225.x, _225.y, pa[1].z, pa[1].w);
    vec4 _231 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _236 = vec2(pack2xF16(_231.xy), pack2xF16(_231.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _236.x, _236.y);
    primary_program();
    frag_output_finalize();
}


[10:36:39.051] |I| [load_shader_generic]: Generating vert shader 6c2c58709dee0d3a34474ee4a7d77bd1d2db116476f2b5bfa2e12e3e8fb3649e
[10:36:39.055] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 6c2c58709dee0d3a34474ee4a7d77bd1d2db116476f2b5bfa2e12e3e8fb3649e

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[6];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _202 = sa[4];
    _202.z = (sa[4].y * (0.0 - sa[7].w)) + sa[4].z;
    sa[4] = _202;
    vec4 _223 = internals[0];
    _223.x = (sa[9].z * sa[4].z) + sa[9].w;
    internals[0] = _223;
    vec4 _237 = internals[0];
    _237.x = fract(internals[0].x);
    internals[0] = _237;
    vec4 _257 = internals[1];
    _257.x = (internals[0].x * sa[9].y) + sa[9].x;
    internals[1] = _257;
    vec4 _272 = sa[4];
    _272.x = (internals[1].x * internals[1].x) + 0.0;
    sa[4] = _272;
    vec4 _292 = internals[0];
    _292.x = (sa[4].x * sa[8].w) + sa[8].z;
    internals[0] = _292;
    vec4 _313 = internals[0];
    _313.x = (internals[0].x * sa[4].x) + (0.0 - sa[8].y);
    internals[0] = _313;
    vec4 _333 = internals[0];
    _333.x = (internals[0].x * sa[4].x) + sa[9].w;
    internals[0] = _333;
    vec4 _348 = internals[2];
    _348.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _348;
    vec4 _368 = internals[0];
    _368.x = (sa[4].x * sa[7].z) + sa[7].y;
    internals[0] = _368;
    vec4 _389 = internals[0];
    _389.x = (internals[0].x * sa[4].x) + (0.0 - sa[7].x);
    internals[0] = _389;
    vec4 _409 = internals[1];
    _409.x = (internals[0].x * sa[4].x) + sa[8].x;
    internals[1] = _409;
    vec4 _424 = internals[0];
    _424.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _424;
    vec4 _444 = sa[8];
    _444.z = (internals[2].x * internals[1].x) + internals[0].x;
    sa[8] = _444;
    vec4 _459 = internals[0];
    _459.x = (internals[2].x * internals[2].x) + 0.0;
    internals[0] = _459;
    vec4 _479 = internals[0];
    _479.x = (internals[2].x * internals[2].x) + internals[0].x;
    internals[0] = _479;
    vec4 _495 = sa[8];
    _495.x = (1.0 * sa[8].x) + (0.0 - internals[0].x);
    sa[8] = _495;
    vec4 _504 = sa[4];
    _504.x = sa[4].z;
    sa[4] = _504;
    vec4 _519 = sa[4];
    _519.y = (0.0 - sa[4].x) * sa[6].w;
    sa[4] = _519;
    sa[7] = vec4(sa[7].x, sa[7].y, vec2(1.0).x, vec2(1.0).y);
    vec2 _542 = fract(abs(vec2(sa[4].x, sa[4].y)));
    sa[9] = vec4(_542.x, _542.y, sa[9].z, sa[9].w);
    vec2 _554 = (vec2(0.0) - vec2(sa[9].x, sa[9].y)) * vec2(1.0);
    sa[7] = vec4(_554.x, _554.y, sa[7].z, sa[7].w);
    vec2 _564 = vec2(sa[7].x, sa[7].y);
    vec2 _578 = vec2(sa[9].x, sa[9].y);
    bvec2 _580 = lessThan(vec2(sa[4].x, sa[4].y), vec2(0.0));
    vec2 _581 = vec2(_580.x ? _564.x : _578.x, _580.y ? _564.y : _578.y);
    sa[7] = vec4(_581.x, _581.y, sa[7].z, sa[7].w);
    vec2 _592 = vec2(sa[4].z, sa[4].w) * vec2(1.0);
    sa[9] = vec4(_592.x, _592.y, sa[9].z, sa[9].w);
    vec2 _597 = vec2(0.0) * vec2(1.0);
    sa[4] = vec4(_597.x, _597.y, sa[4].z, sa[4].w);
}

void primary_program()
{
    vec2 _610 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _610.x, _610.y);
    vec2 _620 = vec2(sa[5].x, sa[5].y);
    outs[3] = vec4(_620.x, _620.y, outs[3].z, outs[3].w);
    vec2 _630 = vec2(sa[5].z, sa[5].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _630.x, _630.y);
    vec2 _640 = vec2(sa[4].x, sa[4].y);
    outs[2] = vec4(outs[2].x, outs[2].y, _640.x, _640.y);
    vec2 _654 = vec2(pa[0].x, pa[0].y);
    vec2 _661 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_654.x, _654.y, _661.x, _661.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _752 = pa[0];
    _752.x = (0.0 - sa[7].z) * 1.0;
    pa[0] = _752;
    vec4 _760 = pa[0];
    _760.y = sa[7].w;
    pa[0] = _760;
    vec2 _775 = vec2(pa[0].x, pa[0].y) * vec2(sa[4].z, sa[4].z);
    internals[1] = vec4(_775.x, _775.y, internals[1].z, internals[1].w);
    vec2 _793 = vec2(sa[6].x, sa[6].y) * vec2(internals[1].x, internals[1].y);
    vec4 _796 = internals[0];
    internals[1] = vec4(_793.x, _793.y, internals[1].z, internals[1].w);
    vec4 _805 = pa[0];
    _805.x = 1.0 / _796.w;
    pa[0] = _805;
    vec2 _821 = (vec2(internals[0].x, internals[0].y) * vec2(pa[0].x, pa[0].x)) + vec2(0.0);
    internals[0] = vec4(_821.x, _821.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _842 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_842.x, _842.y, outs[0].z, outs[0].w);
    vec2 _852 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _852.x, _852.y);
    vec2 _870 = vec2(sa[7].x, sa[7].y) + vec2(pa[1].x, pa[1].y);
    pa[0] = vec4(_870.x, _870.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _889 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_889.x, _889.y, outs[4].z, outs[4].w);
    vec2 _899 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _899.x, _899.y);
    vec2 _921 = fract(abs(vec2(internals[1].x, internals[1].y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _921.x, _921.y);
    vec2 _933 = (vec2(0.0) - vec2(pa[0].z, pa[0].w)) * vec2(1.0);
    pa[0] = vec4(_933.x, _933.y, pa[0].z, pa[0].w);
    vec2 _943 = vec2(pa[0].x, pa[0].y);
    vec2 _957 = vec2(pa[0].z, pa[0].w);
    bvec2 _958 = lessThan(vec2(internals[1].x, internals[1].y), vec2(0.0));
    vec2 _959 = vec2(_958.x ? _943.x : _957.x, _958.y ? _943.y : _957.y);
    pa[0] = vec4(pa[0].x, pa[0].y, _959.x, _959.y);
    vec2 _977 = vec2(sa[8].z, sa[8].z) * vec2(pa[1].x, pa[1].y);
    pa[0] = vec4(_977.x, _977.y, pa[0].z, pa[0].w);
    vec4 _1001 = pa[0];
    _1001.x = (pa[1].y * (0.0 - sa[8].x)) + pa[0].x;
    pa[0] = _1001;
    vec4 _1021 = pa[0];
    _1021.y = (pa[1].x * sa[8].x) + pa[0].y;
    pa[0] = _1021;
    vec2 _1044 = (vec2(pa[0].x, pa[0].y) * vec2(sa[6].z, sa[6].z)) + vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_1044.x, _1044.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _1063 = vec2(internals[0].x, internals[0].y);
    outs[5] = vec4(_1063.x, _1063.y, outs[5].z, outs[5].w);
    vec2 _1073 = vec2(internals[0].z, internals[0].w);
    outs[5] = vec4(outs[5].x, outs[5].y, _1073.x, _1073.y);
    vec2 _1083 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_1083.x, _1083.y, outs[1].z, outs[1].w);
    vec2 _1093 = vec2(sa[9].x, sa[9].y);
    outs[2] = vec4(_1093.x, _1093.y, outs[2].z, outs[2].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
}

void main()
{
    int i = 0;
    while (i < 6)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[6] = vec4(0.352999985218048095703125, 0.5552999973297119140625, 0.3400000035762786865234375, 0.735300004482269287109375);
    sa[7] = vec4(0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 0.070000000298023223876953125);
    sa[8] = vec4(1.0, 0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06);
    sa[9] = vec4(-3.1415927410125732421875, 6.283185482025146484375, 0.15915493667125701904296875, 0.5);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:39.079] |E| [compile_program]: Vertex info
-----------
0(36) : warning C7050: "internals[0]" might be used before being initialized
0(36) : warning C7050: "internals[1]" might be used before being initialized
0(36) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(33) : warning C7050: "pa[0].zw" might be used before being initialized
0(33) : warning C7050: "pa[1].zw" might be used before being initialized
0(33) : warning C7050: "pa[2].yzw" might be used before being initialized


[10:36:39.084] |I| [load_shader_generic]: Generating frag shader 7aadb64a6f79c55ba5c0bb23cc57f9c767f158592717d492510e97bab508c66c
[10:36:39.086] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 7aadb64a6f79c55ba5c0bb23cc57f9c767f158592717d492510e97bab508c66c

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 1) in vec4 v_Color0;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _167)
{
    return uintBitsToFloat(packHalf2x16(_167));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _95)
{
    return unpackHalf2x16(floatBitsToUint(_95));
}

void primary_program()
{
    vec4 _209 = r[0];
    _209.x = pa[1].y;
    r[0] = _209;
    p[1] = (sa[0].y + r[0].x) >= 0.0;
    if (!p[1])
    {
        discard;
    }
    vec2 _245 = vec2(pa[0].z, pa[0].w);
    vec2 _252 = vec2(pa[1].x, pa[1].y);
    internals[0] = vec4(_245.x, _245.y, _252.x, _252.y);
    vec2 _269 = vec2(pa[0].x, pa[0].y);
    vec2 _271 = unpack2xF16(_269.x);
    vec2 _273 = unpack2xF16(_269.y);
    vec4 _279 = internals[0] * vec4(_271.x, _271.y, _273.x, _273.y);
    vec2 _288 = vec2(pack2xF16(vec2(_279.x, _279.y)), pack2xF16(vec2(_279.z, _279.w)));
    pa[0] = vec4(_288.x, _288.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _125)
{
    uint _128 = floatBitsToUint(_125);
    return uvec2(bitfieldExtract(_128, 0, 16), bitfieldExtract(_128, 16, 16));
}

void frag_output_finalize()
{
    vec2 _91 = vec2(pa[0].x, pa[0].y);
    vec2 _102 = unpack2xF16(_91.x);
    vec2 _104 = unpack2xF16(_91.y);
    out_color = vec4(_102.x, _102.y, _104.x, _104.y);
    vec2 _121 = vec2(pa[0].x, pa[0].y);
    uvec2 _134 = unpack2xU16(_121.x);
    uvec2 _136 = unpack2xU16(_121.y);
    out_color_ui = uvec4(_134.x, _134.y, _136.x, _136.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    sa[0] = vec4(vec2(8.0356059138242310115050349224177e-41, -0.007843137718737125396728515625).x, vec2(8.0356059138242310115050349224177e-41, -0.007843137718737125396728515625).y, sa[0].z, sa[0].w);
    vec2 _179 = vec2(pack2xF16(vec2(v_Color0.x, v_Color0.y)), pack2xF16(vec2(v_Color0.z, v_Color0.w)));
    pa[0] = vec4(_179.x, _179.y, pa[0].z, pa[0].w);
    frag_init();
    vec4 _192 = texture(fragTex_sampler0, v_TexCoord0.xy);
    pa[0] = vec4(pa[0].x, pa[0].y, _192.x, _192.y);
    pa[1] = vec4(_192.z, _192.w, pa[1].z, pa[1].w);
    primary_program();
    frag_output_finalize();
}


[10:36:39.087] |I| [load_shader_generic]: Generating vert shader bfdde7f64a5e32aa456215f9ac9f6b86de4ee4a0dbfaa05bfbef757a78ce556c
[10:36:39.088] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: bfdde7f64a5e32aa456215f9ac9f6b86de4ee4a0dbfaa05bfbef757a78ce556c

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[4];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_colour0;
layout(location = 2) in vec4 IN_in_texcoord0;
layout(location = 1) out vec4 v_Color0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void primary_program()
{
    vec2 _149 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_149.x, _149.y, outs[1].z, outs[1].w);
    vec2 _159 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _159.x, _159.y);
    vec2 _169 = vec2(pa[2].x, pa[2].y);
    outs[2] = vec4(_169.x, _169.y, outs[2].z, outs[2].w);
    vec2 _179 = vec2(pa[2].z, pa[2].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _179.x, _179.y);
    vec2 _193 = vec2(pa[0].x, pa[0].y);
    vec2 _200 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_193.x, _193.y, _200.x, _200.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _290 = internals[1];
    _290.x = 1.0 / internals[0].w;
    internals[1] = _290;
    vec2 _306 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_306.x, _306.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _327 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_327.x, _327.y, outs[0].z, outs[0].w);
    vec2 _337 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _337.x, _337.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_Color0 = outs[1];
    v_TexCoord0 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 4)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    pa[1] = IN_in_colour0;
    pa[2] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    primary_program();
    vert_output_finalize();
}


[10:36:39.100] |E| [compile_program]: Fragment info
-------------
0(31) : warning C7050: "sa[0].zw" might be used before being initialized
0(30) : warning C7050: "pa[0].zw" might be used before being initialized
0(30) : warning C7050: "pa[1].zw" might be used before being initialized
0(33) : warning C7050: "r[0]" might be used before being initialized


[10:36:41.108] |W| [unimplemented_impl]: Unimplemented sceNetCheckDialogInit import called.
[10:36:41.114] |W| [stubbed_impl]: Stubbed sceNetCheckDialogGetStatus import called. (SCE_COMMON_DIALOG_STATUS_FINISHED)
[10:36:41.114] |W| [unimplemented_impl]: Unimplemented sceNetCheckDialogTerm import called.
[10:36:41.139] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/user/00/savedata/PCSB00189/SlotParam_0.bin (target path: savedata0:/SlotParam_0.bin)
[10:36:41.139] |W| [io_error_impl]: open_file (sceAppUtilSaveDataSlotGetParam) returned 0x80010002
[10:36:42.954] |I| [export_sceIoOpen]: Opening file: app0:media/music.fsb.psp2
[10:36:42.990] |I| [load_shader_generic]: Generating frag shader 1b36e52495e19cb6cd1c12656231e26d3ebb6a26487d50d1fc4a757cd19e5deb
[10:36:42.993] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 1b36e52495e19cb6cd1c12656231e26d3ebb6a26487d50d1fc4a757cd19e5deb

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _195)
{
    return uintBitsToFloat(packHalf2x16(_195));
}

vec2 unpack2xF16(float _116)
{
    return unpackHalf2x16(floatBitsToUint(_116));
}

void secondary_program()
{
    vec2 _216 = unpack2xF16(sa[1].w);
    vec2 _226 = unpack2xF16(sa[2].z);
    vec3 _231 = vec3(_216.x, _216.x, _216.x) + vec3(_226.x, _226.x, _226.x);
    vec2 _244 = vec2(pack2xF16(vec2(_231.x, _231.y)), pack2xF16(vec2(_231.z, unpack2xF16(sa[3].y).y)));
    sa[3] = vec4(_244.x, _244.y, sa[3].z, sa[3].w);
}

void primary_program()
{
    vec2 _257 = vec2(pa[0].x, pa[0].y);
    vec2 _259 = unpack2xF16(_257.x);
    vec2 _261 = unpack2xF16(_257.y);
    vec2 _273 = vec2(sa[0].x, sa[0].y);
    vec2 _275 = unpack2xF16(_273.x);
    vec2 _277 = unpack2xF16(_273.y);
    vec2 _289 = vec2(sa[0].z, sa[0].w);
    vec2 _291 = unpack2xF16(_289.x);
    vec2 _293 = unpack2xF16(_289.y);
    vec4 _300 = (vec4(_259.x, _259.y, _261.x, _261.y) * vec4(_275.x, _275.y, _277.x, _277.y)) + vec4(_291.x, _291.y, _293.x, _293.y);
    vec2 _309 = vec2(pack2xF16(vec2(_300.x, _300.y)), pack2xF16(vec2(_300.z, _300.w)));
    r[0] = vec4(_309.x, _309.y, r[0].z, r[0].w);
    vec2 _319 = vec2(r[0].x, r[0].y);
    vec2 _321 = unpack2xF16(_319.x);
    vec2 _334 = vec2(sa[2].x, sa[2].y);
    vec2 _336 = unpack2xF16(_334.x);
    vec2 _354 = unpack2xF16(r[0].w);
    vec2 _359 = vec2(pack2xF16(vec2(dot(vec4(_321.x, _321.y, unpack2xF16(_319.y).x, 0.0), vec4(_336.x, _336.y, unpack2xF16(_334.y).x, 1.0)), unpack2xF16(r[0].z).y)), pack2xF16(vec2(_354.x, _354.y)));
    r[0] = vec4(r[0].x, r[0].y, _359.x, _359.y);
    vec2 _368 = unpack2xF16(r[0].z);
    vec2 _380 = vec2(sa[1].x, sa[1].y);
    vec2 _382 = unpack2xF16(_380.x);
    vec2 _384 = unpack2xF16(_380.y);
    vec2 _396 = vec2(r[0].x, r[0].y);
    vec2 _398 = unpack2xF16(_396.x);
    vec2 _400 = unpack2xF16(_396.y);
    vec4 _408 = (vec4(_368.x, _368.x, _368.x, _368.x) * vec4(_382.x, _382.y, _384.x, _384.y)) + (vec4(0.0) - vec4(_398.x, _398.y, _400.x, _400.y));
    vec2 _417 = vec2(pack2xF16(vec2(_408.x, _408.y)), pack2xF16(vec2(_408.z, _408.w)));
    pa[0] = vec4(_417.x, _417.y, pa[0].z, pa[0].w);
    vec2 _427 = vec2(pa[0].x, pa[0].y);
    vec2 _429 = unpack2xF16(_427.x);
    vec2 _431 = unpack2xF16(_427.y);
    vec2 _442 = unpack2xF16(sa[1].y);
    vec2 _454 = vec2(r[0].x, r[0].y);
    vec2 _456 = unpack2xF16(_454.x);
    vec2 _458 = unpack2xF16(_454.y);
    vec4 _465 = (vec4(_429.x, _429.y, _431.x, _431.y) * vec4(_442.y, _442.y, _442.y, _442.y)) + vec4(_456.x, _456.y, _458.x, _458.y);
    vec2 _474 = vec2(pack2xF16(vec2(_465.x, _465.y)), pack2xF16(vec2(_465.z, _465.w)));
    pa[0] = vec4(_474.x, _474.y, pa[0].z, pa[0].w);
    vec2 _483 = unpack2xF16(r[0].z);
    vec2 _495 = vec2(pa[0].x, pa[0].y);
    vec2 _497 = unpack2xF16(_495.x);
    vec3 _504 = (vec3(0.0) - vec3(_483.x, _483.x, _483.x)) + vec3(_497.x, _497.y, unpack2xF16(_495.y).x);
    vec2 _517 = vec2(pack2xF16(vec2(_504.x, _504.y)), pack2xF16(vec2(_504.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_517.x, _517.y, pa[0].z, pa[0].w);
    vec2 _527 = vec2(pa[0].x, pa[0].y);
    vec2 _529 = unpack2xF16(_527.x);
    vec2 _531 = unpack2xF16(_527.y);
    vec2 _542 = unpack2xF16(sa[1].z);
    vec2 _553 = unpack2xF16(r[0].z);
    vec4 _560 = (vec4(_529.x, _529.y, _531.x, _531.y) * vec4(_542.y, _542.y, _542.y, _542.y)) + vec4(_553.x, _553.x, _553.x, _553.x);
    vec2 _569 = vec2(pack2xF16(vec2(_560.x, _560.y)), pack2xF16(vec2(_560.z, _560.w)));
    pa[0] = vec4(_569.x, _569.y, pa[0].z, pa[0].w);
    vec2 _579 = vec2(pa[0].x, pa[0].y);
    vec2 _581 = unpack2xF16(_579.x);
    vec2 _593 = unpack2xF16(sa[2].w);
    vec3 _598 = vec3(_581.x, _581.y, unpack2xF16(_579.y).x) + vec3(_593.x, _593.x, _593.x);
    vec2 _611 = vec2(pack2xF16(vec2(_598.x, _598.y)), pack2xF16(vec2(_598.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_611.x, _611.y, pa[0].z, pa[0].w);
    vec2 _621 = vec2(pa[0].x, pa[0].y);
    vec2 _623 = unpack2xF16(_621.x);
    vec2 _625 = unpack2xF16(_621.y);
    vec2 _636 = unpack2xF16(sa[1].w);
    vec2 _648 = vec2(sa[3].x, sa[3].y);
    vec2 _650 = unpack2xF16(_648.x);
    vec2 _652 = unpack2xF16(_648.y);
    vec4 _659 = (vec4(_623.x, _623.y, _625.x, _625.y) * vec4(_636.y, _636.y, _636.y, _636.y)) + vec4(_650.x, _650.y, _652.x, _652.y);
    vec2 _668 = vec2(pack2xF16(vec2(_659.x, _659.y)), pack2xF16(vec2(_659.z, _659.w)));
    pa[0] = vec4(_668.x, _668.y, pa[0].z, pa[0].w);
    vec2 _686 = vec2(pa[0].x, pa[0].y);
    vec2 _688 = unpack2xF16(_686.x);
    vec4 _695 = vec4(1.0, 1.0, 1.0, unpack2xF16(r[0].y).y) * vec4(_688.x, _688.y, unpack2xF16(_686.y).x, 1.0);
    vec2 _704 = vec2(pack2xF16(vec2(_695.x, _695.y)), pack2xF16(vec2(_695.z, _695.w)));
    pa[0] = vec4(_704.x, _704.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _146)
{
    uint _149 = floatBitsToUint(_146);
    return uvec2(bitfieldExtract(_149, 0, 16), bitfieldExtract(_149, 16, 16));
}

void frag_output_finalize()
{
    vec2 _112 = vec2(pa[0].x, pa[0].y);
    vec2 _123 = unpack2xF16(_112.x);
    vec2 _125 = unpack2xF16(_112.y);
    out_color = vec4(_123.x, _123.y, _125.x, _125.y);
    vec2 _142 = vec2(pa[0].x, pa[0].y);
    uvec2 _155 = unpack2xU16(_142.x);
    uvec2 _157 = unpack2xU16(_142.y);
    out_color_ui = uvec4(_155.x, _155.y, _157.x, _157.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05);
    frag_init();
    vec4 _192 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _205 = vec2(pack2xF16(_192.xy), pack2xF16(_192.zw));
    pa[0] = vec4(_205.x, _205.y, pa[0].z, pa[0].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:43.018] |E| [compile_program]: Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized
0(37) : warning C7050: "r[0].zw" might be used before being initialized


[10:36:43.053] |I| [load_shader_generic]: Generating vert shader 177e1b0f0d07a916c913ffa13df9e7aac71a462e6fcec60c515c859eaf88cb75
[10:36:43.057] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 177e1b0f0d07a916c913ffa13df9e7aac71a462e6fcec60c515c859eaf88cb75

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[6];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _170 = sa[9];
    _170.x = sa[4].x * sa[4].w;
    sa[9] = _170;
    vec4 _190 = internals[0];
    _190.x = (sa[9].x * sa[8].y) + sa[8].z;
    internals[0] = _190;
    vec4 _204 = internals[0];
    _204.x = fract(internals[0].x);
    internals[0] = _204;
    vec4 _224 = internals[1];
    _224.x = (internals[0].x * sa[8].x) + sa[7].w;
    internals[1] = _224;
    vec4 _239 = sa[8];
    _239.x = (internals[1].x * internals[1].x) + 0.0;
    sa[8] = _239;
    vec4 _259 = internals[0];
    _259.x = (sa[8].x * sa[7].z) + sa[7].y;
    internals[0] = _259;
    vec4 _280 = internals[0];
    _280.x = (internals[0].x * sa[8].x) + (0.0 - sa[7].x);
    internals[0] = _280;
    vec4 _300 = internals[0];
    _300.x = (internals[0].x * sa[8].x) + sa[8].z;
    internals[0] = _300;
    vec4 _315 = internals[2];
    _315.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _315;
    vec4 _335 = internals[0];
    _335.x = (sa[8].x * sa[6].z) + sa[6].y;
    internals[0] = _335;
    vec4 _356 = internals[0];
    _356.x = (internals[0].x * sa[8].x) + (0.0 - sa[6].x);
    internals[0] = _356;
    vec4 _376 = internals[1];
    _376.x = (internals[0].x * sa[8].x) + sa[6].w;
    internals[1] = _376;
    vec4 _391 = internals[0];
    _391.x = (internals[2].x * internals[2].x) + 0.0;
    internals[0] = _391;
    vec4 _411 = internals[0];
    _411.x = (internals[2].x * internals[2].x) + internals[0].x;
    internals[0] = _411;
    vec4 _427 = sa[8];
    _427.x = (1.0 * sa[6].w) + (0.0 - internals[0].x);
    sa[8] = _427;
    vec4 _442 = internals[0];
    _442.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _442;
    vec4 _462 = sa[7];
    _462.z = (internals[2].x * internals[1].x) + internals[0].x;
    sa[7] = _462;
    vec2 _477 = vec2(sa[4].y, sa[4].z) * vec2(sa[4].x, sa[4].x);
    sa[7] = vec4(_477.x, _477.y, sa[7].z, sa[7].w);
    vec4 _489 = internals[1];
    _489.x = 1.0 / sa[5].z;
    internals[1] = _489;
    vec4 _504 = internals[0];
    _504.x = (internals[1].x * sa[7].x) + 0.0;
    internals[0] = _504;
    vec4 _522 = internals[0];
    _522.x = fract(abs(internals[0].x));
    internals[0] = _522;
    vec4 _539 = sa[6];
    _539.z = (internals[0].x * abs(sa[5].z)) + 0.0;
    sa[6] = _539;
    vec4 _554 = internals[0];
    _554.x = (internals[1].x * sa[7].y) + 0.0;
    internals[0] = _554;
    vec4 _572 = internals[0];
    _572.x = fract(abs(internals[0].x));
    internals[0] = _572;
    vec4 _589 = sa[6];
    _589.x = (internals[0].x * abs(sa[5].z)) + 0.0;
    sa[6] = _589;
    vec4 _599 = sa[5];
    _599.z = (0.0 - sa[6].z) * 1.0;
    sa[5] = _599;
    vec4 _609 = sa[4];
    _609.w = (0.0 - sa[6].x) * 1.0;
    sa[4] = _609;
    vec4 _617 = sa[4];
    _617.z = sa[4].w;
    sa[4] = _617;
    vec2 _626 = vec2(sa[5].x, sa[5].y) * vec2(1.0);
    sa[8] = vec4(sa[8].x, sa[8].y, _626.x, _626.y);
    vec2 _631 = vec2(0.0) * vec2(1.0);
    sa[4] = vec4(_631.x, _631.y, sa[4].z, sa[4].w);
}

void primary_program()
{
    vec4 _646 = r[0];
    _646.x = sa[7].x;
    r[0] = _646;
    vec4 _654 = r[0];
    _654.y = sa[7].y;
    r[0] = _654;
    vec4 _675 = outs[0];
    _675.x = (r[0].x < 0.0) ? sa[5].z : sa[6].z;
    outs[0] = _675;
    vec4 _695 = outs[0];
    _695.y = (r[0].y < 0.0) ? sa[4].z : sa[6].x;
    outs[0] = _695;
    vec2 _710 = vec2(outs[0].x, outs[0].y) + vec2(pa[1].x, pa[1].y);
    pa[1] = vec4(_710.x, _710.y, pa[1].z, pa[1].w);
    vec2 _729 = (vec2(0.0) - vec2(sa[5].x, sa[5].y)) + vec2(pa[1].x, pa[1].y);
    internals[0] = vec4(_729.x, _729.y, internals[0].z, internals[0].w);
    vec2 _743 = vec2(pa[0].x, pa[0].y);
    vec2 _750 = vec2(pa[0].z, pa[0].w);
    internals[1] = vec4(_743.x, _743.y, _750.x, _750.y);
    internals[2] = sa[0] * vec4(internals[1].x, internals[1].x, internals[1].x, internals[1].x);
    internals[2] = (vec4(internals[1].y, internals[1].y, internals[1].y, internals[1].y) * sa[1]) + internals[2];
    internals[2] = (vec4(internals[1].z, internals[1].z, internals[1].z, internals[1].z) * sa[2]) + internals[2];
    internals[1] = (vec4(internals[1].w, internals[1].w, internals[1].w, internals[1].w) * sa[3]) + internals[2];
    vec4 _847 = internals[0];
    vec2 _852 = vec2(sa[8].x, sa[8].x) * vec2(_847.x, _847.y);
    vec4 _855 = internals[2];
    _855.x = 1.0 / internals[1].w;
    internals[2] = _855;
    pa[0] = vec4(_852.x, _852.y, pa[0].z, pa[0].w);
    vec2 _874 = (vec2(internals[2].x, internals[2].x) * vec2(internals[1].x, internals[1].y)) + vec2(0.0);
    internals[1] = vec4(_874.x, _874.y, internals[1].z, internals[1].w);
    internals[1] = vec4(internals[1].x, internals[1].y, internals[1].z, 1.0) * vec4(1.0);
    vec2 _895 = vec2(internals[1].x, internals[1].y);
    outs[0] = vec4(_895.x, _895.y, outs[0].z, outs[0].w);
    vec2 _905 = vec2(internals[1].z, internals[1].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _905.x, _905.y);
    vec4 _929 = pa[0];
    _929.x = (internals[0].y * (0.0 - sa[7].z)) + pa[0].x;
    pa[0] = _929;
    vec4 _949 = pa[0];
    _949.y = (internals[0].x * sa[7].z) + pa[0].y;
    pa[0] = _949;
    vec2 _964 = vec2(pa[0].x, pa[0].y) + vec2(sa[8].z, sa[8].w);
    outs[1] = vec4(_964.x, _964.y, outs[1].z, outs[1].w);
    vec2 _976 = vec2(0.0) + vec2(sa[4].x, sa[4].y);
    outs[1] = vec4(outs[1].x, outs[1].y, _976.x, _976.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 6)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[6] = vec4(0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 1.0);
    sa[7] = vec4(0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875);
    sa[8] = vec4(vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).x, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).y, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).z, sa[8].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:43.083] |E| [compile_program]: Vertex info
-----------
0(32) : warning C7050: "internals[0]" might be used before being initialized
0(32) : warning C7050: "internals[1]" might be used before being initialized
0(32) : warning C7050: "internals[2]" might be used before being initialized
0(33) : warning C7050: "r[0]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized
0(37) : warning C7050: "r[0].zw" might be used before being initialized


[10:36:43.085] |I| [load_shader_generic]: Generating frag shader 30c0ba6a1f2eb7180a47264dab836fedbc3a45fd142147b5014f4b76b6373a4f
[10:36:43.090] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 30c0ba6a1f2eb7180a47264dab836fedbc3a45fd142147b5014f4b76b6373a4f

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 7) in vec4 v_TexCoord3;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _212)
{
    return uintBitsToFloat(packHalf2x16(_212));
}

vec2 unpack2xF16(float _141)
{
    return unpackHalf2x16(floatBitsToUint(_141));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _298 = vec2(pack2xF16(vec2(vec4(0.0).x, vec4(0.0).y)), pack2xF16(vec2(vec4(0.0).z, vec4(0.0).w)));
    sa[6] = vec4(_298.x, _298.y, sa[6].z, sa[6].w);
    vec2 _328 = unpack2xF16(sa[0].y);
    vec2 _333 = vec2(pack2xF16(vec2(unpack2xF16(sa[3].w).x + unpack2xF16(sa[0].y).x, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_328.x, _328.y)));
    sa[0] = vec4(_333.x, _333.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _346 = vec2(pa[0].z, pa[0].w);
    vec2 _348 = unpack2xF16(_346.x);
    vec2 _350 = unpack2xF16(_346.y);
    vec2 _362 = vec2(pa[1].x, pa[1].y);
    vec2 _364 = unpack2xF16(_362.x);
    vec2 _366 = unpack2xF16(_362.y);
    vec4 _372 = max(vec4(_348.x, _348.y, _350.x, _350.y), vec4(_364.x, _364.y, _366.x, _366.y));
    vec2 _381 = vec2(pack2xF16(vec2(_372.x, _372.y)), pack2xF16(vec2(_372.z, _372.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _381.x, _381.y);
    vec2 _391 = vec2(pa[0].z, pa[0].w);
    vec2 _393 = unpack2xF16(_391.x);
    vec2 _395 = unpack2xF16(_391.y);
    vec2 _407 = vec2(pa[1].z, pa[1].w);
    vec2 _409 = unpack2xF16(_407.x);
    vec2 _411 = unpack2xF16(_407.y);
    vec4 _417 = max(vec4(_393.x, _393.y, _395.x, _395.y), vec4(_409.x, _409.y, _411.x, _411.y));
    vec2 _426 = vec2(pack2xF16(vec2(_417.x, _417.y)), pack2xF16(vec2(_417.z, _417.w)));
    pa[1] = vec4(_426.x, _426.y, pa[1].z, pa[1].w);
    p[1] = (unpack2xF16(pa[1].y).y + unpack2xF16(sa[3].x).x) >= 0.0;
    if (!p[1])
    {
        discard;
    }
    vec4 _462 = pa[0];
    _462.z = sa[6].x;
    pa[0] = _462;
    vec4 _471 = pa[0];
    _471.w = sa[6].y;
    pa[0] = _471;
    vec2 _498 = unpack2xF16(pa[0].w);
    vec2 _503 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x, (0.0 - unpack2xF16(pa[0].y).y) * unpack2xF16(sa[5].x).x)), pack2xF16(vec2(_498.x, _498.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _503.x, _503.y);
    vec2 _513 = vec2(pa[1].x, pa[1].y);
    vec2 _515 = unpack2xF16(_513.x);
    vec2 _527 = unpack2xF16(sa[4].w);
    vec2 _538 = vec2(pa[0].z, pa[0].w);
    vec2 _540 = unpack2xF16(_538.x);
    vec3 _548 = (vec3(_515.x, _515.y, unpack2xF16(_513.y).x) * vec3(_527.x, _527.x, _527.x)) + vec3(_540.x, _540.y, unpack2xF16(_538.y).x);
    internals[0] = vec4(_548.x, _548.y, _548.z, internals[0].w);
    vec2 _578 = unpack2xF16(pa[0].y);
    vec2 _583 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[2].x).x) + unpack2xF16(sa[5].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_578.x, _578.y)));
    pa[0] = vec4(_583.x, _583.y, pa[0].z, pa[0].w);
    vec4 _597 = internals[1];
    _597.x = max(unpack2xF16(pa[0].x).x, 0.0);
    internals[1] = _597;
    vec2 _611 = unpack2xF16(sa[4].z);
    vec3 _616 = vec3(internals[0].x, internals[0].y, internals[0].z) + vec3(_611.x, _611.x, _611.x);
    vec4 _619 = internals[1];
    internals[2] = vec4(_616.x, _616.y, _616.z, internals[2].w);
    vec2 _631 = unpack2xF16(pa[2].y);
    vec2 _636 = vec2(pack2xF16(vec2(log(_619.x))), pack2xF16(vec2(_631.x, _631.y)));
    pa[2] = vec4(_636.x, _636.y, pa[2].z, pa[2].w);
    vec2 _667 = unpack2xF16(pa[0].y);
    vec2 _672 = vec2(pack2xF16(vec2(dot(vec4(internals[2].x, internals[2].y, internals[2].z, 0.0), vec4(internals[2].x, internals[2].y, internals[2].z, 1.0)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_667.x, _667.y)));
    pa[0] = vec4(_672.x, _672.y, pa[0].z, pa[0].w);
    vec2 _694 = unpack2xF16(pa[0].y);
    vec2 _699 = vec2(pack2xF16(vec2(inversesqrt(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_694.x, _694.y)));
    pa[0] = vec4(_699.x, _699.y, pa[0].z, pa[0].w);
    vec2 _708 = unpack2xF16(pa[0].x);
    vec3 _721 = vec3(_708.x, _708.x, _708.x) * vec3(internals[2].x, internals[2].y, internals[2].z);
    vec2 _734 = vec2(pack2xF16(vec2(_721.x, _721.y)), pack2xF16(vec2(_721.z, unpack2xF16(pa[1].w).y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _734.x, _734.y);
    vec2 _763 = unpack2xF16(pa[0].y);
    vec2 _768 = vec2(pack2xF16(vec2(unpack2xF16(sa[4].y).x * unpack2xF16(pa[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_763.x, _763.y)));
    pa[0] = vec4(_768.x, _768.y, pa[0].z, pa[0].w);
    vec4 _779 = pa[1];
    _779.x = sa[4].x;
    pa[1] = _779;
    vec4 _797 = pa[1];
    _797.y = pack2xF16(vec2(exp(unpack2xF16(pa[0].x).x), unpack2xF16(pa[1].y).y));
    pa[1] = _797;
    vec2 _816 = unpack2xF16(pa[0].y);
    vec2 _821 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[1].w).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_816.x, _816.y)));
    pa[0] = vec4(_821.x, _821.y, pa[0].z, pa[0].w);
    vec2 _830 = unpack2xF16(pa[0].x);
    vec2 _839 = unpack2xF16(sa[3].z);
    vec2 _848 = unpack2xF16(sa[0].x);
    vec2 _853 = (vec2(_830.x, _830.x) * vec2(_839.x, _839.x)) + vec2(_848.x, _848.x);
    vec2 _861 = unpack2xF16(pa[0].y);
    vec2 _866 = vec2(pack2xF16(vec2(_853.x, _853.y)), pack2xF16(vec2(_861.x, _861.y)));
    pa[0] = vec4(_866.x, _866.y, pa[0].z, pa[0].w);
    vec2 _895 = unpack2xF16(pa[0].y);
    vec2 _900 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[5].z).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_895.x, _895.y)));
    pa[0] = vec4(_900.x, _900.y, pa[0].z, pa[0].w);
    vec2 _922 = unpack2xF16(pa[0].y);
    vec2 _927 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_922.x, _922.y)));
    pa[0] = vec4(_927.x, _927.y, pa[0].z, pa[0].w);
    vec2 _956 = unpack2xF16(pa[0].y);
    vec2 _961 = vec2(pack2xF16(vec2(unpack2xF16(sa[3].y).x + unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_956.x, _956.y)));
    pa[0] = vec4(_961.x, _961.y, pa[0].z, pa[0].w);
    vec2 _974 = vec2(unpack2xF16(pa[0].x).x, 0.5) * vec2(1.0);
    vec2 _982 = unpack2xF16(pa[0].y);
    vec2 _987 = vec2(pack2xF16(vec2(_974.x, _974.y)), pack2xF16(vec2(_982.x, _982.y)));
    pa[0] = vec4(_987.x, _987.y, pa[0].z, pa[0].w);
    vec2 _996 = unpack2xF16(pa[0].x);
    vec4 _1001 = texture(fragTex_sampler1, vec2(_996.x, _996.y));
    vec2 _1010 = vec2(pack2xF16(vec2(_1001.x, _1001.y)), pack2xF16(vec2(_1001.z, _1001.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1010.x, _1010.y);
    vec2 _1020 = vec2(pa[0].z, pa[0].w);
    vec2 _1022 = unpack2xF16(_1020.x);
    vec3 _1028 = vec3(_1022.x, _1022.y, unpack2xF16(_1020.y).x);
    internals[1] = vec4(_1028.x, _1028.y, _1028.z, internals[1].w);
    vec2 _1038 = vec2(pa[1].x, pa[1].y);
    vec2 _1040 = unpack2xF16(_1038.x);
    vec2 _1053 = vec2(pa[1].x, pa[1].y);
    vec2 _1055 = unpack2xF16(_1053.x);
    vec4 _1065 = internals[0];
    _1065.x = dot(vec4(_1040.x, _1040.y, unpack2xF16(_1038.y).x, 0.0), vec4(_1055.x, _1055.y, unpack2xF16(_1053.y).x, 1.0));
    internals[0] = _1065;
    vec4 _1075 = internals[0];
    vec4 _1081 = internals[1];
    _1081.w = unpack2xF16(sa[1].y).y;
    internals[1] = _1081;
    vec2 _1087 = unpack2xF16(pa[0].y);
    vec2 _1092 = vec2(pack2xF16(vec2(inversesqrt(_1075.x))), pack2xF16(vec2(_1087.x, _1087.y)));
    pa[0] = vec4(_1092.x, _1092.y, pa[0].z, pa[0].w);
    vec2 _1101 = unpack2xF16(pa[0].x);
    vec2 _1112 = vec2(pa[1].x, pa[1].y);
    vec2 _1114 = unpack2xF16(_1112.x);
    vec3 _1121 = vec3(_1101.x, _1101.x, _1101.x) * vec3(_1114.x, _1114.y, unpack2xF16(_1112.y).x);
    vec2 _1134 = vec2(pack2xF16(vec2(_1121.x, _1121.y)), pack2xF16(vec2(_1121.z, unpack2xF16(pa[0].w).y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1134.x, _1134.y);
    vec2 _1144 = vec2(pa[1].z, pa[1].w);
    vec2 _1146 = unpack2xF16(_1144.x);
    vec2 _1159 = vec2(pa[0].z, pa[0].w);
    vec2 _1161 = unpack2xF16(_1159.x);
    vec2 _1179 = unpack2xF16(pa[0].y);
    vec2 _1184 = vec2(pack2xF16(vec2(dot(vec4(_1146.x, _1146.y, unpack2xF16(_1144.y).x, 0.0), vec4(_1161.x, _1161.y, unpack2xF16(_1159.y).x, 1.0)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1179.x, _1179.y)));
    pa[0] = vec4(_1184.x, _1184.y, pa[0].z, pa[0].w);
    vec2 _1206 = unpack2xF16(pa[0].y);
    vec2 _1211 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1206.x, _1206.y)));
    pa[0] = vec4(_1211.x, _1211.y, pa[0].z, pa[0].w);
    vec2 _1240 = unpack2xF16(pa[0].y);
    vec2 _1245 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(sa[5].y).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1240.x, _1240.y)));
    pa[0] = vec4(_1245.x, _1245.y, pa[0].z, pa[0].w);
    vec2 _1254 = unpack2xF16(pa[0].x);
    vec2 _1265 = vec2(sa[1].x, sa[1].y);
    vec2 _1267 = unpack2xF16(_1265.x);
    vec2 _1269 = unpack2xF16(_1265.y);
    vec4 _1275 = vec4(_1254.x, _1254.x, _1254.x, 1.0) * vec4(_1267.x, _1267.y, _1269.x, _1269.y);
    vec2 _1284 = vec2(pack2xF16(vec2(_1275.x, _1275.y)), pack2xF16(vec2(_1275.z, _1275.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1284.x, _1284.y);
    vec2 _1313 = unpack2xF16(pa[0].y);
    vec2 _1318 = vec2(pack2xF16(vec2(unpack2xF16(sa[1].w).x * unpack2xF16(pa[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1313.x, _1313.y)));
    pa[0] = vec4(_1318.x, _1318.y, pa[0].z, pa[0].w);
    vec2 _1340 = unpack2xF16(pa[0].y);
    vec2 _1345 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1340.x, _1340.y)));
    pa[0] = vec4(_1345.x, _1345.y, pa[0].z, pa[0].w);
    vec2 _1354 = unpack2xF16(pa[0].x);
    vec2 _1366 = vec2(pa[0].z, pa[0].w);
    vec2 _1368 = unpack2xF16(_1366.x);
    vec2 _1370 = unpack2xF16(_1366.y);
    vec2 _1382 = vec2(sa[0].z, sa[0].w);
    vec2 _1384 = unpack2xF16(_1382.x);
    vec2 _1386 = unpack2xF16(_1382.y);
    vec4 _1393 = (vec4(_1354.x, _1354.x, _1354.x, _1354.x) * vec4(_1368.x, _1368.y, _1370.x, _1370.y)) + vec4(_1384.x, _1384.y, _1386.x, _1386.y);
    vec2 _1402 = vec2(pack2xF16(vec2(_1393.x, _1393.y)), pack2xF16(vec2(_1393.z, _1393.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1402.x, _1402.y);
    vec2 _1412 = vec2(pa[0].z, pa[0].w);
    vec2 _1414 = unpack2xF16(_1412.x);
    vec2 _1416 = unpack2xF16(_1412.y);
    vec4 _1426 = vec4(_1414.x, _1414.y, _1416.x, _1416.y) + internals[1];
    vec2 _1435 = vec2(pack2xF16(vec2(_1426.x, _1426.y)), pack2xF16(vec2(_1426.z, _1426.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1435.x, _1435.y);
    vec2 _1444 = unpack2xF16(pa[0].y);
    vec2 _1453 = unpack2xF16(sa[5].y);
    vec2 _1463 = unpack2xF16(pa[0].w);
    vec2 _1468 = (vec2(_1444.x, _1444.x) * (vec2(0.0) - vec2(_1453.x, _1453.x))) + vec2(_1463.y, _1463.y);
    vec2 _1476 = unpack2xF16(pa[0].y);
    vec2 _1481 = vec2(pack2xF16(vec2(_1468.x, _1468.y)), pack2xF16(vec2(_1476.x, _1476.y)));
    pa[0] = vec4(_1481.x, _1481.y, pa[0].z, pa[0].w);
    vec2 _1499 = vec2(pa[0].z, pa[0].w);
    vec2 _1501 = unpack2xF16(_1499.x);
    vec4 _1508 = vec4(1.0, 1.0, 1.0, unpack2xF16(pa[0].x).x) * vec4(_1501.x, _1501.y, unpack2xF16(_1499.y).x, 1.0);
    vec2 _1517 = vec2(pack2xF16(vec2(_1508.x, _1508.y)), pack2xF16(vec2(_1508.z, _1508.w)));
    pa[0] = vec4(_1517.x, _1517.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _171)
{
    uint _174 = floatBitsToUint(_171);
    return uvec2(bitfieldExtract(_174, 0, 16), bitfieldExtract(_174, 16, 16));
}

void frag_output_finalize()
{
    vec2 _137 = vec2(pa[0].x, pa[0].y);
    vec2 _148 = unpack2xF16(_137.x);
    vec2 _150 = unpack2xF16(_137.y);
    out_color = vec4(_148.x, _148.y, _150.x, _150.y);
    vec2 _167 = vec2(pa[0].x, pa[0].y);
    uvec2 _180 = unpack2xU16(_167.x);
    uvec2 _182 = unpack2xU16(_167.y);
    out_color_ui = uvec4(_180.x, _180.y, _182.x, _182.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(sa[1].x, sa[1].y, vec2(8.0356059138242310115050349224177e-41, 2.1666876855390321550622706816829e-41).x, vec2(8.0356059138242310115050349224177e-41, 2.1666876855390321550622706816829e-41).y);
    sa[3] = vec4(6.399730086571439562908673006885e-41, 6.5432230493183008309712629162139e-41, 2.3676338853232109230327335039266e-41, 7.0670284152829174520825530344477e-41);
    sa[4] = vec4(6.7441692491024795989417257384577e-41, 2.6008099497868604836344421065861e-41, -0.00785732269287109375, 2.00390625);
    sa[5] = vec4(vec3(2.2241409225763496549701435945978e-41, 2.2958874039497802890014385492622e-41, 2.1523944412029190209388486399333e-41).x, vec3(2.2241409225763496549701435945978e-41, 2.2958874039497802890014385492622e-41, 2.1523944412029190209388486399333e-41).y, vec3(2.2241409225763496549701435945978e-41, 2.2958874039497802890014385492622e-41, 2.1523944412029190209388486399333e-41).z, sa[5].w);
    vec2 _224 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_224.x, _224.y, pa[0].z, pa[0].w);
    vec2 _240 = unpack2xF16(pa[2].y);
    vec2 _245 = vec2(pack2xF16(vec2(v_TexCoord0.x, unpack2xF16(pa[2].x).y)), pack2xF16(vec2(_240.x, _240.y)));
    pa[2] = vec4(_245.x, _245.y, pa[2].z, pa[2].w);
    frag_init();
    vec4 _257 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _262 = vec2(pack2xF16(_257.xy), pack2xF16(_257.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _262.x, _262.y);
    vec4 _268 = texture(fragTex_sampler0, v_TexCoord2.xy);
    vec2 _273 = vec2(pack2xF16(_268.xy), pack2xF16(_268.zw));
    pa[1] = vec4(_273.x, _273.y, pa[1].z, pa[1].w);
    vec4 _279 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _284 = vec2(pack2xF16(_279.xy), pack2xF16(_279.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _284.x, _284.y);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:43.093] |I| [load_shader_generic]: Generating vert shader 2fd4d5a62cbaf22d76ea9fd894a851ec6655114876c0f1b62662935125fc2d60
[10:36:43.100] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 2fd4d5a62cbaf22d76ea9fd894a851ec6655114876c0f1b62662935125fc2d60

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[10];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _209 = sa[17];
    _209.x = sa[9].z * sa[9].w;
    sa[17] = _209;
    vec4 _224 = internals[0];
    _224.x = (0.0 - sa[9].x) * sa[9].y;
    internals[0] = _224;
    vec4 _239 = sa[16];
    _239.z = (internals[0].x * sa[13].y) + 0.0;
    sa[16] = _239;
    vec4 _257 = sa[9];
    _257.z = fract(abs(sa[16].z));
    sa[9] = _257;
    vec4 _278 = sa[8];
    _278.x = (internals[0].x * sa[13].y) + sa[11].y;
    sa[8] = _278;
    vec4 _296 = sa[9];
    _296.x = fract(abs(sa[8].x));
    sa[9] = _296;
    vec4 _316 = sa[8];
    _316.y = (internals[0].x * sa[13].y) + sa[11].x;
    sa[8] = _316;
    vec4 _334 = sa[8];
    _334.z = fract(abs(sa[8].y));
    sa[8] = _334;
    vec4 _345 = sa[7];
    _345.z = (0.0 - sa[9].z) * 1.0;
    sa[7] = _345;
    vec4 _356 = sa[6];
    _356.z = (0.0 - sa[9].x) * 1.0;
    sa[6] = _356;
    vec4 _367 = sa[5];
    _367.z = (0.0 - sa[8].z) * 1.0;
    sa[5] = _367;
    vec4 _375 = sa[4];
    _375.z = sa[8].y;
    sa[4] = _375;
}

void primary_program()
{
    vec4 _388 = vec4(lessThan(pa[1], vec4(0.5, 0.125, 0.25, 0.0625)));
    outs[0] = vec4(_388.x, _388.y, _388.z, _388.w);
    p[0] = pa[1].x < 0.5;
    vec2 _410 = vec2(pa[0].x, pa[0].y);
    vec2 _417 = vec2(pa[0].z, pa[0].w);
    internals[1] = vec4(_410.x, _410.y, _417.x, _417.y);
    if (p[0])
    {
        vec4 _441 = internals[1];
        _441.y = sa[12].y * pa[0].y;
        internals[1] = _441;
    }
    vec2 _452 = vec2(pa[0].x, pa[0].y);
    vec2 _459 = vec2(pa[0].z, pa[0].w);
    internals[2] = vec4(_452.x, _452.y, _459.x, _459.y);
    if (!p[0])
    {
        vec4 _484 = internals[2];
        _484.y = sa[12].x * pa[0].y;
        internals[2] = _484;
    }
    internals[0] = vec4(outs[0].x, outs[0].x, outs[0].x, outs[0].x);
    bvec4 _507 = notEqual(internals[0], vec4(0.0));
    internals[0] = vec4(_507.x ? internals[1].x : internals[2].x, _507.y ? internals[1].y : internals[2].y, _507.z ? internals[1].z : internals[2].z, _507.w ? internals[1].w : internals[2].w);
    vec4 _523 = internals[1];
    _523.x = sa[4].x * pa[0].x;
    internals[1] = _523;
    vec4 _543 = internals[1];
    _543.x = (pa[0].y * sa[5].x) + internals[1].x;
    internals[1] = _543;
    vec4 _563 = internals[1];
    _563.x = (pa[0].z * sa[6].x) + internals[1].x;
    internals[1] = _563;
    vec4 _583 = internals[1];
    _583.x = (pa[0].w * sa[7].x) + internals[1].x;
    internals[1] = _583;
    vec4 _603 = internals[1];
    _603.x = (internals[1].x * sa[9].y) + sa[17].x;
    internals[1] = _603;
    vec4 _618 = internals[1];
    _618.x = (internals[1].x * sa[11].w) + 0.0;
    internals[1] = _618;
    vec4 _638 = internals[1];
    _638.x = (internals[1].x * sa[15].z) + sa[16].x;
    internals[1] = _638;
    vec4 _652 = internals[1];
    _652.x = fract(internals[1].x);
    internals[1] = _652;
    vec4 _672 = internals[2];
    _672.x = (internals[1].x * sa[15].y) + sa[15].x;
    internals[2] = _672;
    vec4 _687 = pa[0];
    _687.z = (internals[2].x * internals[2].x) + 0.0;
    pa[0] = _687;
    vec4 _707 = internals[1];
    _707.x = (pa[0].z * sa[14].w) + sa[14].z;
    internals[1] = _707;
    vec4 _728 = internals[1];
    _728.x = (internals[1].x * pa[0].z) + (0.0 - sa[14].y);
    internals[1] = _728;
    vec4 _748 = internals[1];
    _748.x = (internals[1].x * pa[0].z) + sa[16].x;
    internals[1] = _748;
    vec4 _763 = pa[0];
    _763.x = (internals[2].x * internals[1].x) + 0.0;
    pa[0] = _763;
    vec4 _783 = internals[1];
    _783.x = (pa[0].z * sa[14].x) + sa[13].w;
    internals[1] = _783;
    vec4 _804 = internals[1];
    _804.x = (pa[0].z * internals[1].x) + (0.0 - sa[13].z);
    internals[1] = _804;
    vec4 _824 = internals[2];
    _824.x = (pa[0].z * internals[1].x) + sa[15].w;
    internals[2] = _824;
    vec4 _839 = internals[1];
    _839.x = (internals[2].x * pa[0].x) + 0.0;
    internals[1] = _839;
    vec4 _859 = internals[1];
    _859.x = (internals[2].x * pa[0].x) + internals[1].x;
    internals[1] = _859;
    vec4 _874 = internals[1];
    _874.x = (1.0 * sa[11].z) + internals[1].x;
    internals[1] = _874;
    vec4 _889 = internals[1];
    _889.x = (internals[1].x * sa[8].w) + 0.0;
    internals[1] = _889;
    vec4 _904 = internals[1];
    _904.x = (internals[1].x * pa[1].y) + 0.0;
    internals[1] = _904;
    vec4 _924 = internals[1];
    _924.x = (internals[1].x * pa[1].y) + internals[0].x;
    internals[1] = _924;
    vec4 _938 = pa[1];
    _938.x = sa[16].x * pa[1].x;
    pa[1] = _938;
    internals[1] = sa[0] * vec4(internals[1].x, internals[1].x, internals[1].x, internals[1].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec2 _1037 = vec2(vec2(pa[1].x, pa[1].y).x, vec2(pa[1].x, pa[1].y).y);
    outs[2] = vec4(outs[2].x, outs[2].y, _1037.x, _1037.y);
    vec4 _1049 = pa[1];
    _1049.y = 1.0 / internals[0].w;
    pa[1] = _1049;
    vec4 _1058 = internals[1];
    _1058.x = sa[16].z;
    internals[1] = _1058;
    vec4 _1079 = outs[1];
    _1079.x = (internals[1].x < 0.0) ? sa[7].z : sa[9].z;
    outs[1] = _1079;
    vec4 _1087 = internals[1];
    _1087.x = sa[8].x;
    internals[1] = _1087;
    vec4 _1107 = outs[3];
    _1107.x = (internals[1].x < 0.0) ? sa[6].z : sa[9].x;
    outs[3] = _1107;
    vec4 _1115 = internals[1];
    _1115.x = sa[4].z;
    internals[1] = _1115;
    vec4 _1135 = outs[4];
    _1135.x = (internals[1].x < 0.0) ? sa[5].z : sa[8].z;
    outs[4] = _1135;
    vec2 _1150 = vec2(sa[8].x, sa[8].y) * vec2(sa[13].x, sa[13].x);
    pa[0] = vec4(_1150.x, _1150.y, pa[0].z, pa[0].w);
    vec2 _1176 = (vec2(pa[0].x, pa[0].y) * vec2(sa[15].z, sa[15].z)) + vec2(sa[16].x, sa[16].x);
    pa[0] = vec4(_1176.x, _1176.y, pa[0].z, pa[0].w);
    vec2 _1194 = fract(vec2(pa[0].x, pa[0].y));
    pa[0] = vec4(_1194.x, _1194.y, pa[0].z, pa[0].w);
    vec2 _1220 = (vec2(pa[0].x, pa[0].y) * vec2(sa[15].y, sa[15].y)) + vec2(sa[15].x, sa[15].x);
    internals[1] = vec4(_1220.x, _1220.y, internals[1].z, internals[1].w);
    vec4 _1239 = internals[1];
    vec4 _1244 = internals[1];
    vec4 _1250 = internals[2];
    _1250.x = abs(internals[1].y) * internals[1].y;
    internals[2] = _1250;
    vec4 _1253 = pa[0];
    _1253.w = _1239.x * _1244.x;
    pa[0] = _1253;
    vec4 _1268 = pa[0];
    _1268.z = (0.0 - pa[1].x) + sa[10].w;
    pa[0] = _1268;
    vec4 _1284 = pa[0];
    _1284.x = sa[10].z + abs(pa[0].z);
    pa[0] = _1284;
    vec4 _1293 = pa[0];
    _1293.x = max(pa[0].x, 0.0);
    pa[0] = _1293;
    vec4 _1302 = pa[0];
    _1302.x = log(pa[0].x);
    pa[0] = _1302;
    vec4 _1311 = pa[0];
    _1311.x = exp(pa[0].x);
    pa[0] = _1311;
    vec4 _1325 = outs[1];
    _1325.z = pa[1].x * pa[0].x;
    outs[1] = _1325;
    vec4 _1341 = pa[0];
    _1341.x = sa[10].y + abs(pa[0].z);
    pa[0] = _1341;
    vec4 _1350 = pa[0];
    _1350.x = max(pa[0].x, 0.0);
    pa[0] = _1350;
    vec4 _1359 = pa[0];
    _1359.y = log(pa[0].x);
    pa[0] = _1359;
    vec4 _1368 = pa[0];
    _1368.y = exp(pa[0].y);
    pa[0] = _1368;
    vec4 _1382 = pa[0];
    _1382.x = outs[2].w + sa[10].x;
    pa[0] = _1382;
    vec4 _1402 = pa[0];
    _1402.x = (pa[0].x * pa[0].y) + sa[16].x;
    pa[0] = _1402;
    vec4 _1416 = pa[0];
    _1416.x = min(pa[0].x, sa[15].w);
    pa[0] = _1416;
    vec4 _1425 = outs[1];
    _1425.w = max(pa[0].x, 0.0);
    outs[1] = _1425;
    vec4 _1445 = pa[0];
    _1445.x = (pa[0].w * sa[14].w) + sa[14].z;
    pa[0] = _1445;
    vec4 _1466 = pa[0];
    _1466.x = (pa[0].x * pa[0].w) + (0.0 - sa[14].y);
    pa[0] = _1466;
    vec4 _1486 = pa[0];
    _1486.x = (pa[0].x * pa[0].w) + sa[16].x;
    pa[0] = _1486;
    vec4 _1501 = pa[0];
    _1501.z = (internals[1].x * pa[0].x) + 0.0;
    pa[0] = _1501;
    vec4 _1521 = pa[0];
    _1521.x = (internals[2].x * sa[14].w) + sa[14].z;
    pa[0] = _1521;
    vec4 _1542 = pa[0];
    _1542.x = (internals[2].x * pa[0].x) + (0.0 - sa[14].y);
    pa[0] = _1542;
    vec4 _1562 = pa[0];
    _1562.x = (internals[2].x * pa[0].x) + sa[16].x;
    pa[0] = _1562;
    vec4 _1577 = pa[1];
    _1577.x = (internals[1].y * pa[0].x) + 0.0;
    pa[1] = _1577;
    vec4 _1597 = internals[1];
    _1597.x = (pa[0].w * sa[14].x) + sa[13].w;
    internals[1] = _1597;
    vec4 _1618 = internals[1];
    _1618.x = (internals[1].x * pa[0].w) + (0.0 - sa[13].z);
    internals[1] = _1618;
    vec4 _1638 = pa[0];
    _1638.x = (internals[1].x * pa[0].w) + sa[15].w;
    pa[0] = _1638;
    vec4 _1658 = internals[1];
    _1658.x = (internals[2].x * sa[14].x) + sa[13].w;
    internals[1] = _1658;
    vec4 _1679 = internals[1];
    _1679.x = (internals[2].x * internals[1].x) + (0.0 - sa[13].z);
    internals[1] = _1679;
    vec2 _1695 = (vec2(internals[0].x, internals[0].y) * vec2(pa[1].y, pa[1].y)) + vec2(0.0);
    internals[0] = vec4(_1695.x, _1695.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec4 _1729 = internals[0];
    vec2 _1733 = vec2(_1729.x, _1729.y);
    vec4 _1736 = internals[2];
    _1736.x = (internals[2].x * internals[1].x) + sa[15].w;
    internals[2] = _1736;
    outs[0] = vec4(_1733.x, _1733.y, outs[0].z, outs[0].w);
    vec2 _1746 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _1746.x, _1746.y);
    vec2 _1763 = vec2(outs[1].x, 0.0) + vec2(outs[1].z, outs[1].w);
    outs[2] = vec4(_1763.x, _1763.y, outs[2].z, outs[2].w);
    vec4 _1780 = internals[0];
    _1780.x = pa[0].z * pa[0].z;
    internals[0] = _1780;
    vec4 _1800 = internals[1];
    _1800.x = (pa[0].z * pa[0].z) + internals[0].x;
    internals[1] = _1800;
    vec4 _1814 = internals[0];
    _1814.x = pa[0].x * pa[0].z;
    internals[0] = _1814;
    vec4 _1834 = internals[0];
    _1834.x = (pa[0].z * pa[0].x) + internals[0].x;
    internals[0] = _1834;
    vec4 _1849 = pa[0];
    _1849.x = (internals[0].x * sa[12].w) + 0.0;
    pa[0] = _1849;
    vec4 _1865 = pa[0];
    _1865.y = (1.0 * sa[15].w) + (0.0 - internals[1].x);
    pa[0] = _1865;
    vec2 _1888 = (vec2(pa[0].x, pa[0].y) * vec2(sa[12].z, sa[12].z)) + vec2(outs[1].z, outs[1].w);
    pa[0] = vec4(_1888.x, _1888.y, pa[0].z, pa[0].w);
    vec2 _1905 = vec2(outs[3].x, 0.0) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_1905.x, _1905.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _1924 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_1924.x, _1924.y, outs[3].z, outs[3].w);
    vec4 _1941 = internals[1];
    _1941.x = internals[2].x * pa[1].x;
    internals[1] = _1941;
    vec2 _1948 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _1948.x, _1948.y);
    vec4 _1965 = internals[0];
    _1965.x = pa[1].x * pa[1].x;
    internals[0] = _1965;
    vec4 _1985 = pa[0];
    _1985.z = (pa[1].x * pa[1].x) + internals[0].x;
    pa[0] = _1985;
    vec4 _2005 = internals[0];
    _2005.x = (internals[2].x * pa[1].x) + internals[1].x;
    internals[0] = _2005;
    vec4 _2020 = pa[0];
    _2020.x = (internals[0].x * sa[12].w) + 0.0;
    pa[0] = _2020;
    vec4 _2035 = pa[0];
    _2035.y = (0.0 - pa[0].z) + sa[15].w;
    pa[0] = _2035;
    vec2 _2058 = (vec2(pa[0].x, pa[0].y) * vec2(sa[12].z, sa[12].z)) + vec2(outs[1].z, outs[1].w);
    pa[0] = vec4(_2058.x, _2058.y, pa[0].z, pa[0].w);
    vec2 _2075 = vec2(outs[4].x, 0.0) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_2075.x, _2075.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _2094 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_2094.x, _2094.y, outs[4].z, outs[4].w);
    vec2 _2104 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _2104.x, _2104.y);
    internals[0] = vec4(outs[1].z, outs[1].w, 0.0, 0.0) * vec4(1.0);
    vec2 _2123 = vec2(internals[0].x, internals[0].y);
    outs[1] = vec4(_2123.x, _2123.y, outs[1].z, outs[1].w);
    vec2 _2133 = vec2(internals[0].z, internals[0].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _2133.x, _2133.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
}

void main()
{
    int i = 0;
    while (i < 10)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[10] = vec4(-0.5, 1.7000000476837158203125, 0.699999988079071044921875, 0.60000002384185791015625);
    sa[11] = vec4(0.532000005245208740234375, 0.319999992847442626953125, -1.0, 0.300000011920928955078125);
    sa[12] = vec4(1.25, 0.550000011920928955078125, 0.010000000707805156707763671875, 5.0);
    sa[13] = vec4(11.0, 0.25, 0.125, 0.00260416674427688121795654296875);
    sa[14] = vec4(-2.1701389414374716579914093017578e-05, 0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06);
    sa[15] = vec4(-3.1415927410125732421875, 6.283185482025146484375, 0.15915493667125701904296875, 1.0);
    vec4 _108 = sa[16];
    _108.x = 0.5;
    sa[16] = _108;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:43.168] |E| [compile_program]: Vertex info
-----------
0(35) : warning C7050: "internals[0]" might be used before being initialized

Fragment info
-------------
0(38) : warning C7050: "pa[0].zw" might be used before being initialized
0(38) : warning C7050: "pa[1].zw" might be used before being initialized
0(38) : warning C7050: "pa[2]" might be used before being initialized
0(40) : warning C7050: "internals[0].w" might be used before being initialized
0(40) : warning C7050: "internals[1]" might be used before being initialized
0(40) : warning C7050: "internals[2].w" might be used before being initialized


[10:36:43.174] |I| [load_shader_generic]: Generating frag shader f7bab961691474f2c5fb9aeee2b2e42f3b061e6ff5381958093d8ca8ab5a27a4
[10:36:43.176] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: f7bab961691474f2c5fb9aeee2b2e42f3b061e6ff5381958093d8ca8ab5a27a4

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 5) in vec4 v_TexCoord1;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _200)
{
    return uintBitsToFloat(packHalf2x16(_200));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _128)
{
    return unpackHalf2x16(floatBitsToUint(_128));
}

void primary_program()
{
    vec2 _265 = unpack2xF16(pa[0].z);
    vec2 _274 = unpack2xF16(pa[1].y);
    vec2 _283 = unpack2xF16(sa[2].z);
    vec2 _288 = (vec2(_265.x, _265.x) * vec2(_274.y, _274.y)) + vec2(_283.x, _283.x);
    vec2 _296 = unpack2xF16(pa[0].y);
    vec2 _301 = vec2(pack2xF16(vec2(_288.x, _288.y)), pack2xF16(vec2(_296.x, _296.y)));
    pa[0] = vec4(_301.x, _301.y, pa[0].z, pa[0].w);
    vec2 _330 = unpack2xF16(pa[0].w);
    vec2 _335 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].y).x + unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_330.x, _330.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _335.x, _335.y);
    vec2 _364 = unpack2xF16(pa[0].w);
    vec2 _369 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(sa[2].y).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_364.x, _364.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _369.x, _369.y);
    vec2 _382 = vec2(unpack2xF16(pa[0].z).x, 0.5) * vec2(1.0);
    vec2 _390 = unpack2xF16(pa[0].w);
    vec2 _395 = vec2(pack2xF16(vec2(_382.x, _382.y)), pack2xF16(vec2(_390.x, _390.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _395.x, _395.y);
    vec2 _404 = unpack2xF16(pa[0].z);
    vec4 _409 = texture(fragTex_sampler2, vec2(_404.x, _404.y));
    vec2 _418 = vec2(pack2xF16(vec2(_409.x, _409.y)), pack2xF16(vec2(_409.z, _409.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _418.x, _418.y);
    vec2 _447 = unpack2xF16(pa[0].w);
    vec2 _452 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].x).x * unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_447.x, _447.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _452.x, _452.y);
    vec2 _481 = unpack2xF16(pa[0].w);
    vec2 _486 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_481.x, _481.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _486.x, _486.y);
    vec2 _495 = unpack2xF16(pa[1].y);
    vec2 _504 = unpack2xF16(pa[0].z);
    vec2 _514 = unpack2xF16(pa[0].z);
    vec2 _519 = (vec2(_495.x, _495.x) * (vec2(0.0) - vec2(_504.x, _504.x))) + vec2(_514.x, _514.x);
    vec2 _527 = unpack2xF16(pa[0].w);
    vec2 _532 = vec2(pack2xF16(vec2(_519.x, _519.y)), pack2xF16(vec2(_527.x, _527.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _532.x, _532.y);
    vec2 _541 = unpack2xF16(pa[1].y);
    vec2 _550 = unpack2xF16(sa[2].z);
    vec2 _559 = unpack2xF16(pa[0].z);
    vec2 _564 = (vec2(_541.x, _541.x) * vec2(_550.x, _550.x)) + vec2(_559.x, _559.x);
    vec2 _572 = unpack2xF16(pa[0].w);
    vec2 _577 = vec2(pack2xF16(vec2(_564.x, _564.y)), pack2xF16(vec2(_572.x, _572.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _577.x, _577.y);
    vec2 _607 = unpack2xF16(pa[0].w);
    vec2 _612 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].z).x) + unpack2xF16(pa[0].y).y, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_607.x, _607.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _612.x, _612.y);
    vec2 _644 = unpack2xF16(pa[0].y);
    vec2 _649 = vec2(pack2xF16(vec2((0.0 - abs(unpack2xF16(pa[0].z).x)) + unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_644.x, _644.y)));
    pa[0] = vec4(_649.x, _649.y, pa[0].z, pa[0].w);
    vec2 _678 = unpack2xF16(pa[0].y);
    vec2 _683 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(sa[1].w).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_678.x, _678.y)));
    pa[0] = vec4(_683.x, _683.y, pa[0].z, pa[0].w);
    vec2 _700 = vec2(sa[1].z, sa[1].z);
    bvec2 _702 = lessThan(vec2(pa[0].x, pa[0].y), vec2(0.0));
    vec2 _703 = vec2(_702.x ? vec2(0.0).x : _700.x, _702.y ? vec2(0.0).y : _700.y);
    vec2 _711 = unpack2xF16(pa[0].y);
    vec2 _716 = vec2(pack2xF16(vec2(_703.x, _703.y)), pack2xF16(vec2(_711.x, _711.y)));
    pa[0] = vec4(_716.x, _716.y, pa[0].z, pa[0].w);
    vec2 _734 = vec2(sa[0].x, sa[0].y);
    vec2 _736 = unpack2xF16(_734.x);
    vec2 _738 = unpack2xF16(_734.y);
    vec4 _744 = vec4(1.0, 1.0, 1.0, unpack2xF16(pa[0].x).x) * vec4(_736.x, _736.y, _738.x, _738.y);
    vec2 _753 = vec2(pack2xF16(vec2(_744.x, _744.y)), pack2xF16(vec2(_744.z, _744.w)));
    pa[0] = vec4(_753.x, _753.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _158)
{
    uint _161 = floatBitsToUint(_158);
    return uvec2(bitfieldExtract(_161, 0, 16), bitfieldExtract(_161, 16, 16));
}

void frag_output_finalize()
{
    vec2 _124 = vec2(pa[0].x, pa[0].y);
    vec2 _135 = unpack2xF16(_124.x);
    vec2 _137 = unpack2xF16(_124.y);
    out_color = vec4(_135.x, _135.y, _137.x, _137.y);
    vec2 _154 = vec2(pa[0].x, pa[0].y);
    uvec2 _167 = unpack2xU16(_154.x);
    uvec2 _169 = unpack2xU16(_154.y);
    out_color_ui = uvec4(_167.x, _167.y, _169.x, _169.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(sa[1].x, sa[1].y, vec4(2.1523944412029190209388486399333e-41, 6.6006762863556183308791358291288e-41, 2.2241409225763496549701435945978e-41, 1.7611519099634300947369433402788e-41).x, vec4(2.1523944412029190209388486399333e-41, 6.6006762863556183308791358291288e-41, 2.2241409225763496549701435945978e-41, 1.7611519099634300947369433402788e-41).y);
    sa[2] = vec4(vec4(2.1523944412029190209388486399333e-41, 6.6006762863556183308791358291288e-41, 2.2241409225763496549701435945978e-41, 1.7611519099634300947369433402788e-41).z, vec4(2.1523944412029190209388486399333e-41, 6.6006762863556183308791358291288e-41, 2.2241409225763496549701435945978e-41, 1.7611519099634300947369433402788e-41).w, sa[2].z, sa[2].w);
    vec4 _79 = sa[2];
    _79.z = 2.0089014784560577528762587306044e-41;
    sa[2] = _79;
    vec2 _212 = vec2(pack2xF16(vec2(v_TexCoord0.x, v_TexCoord0.y)), pack2xF16(vec2(v_TexCoord0.z, v_TexCoord0.w)));
    pa[0] = vec4(_212.x, _212.y, pa[0].z, pa[0].w);
    vec2 _225 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[1] = vec4(_225.x, _225.y, pa[1].z, pa[1].w);
    frag_init();
    vec4 _238 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _243 = vec2(pack2xF16(_238.xy), pack2xF16(_238.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _243.x, _243.y);
    vec4 _249 = texture(fragTex_sampler1, v_TexCoord0.xy);
    vec2 _254 = vec2(pack2xF16(_249.xy), pack2xF16(_249.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _254.x, _254.y);
    primary_program();
    frag_output_finalize();
}


[10:36:43.178] |I| [load_shader_generic]: Generating vert shader 9c127dd1ef1fda3ec28d1e1ab76e26c065b80a01f9aa53118ab4d26bac508313
[10:36:43.183] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 9c127dd1ef1fda3ec28d1e1ab76e26c065b80a01f9aa53118ab4d26bac508313

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[9];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _197 = sa[13];
    _197.z = 0.0;
    sa[13] = _197;
    vec4 _212 = sa[13];
    _212.w = sa[12].x + sa[8].y;
    sa[13] = _212;
    vec2 _237 = vec2(vec2(sa[13].z, sa[13].w).x, vec2(sa[13].z, sa[13].w).y);
    sa[12] = vec4(sa[12].x, sa[12].y, _237.x, _237.y);
    vec4 _254 = sa[13];
    _254.w = sa[12].x + sa[8].z;
    sa[13] = _254;
    vec2 _278 = vec2(vec2(sa[13].z, sa[13].w).x, vec2(sa[13].z, sa[13].w).y);
    sa[13] = vec4(_278.x, _278.y, sa[13].z, sa[13].w);
    vec4 _296 = sa[15];
    _296.z = sa[11].w + sa[6].z;
    sa[15] = _296;
    vec4 _310 = sa[15];
    _310.x = sa[11].w + sa[7].z;
    sa[15] = _310;
    vec4 _324 = sa[14];
    _324.z = sa[4].x * sa[4].y;
    sa[14] = _324;
    vec4 _338 = sa[14];
    _338.x = sa[14].z * sa[11].x;
    sa[14] = _338;
    vec4 _352 = internals[0];
    _352.x = sa[14].x * sa[10].w;
    internals[0] = _352;
    vec4 _370 = internals[0];
    _370.x = fract(abs(internals[0].x));
    internals[0] = _370;
    vec4 _385 = sa[8];
    _385.z = (internals[0].x * sa[10].z) + 0.0;
    sa[8] = _385;
    vec4 _399 = sa[13];
    _399.w = sa[8].x + sa[12].x;
    sa[13] = _399;
    vec4 _413 = internals[0];
    _413.x = sa[11].w + sa[5].z;
    internals[0] = _413;
    vec2 _436 = (vec2(internals[0].x, internals[0].x) * vec2(sa[14].z, sa[14].z)) + vec2(sa[13].z, sa[13].w);
    sa[7] = vec4(sa[7].x, sa[7].y, _436.x, _436.y);
    vec4 _453 = sa[6];
    _453.z = sa[4].x + sa[10].x;
    sa[6] = _453;
    vec4 _463 = sa[5];
    _463.z = (0.0 - sa[8].z) * 1.0;
    sa[5] = _463;
}

void primary_program()
{
    vec4 _480 = pa[1];
    _480.y = sa[10].y + pa[1].y;
    pa[1] = _480;
    vec2 _491 = vec2(pa[0].x, pa[0].y);
    vec2 _498 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_491.x, _491.y, _498.x, _498.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _588 = outs[0];
    _588.y = 1.0 / internals[0].w;
    outs[0] = _588;
    vec4 _597 = internals[1];
    _597.x = sa[14].x;
    internals[1] = _597;
    vec4 _618 = outs[1];
    _618.z = (internals[1].x < 0.0) ? sa[5].z : sa[8].z;
    outs[1] = _618;
    vec2 _633 = vec2(sa[13].z, sa[13].w) + vec2(pa[1].x, pa[1].y);
    pa[0] = vec4(_633.x, _633.y, pa[0].z, pa[0].w);
    vec2 _659 = (vec2(pa[1].x, pa[1].y) * vec2(sa[9].x, sa[9].y)) + vec2(sa[7].z, sa[7].w);
    r[0] = vec4(_659.x, _659.y, r[0].z, r[0].w);
    vec4 _670 = outs[0];
    _670.x = pa[0].y;
    outs[0] = _670;
    vec4 _688 = pa[0];
    _688.z = fract(abs(r[0].x));
    pa[0] = _688;
    vec4 _702 = internals[2];
    _702.x = sa[6].z * sa[4].z;
    internals[2] = _702;
    vec4 _716 = internals[1];
    _716.x = sa[4].x + sa[9].w;
    internals[1] = _716;
    vec4 _731 = r[0];
    _731.z = (internals[1].x * sa[4].w) + 0.0;
    r[0] = _731;
    vec2 _746 = vec2(sa[9].x, sa[9].y) * vec2(pa[1].x, pa[1].y);
    outs[0] = vec4(outs[0].x, outs[0].y, _746.x, _746.y);
    vec4 _759 = internals[1];
    _759.x = (0.0 - pa[0].z) * 1.0;
    internals[1] = _759;
    vec4 _779 = r[0];
    _779.x = (r[0].x < 0.0) ? internals[1].x : pa[0].z;
    r[0] = _779;
    vec4 _787 = outs[1];
    _787.w = outs[0].x;
    outs[1] = _787;
    vec4 _805 = pa[0];
    _805.z = fract(abs(r[0].y));
    pa[0] = _805;
    vec4 _815 = internals[1];
    _815.y = (0.0 - pa[0].z) * 1.0;
    internals[1] = _815;
    vec4 _828 = internals[2];
    vec4 _834 = internals[1];
    _834.x = internals[1].y;
    internals[1] = _834;
    vec4 _837 = outs[3];
    _837.y = sa[9].z * _828.x;
    outs[3] = _837;
    vec4 _857 = r[0];
    _857.y = (r[0].y < 0.0) ? internals[1].x : pa[0].z;
    r[0] = _857;
    vec2 _881 = vec2(vec2(r[0].x, r[0].y).x, vec2(r[0].x, r[0].y).y);
    outs[1] = vec4(_881.x, _881.y, outs[1].z, outs[1].w);
    internals[1] = vec4(sa[12].z, sa[12].w, sa[13].x, sa[13].y) + vec4(pa[1].x, pa[1].y, pa[1].x, pa[1].y);
    vec4 _912 = outs[3];
    _912.x = sa[14].x;
    outs[3] = _912;
    vec4 _926 = outs[3];
    _926.z = r[0].z * sa[11].x;
    outs[3] = _926;
    vec2 _950 = (vec2(internals[2].x, internals[2].x) * vec2(sa[15].z, sa[15].z)) + vec2(sa[12].z, sa[12].w);
    pa[0] = vec4(pa[0].x, pa[0].y, _950.x, _950.y);
    vec2 _968 = vec2(outs[0].z, outs[0].w) + vec2(pa[0].z, pa[0].w);
    outs[4] = vec4(_968.x, _968.y, outs[4].z, outs[4].w);
    vec4 _979 = outs[4];
    _979.w = internals[1].y;
    outs[4] = _979;
    vec2 _1002 = (vec2(r[0].z, r[0].z) * vec2(sa[15].x, sa[15].x)) + vec2(sa[13].x, sa[13].y);
    pa[0] = vec4(pa[0].x, pa[0].y, _1002.x, _1002.y);
    vec2 _1020 = vec2(outs[0].z, outs[0].w) + vec2(pa[0].z, pa[0].w);
    outs[6] = vec4(_1020.x, _1020.y, outs[6].z, outs[6].w);
    vec4 _1031 = outs[6];
    _1031.w = internals[1].w;
    outs[6] = _1031;
    vec2 _1047 = (vec2(internals[0].x, internals[0].y) * vec2(outs[0].y, outs[0].y)) + vec2(0.0);
    internals[0] = vec4(_1047.x, _1047.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _1068 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_1068.x, _1068.y, outs[0].z, outs[0].w);
    vec2 _1078 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _1078.x, _1078.y);
    vec4 _1095 = internals[0];
    _1095.x = outs[1].w + outs[1].z;
    internals[0] = _1095;
    vec4 _1115 = outs[1];
    _1115.z = (pa[0].x * sa[11].z) + internals[0].x;
    outs[1] = _1115;
    vec2 _1130 = vec2(sa[13].z, sa[13].w) + vec2(sa[14].z, sa[14].z);
    pa[0] = vec4(_1130.x, _1130.y, pa[0].z, pa[0].w);
    vec2 _1156 = (vec2(pa[1].x, pa[1].y) * vec2(sa[11].y, sa[11].y)) + vec2(pa[0].x, pa[0].y);
    outs[2] = vec4(_1156.x, _1156.y, outs[2].z, outs[2].w);
    vec2 _1166 = vec2(sa[5].x, sa[5].y);
    outs[2] = vec4(outs[2].x, outs[2].y, _1166.x, _1166.y);
    vec4 _1189 = internals[0];
    _1189.x = (internals[1].x * sa[11].z) + outs[3].y;
    internals[0] = _1189;
    vec4 _1203 = outs[4];
    _1203.z = outs[4].w + internals[0].x;
    outs[4] = _1203;
    vec4 _1223 = internals[0];
    _1223.x = (internals[1].z * sa[11].z) + outs[3].z;
    internals[0] = _1223;
    vec4 _1237 = outs[6];
    _1237.z = outs[6].w + internals[0].x;
    outs[6] = _1237;
    internals[0] = vec4(outs[3].x, outs[3].y, outs[3].z, 0.0) * vec4(1.0);
    vec2 _1254 = vec2(internals[0].x, internals[0].y);
    vec2 _1269 = vec2(sa[12].z, sa[12].w) + vec2(internals[2].x, internals[2].x);
    outs[3] = vec4(_1254.x, _1254.y, outs[3].z, outs[3].w);
    internals[1] = vec4(_1269.x, _1269.y, internals[1].z, internals[1].w);
    vec2 _1282 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _1282.x, _1282.y);
    vec2 _1308 = (vec2(pa[1].x, pa[1].y) * vec2(sa[11].y, sa[11].y)) + vec2(internals[1].x, internals[1].y);
    outs[5] = vec4(_1308.x, _1308.y, outs[5].z, outs[5].w);
    vec2 _1318 = vec2(sa[6].x, sa[6].y);
    outs[5] = vec4(outs[5].x, outs[5].y, _1318.x, _1318.y);
    vec2 _1336 = vec2(sa[13].x, sa[13].y) + vec2(r[0].z, r[0].z);
    pa[0] = vec4(_1336.x, _1336.y, pa[0].z, pa[0].w);
    vec2 _1362 = (vec2(pa[1].x, pa[1].y) * vec2(sa[11].y, sa[11].y)) + vec2(pa[0].x, pa[0].y);
    outs[7] = vec4(_1362.x, _1362.y, outs[7].z, outs[7].w);
    vec2 _1372 = vec2(sa[7].x, sa[7].y);
    outs[7] = vec4(outs[7].x, outs[7].y, _1372.x, _1372.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
}

void main()
{
    int i = 0;
    while (i < 9)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[9] = vec4(0.010000000707805156707763671875, 0.00200000009499490261077880859375, 500.0, -7.79199981689453125);
    sa[10] = vec4(-13.1529998779296875, -0.20000000298023223876953125, 6.283100128173828125, 0.159157097339630126953125);
    sa[11] = vec4(5000.0, 0.00999999977648258209228515625, 30.0, 1.00199997425079345703125);
    vec4 _87 = sa[12];
    _87.x = -0.5;
    sa[12] = _87;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:43.220] |E| [compile_program]: Vertex info
-----------
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[2]" might be used before being initialized
0(39) : warning C7050: "r[0].zw" might be used before being initialized

Fragment info
-------------
0(37) : warning C7050: "pa[0].zw" might be used before being initialized
0(37) : warning C7050: "pa[1].zw" might be used before being initialized


[10:36:43.265] |I| [load_shader_generic]: Generating vert shader c9459da2b4e009345e0a33c3a3b47db65c11a07c0648994808273c7025e20a63
[10:36:43.268] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: c9459da2b4e009345e0a33c3a3b47db65c11a07c0648994808273c7025e20a63

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[11];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _174 = sa[5];
    _174.z = sa[9].z * sa[9].w;
    sa[5] = _174;
    vec4 _195 = internals[0];
    _195.x = (sa[9].x * sa[8].y) + sa[13].w;
    internals[0] = _195;
    vec4 _210 = sa[4];
    _210.z = (internals[0].x * sa[9].y) + 0.0;
    sa[4] = _210;
}

void primary_program()
{
    vec2 _220 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _220.x, _220.y);
    vec4 _237 = internals[0];
    _237.x = sa[4].x * pa[0].x;
    internals[0] = _237;
    vec4 _257 = internals[0];
    _257.x = (pa[0].y * sa[5].x) + internals[0].x;
    internals[0] = _257;
    vec4 _278 = internals[0];
    _278.x = (pa[0].z * sa[6].x) + internals[0].x;
    internals[0] = _278;
    vec4 _299 = internals[0];
    _299.x = (pa[0].w * sa[7].x) + internals[0].x;
    internals[0] = _299;
    vec4 _319 = internals[0];
    _319.x = (internals[0].x * sa[4].z) + sa[5].z;
    internals[0] = _319;
    vec4 _334 = internals[0];
    _334.x = (internals[0].x * sa[11].w) + 0.0;
    internals[0] = _334;
    vec4 _354 = internals[0];
    _354.x = (internals[0].x * sa[13].z) + sa[14].x;
    internals[0] = _354;
    vec4 _368 = internals[0];
    _368.x = fract(internals[0].x);
    internals[0] = _368;
    vec4 _388 = internals[1];
    _388.x = (internals[0].x * sa[13].y) + sa[13].x;
    internals[1] = _388;
    vec4 _403 = internals[2];
    _403.x = (internals[1].x * internals[1].x) + 0.0;
    internals[2] = _403;
    vec4 _423 = internals[0];
    _423.x = (internals[2].x * sa[12].w) + sa[12].z;
    internals[0] = _423;
    vec4 _444 = internals[0];
    _444.x = (internals[0].x * internals[2].x) + (0.0 - sa[12].y);
    internals[0] = _444;
    vec4 _464 = internals[0];
    _464.x = (internals[0].x * internals[2].x) + sa[14].x;
    internals[0] = _464;
    vec4 _479 = internals[0];
    _479.x = (internals[1].x * internals[0].x) + 0.0;
    internals[0] = _479;
    vec4 _499 = internals[1];
    _499.x = (internals[2].x * sa[11].z) + sa[11].y;
    internals[1] = _499;
    vec4 _520 = internals[1];
    _520.x = (internals[2].x * internals[1].x) + (0.0 - sa[11].x);
    internals[1] = _520;
    vec4 _540 = internals[2];
    _540.x = (internals[2].x * internals[1].x) + sa[13].w;
    internals[2] = _540;
    vec4 _554 = internals[0];
    vec4 _559 = internals[0];
    vec4 _565 = internals[1];
    _565.x = internals[2].x * internals[0].x;
    internals[1] = _565;
    vec4 _568 = pa[1];
    _568.w = _554.x * _559.x;
    pa[1] = _568;
    vec4 _588 = pa[1];
    _588.z = (internals[0].x * internals[2].x) + internals[1].x;
    pa[1] = _588;
    vec4 _608 = internals[2];
    _608.x = (pa[1].y * pa[1].y) + sa[8].z;
    internals[2] = _608;
    vec4 _628 = internals[0];
    _628.x = (internals[0].x * internals[0].x) + pa[1].w;
    internals[0] = _628;
    vec4 _644 = pa[1];
    _644.w = (1.0 * sa[13].w) + (0.0 - internals[0].x);
    pa[1] = _644;
    vec4 _664 = outs[0];
    _664.x = (pa[1].y * pa[1].y) + sa[10].y;
    outs[0] = _664;
    vec2 _679 = vec2(pa[1].z, pa[1].w) + vec2(sa[12].x, sa[12].x);
    pa[1] = vec4(pa[1].x, pa[1].y, _679.x, _679.y);
    vec4 _696 = internals[1];
    _696.x = pa[1].z * sa[8].w;
    internals[1] = _696;
    vec2 _707 = vec2(pa[0].x, pa[0].y);
    vec2 _714 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_707.x, _707.y, _714.x, _714.y);
    vec4 _740 = internals[2];
    _740.x = (internals[1].x * internals[2].x) + internals[0].x;
    internals[2] = _740;
    vec4 _754 = internals[1];
    _754.x = pa[1].w * sa[10].x;
    internals[1] = _754;
    vec4 _774 = internals[1];
    _774.x = (internals[1].x * outs[0].x) + internals[0].y;
    internals[1] = _774;
    internals[2] = sa[0] * vec4(internals[2].x, internals[2].x, internals[2].x, internals[2].x);
    internals[1] = (vec4(internals[1].x, internals[1].x, internals[1].x, internals[1].x) * sa[1]) + internals[2];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _858 = internals[1];
    _858.x = 1.0 / internals[0].w;
    internals[1] = _858;
    vec2 _874 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_874.x, _874.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _895 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_895.x, _895.y, outs[0].z, outs[0].w);
    vec2 _905 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _905.x, _905.y);
    vec2 _915 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_915.x, _915.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 11)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[11] = vec4(0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 0.300000011920928955078125);
    sa[12] = vec4(-1.0, 0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06);
    sa[13] = vec4(-3.1415927410125732421875, 6.283185482025146484375, 0.15915493667125701904296875, 1.0);
    vec4 _87 = sa[14];
    _87.x = 0.5;
    sa[14] = _87;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:43.283] |E| [compile_program]: Vertex info
-----------
0(32) : warning C7050: "internals[0]" might be used before being initialized
0(32) : warning C7050: "internals[1]" might be used before being initialized
0(32) : warning C7050: "internals[2]" might be used before being initialized


[10:36:43.290] |I| [load_shader_generic]: Generating vert shader 5604135f2e1d06f6c6bad807602fa79e3717feaacc4ad60cf7e1120dc6451e48
[10:36:43.293] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 5604135f2e1d06f6c6bad807602fa79e3717feaacc4ad60cf7e1120dc6451e48

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[10];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _173 = sa[6];
    _173.z = sa[9].z * sa[9].w;
    sa[6] = _173;
    vec4 _194 = internals[0];
    _194.x = (sa[9].x * sa[8].y) + sa[13].x;
    internals[0] = _194;
    vec4 _210 = sa[5];
    _210.z = (internals[0].x * sa[9].y) + 0.0;
    sa[5] = _210;
    vec4 _224 = internals[0];
    _224.x = sa[13].x + sa[8].z;
    internals[0] = _224;
    vec4 _239 = sa[4];
    _239.z = (internals[0].x * sa[8].w) + 0.0;
    sa[4] = _239;
}

void primary_program()
{
    vec2 _249 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_249.x, _249.y, outs[1].z, outs[1].w);
    vec2 _259 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _259.x, _259.y);
    vec4 _276 = internals[0];
    _276.x = sa[4].x * pa[0].x;
    internals[0] = _276;
    vec4 _296 = internals[0];
    _296.x = (pa[0].y * sa[5].x) + internals[0].x;
    internals[0] = _296;
    vec4 _316 = internals[0];
    _316.x = (pa[0].z * sa[6].x) + internals[0].x;
    internals[0] = _316;
    vec4 _337 = internals[0];
    _337.x = (pa[0].w * sa[7].x) + internals[0].x;
    internals[0] = _337;
    vec4 _357 = internals[0];
    _357.x = (internals[0].x * sa[5].z) + sa[6].z;
    internals[0] = _357;
    vec4 _372 = internals[0];
    _372.x = (internals[0].x * sa[12].z) + 0.0;
    internals[0] = _372;
    vec4 _392 = internals[0];
    _392.x = (internals[0].x * sa[12].y) + sa[12].w;
    internals[0] = _392;
    vec4 _406 = internals[0];
    _406.x = fract(internals[0].x);
    internals[0] = _406;
    vec4 _426 = internals[1];
    _426.x = (internals[0].x * sa[12].x) + sa[11].w;
    internals[1] = _426;
    vec4 _441 = pa[1];
    _441.x = (internals[1].x * internals[1].x) + 0.0;
    pa[1] = _441;
    vec4 _461 = internals[0];
    _461.x = (pa[1].x * sa[11].z) + sa[11].y;
    internals[0] = _461;
    vec4 _482 = internals[0];
    _482.x = (internals[0].x * pa[1].x) + (0.0 - sa[11].x);
    internals[0] = _482;
    vec4 _502 = internals[0];
    _502.x = (internals[0].x * pa[1].x) + sa[12].w;
    internals[0] = _502;
    vec4 _517 = internals[2];
    _517.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _517;
    vec4 _537 = internals[0];
    _537.x = (pa[1].x * sa[10].w) + sa[10].z;
    internals[0] = _537;
    vec4 _558 = internals[0];
    _558.x = (pa[1].x * internals[0].x) + (0.0 - sa[10].y);
    internals[0] = _558;
    vec4 _578 = internals[0];
    _578.x = (pa[1].x * internals[0].x) + sa[13].x;
    internals[0] = _578;
    vec2 _593 = vec2(internals[0].x, internals[0].x) * vec2(internals[2].x, internals[2].x);
    vec4 _596 = pa[0];
    pa[0] = vec4(_593.x, _593.y, pa[0].z, pa[0].w);
    internals[1] = _596;
    vec4 _621 = internals[0];
    _621.x = (internals[0].x * internals[2].x) + pa[0].x;
    internals[0] = _621;
    vec4 _636 = internals[0];
    _636.x = (1.0 * sa[10].x) + internals[0].x;
    internals[0] = _636;
    vec4 _651 = internals[0];
    _651.x = (internals[0].x * sa[4].z) + 0.0;
    internals[0] = _651;
    vec4 _671 = internals[0];
    _671.x = (internals[1].x * internals[0].x) + internals[1].x;
    internals[0] = _671;
    internals[0] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[0] = (vec4(internals[1].y, internals[1].y, internals[1].y, internals[1].y) * sa[1]) + internals[0];
    internals[0] = (vec4(internals[1].z, internals[1].z, internals[1].z, internals[1].z) * sa[2]) + internals[0];
    internals[0] = (vec4(internals[1].w, internals[1].w, internals[1].w, internals[1].w) * sa[3]) + internals[0];
    vec4 _755 = internals[1];
    _755.x = 1.0 / internals[0].w;
    internals[1] = _755;
    vec2 _771 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_771.x, _771.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _792 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_792.x, _792.y, outs[0].z, outs[0].w);
    vec2 _802 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _802.x, _802.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 10)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[10] = vec4(-1.0, 0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05);
    sa[11] = vec4(0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875);
    sa[12] = vec4(6.283185482025146484375, 0.15915493667125701904296875, 0.300000011920928955078125, 0.5);
    vec4 _87 = sa[13];
    _87.x = 1.0;
    sa[13] = _87;
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:43.305] |E| [compile_program]: Vertex info
-----------
0(32) : warning C7050: "internals[0]" might be used before being initialized
0(32) : warning C7050: "internals[1]" might be used before being initialized
0(32) : warning C7050: "internals[2]" might be used before being initialized


[10:36:47.476] |E| [open_file]: Missing file at /home/fneufneu/.local/share/Vita3K/Vita3K/ux0/user/00/savedata/PCSB00189/SlotParam_0.bin (target path: savedata0:/SlotParam_0.bin)
[10:36:47.476] |W| [io_error_impl]: open_file (sceAppUtilSaveDataSlotGetParam) returned 0x80010002
[10:36:49.007] |I| [load_shader_generic]: Generating frag shader 6ab6dd0ad1fba475eba439e62097f7ca887beae9d66acfab60ceef5cd550439e
[10:36:49.008] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 6ab6dd0ad1fba475eba439e62097f7ca887beae9d66acfab60ceef5cd550439e

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _189)
{
    return uintBitsToFloat(packHalf2x16(_189));
}

vec2 unpack2xF16(float _110)
{
    return unpackHalf2x16(floatBitsToUint(_110));
}

void primary_program()
{
    vec2 _210 = unpack2xF16(pa[0].x);
    vec2 _222 = vec2(sa[0].x, sa[0].y);
    vec2 _224 = unpack2xF16(_222.x);
    vec2 _226 = unpack2xF16(_222.y);
    vec2 _238 = vec2(sa[0].z, sa[0].w);
    vec2 _240 = unpack2xF16(_238.x);
    vec2 _242 = unpack2xF16(_238.y);
    vec4 _249 = (vec4(_210.x, _210.x, _210.x, _210.x) * vec4(_224.x, _224.y, _226.x, _226.y)) + vec4(_240.x, _240.y, _242.x, _242.y);
    vec2 _258 = vec2(pack2xF16(vec2(_249.x, _249.y)), pack2xF16(vec2(_249.z, _249.w)));
    pa[0] = vec4(_258.x, _258.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _140)
{
    uint _143 = floatBitsToUint(_140);
    return uvec2(bitfieldExtract(_143, 0, 16), bitfieldExtract(_143, 16, 16));
}

void frag_output_finalize()
{
    vec2 _106 = vec2(pa[0].x, pa[0].y);
    vec2 _117 = unpack2xF16(_106.x);
    vec2 _119 = unpack2xF16(_106.y);
    out_color = vec4(_117.x, _117.y, _119.x, _119.y);
    vec2 _136 = vec2(pa[0].x, pa[0].y);
    uvec2 _149 = unpack2xU16(_136.x);
    uvec2 _151 = unpack2xU16(_136.y);
    out_color_ui = uvec4(_149.x, _149.y, _151.x, _151.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    vec4 _186 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _199 = vec2(pack2xF16(_186.xy), pack2xF16(_186.zw));
    pa[0] = vec4(_199.x, _199.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:36:49.020] |E| [compile_program]: Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:49.021] |I| [load_shader_generic]: Generating frag shader ccf6d85a4ed35ba993b7b2d5ac74fd66c191b9c6dc87bbdf8272d0a89efafbe3
[10:36:49.022] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: ccf6d85a4ed35ba993b7b2d5ac74fd66c191b9c6dc87bbdf8272d0a89efafbe3

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _105)
{
    return unpackHalf2x16(floatBitsToUint(_105));
}

float pack2xF16(vec2 _218)
{
    return uintBitsToFloat(packHalf2x16(_218));
}

void secondary_program()
{
    vec2 _187 = vec2(sa[0].x, sa[0].y);
    vec2 _189 = unpack2xF16(_187.x);
    vec2 _191 = unpack2xF16(_187.y);
    vec2 _203 = vec2(sa[0].z, sa[0].w);
    vec2 _205 = unpack2xF16(_203.x);
    vec2 _207 = unpack2xF16(_203.y);
    vec4 _213 = vec4(_189.x, _189.y, _191.x, _191.y) + vec4(_205.x, _205.y, _207.x, _207.y);
    vec2 _230 = vec2(pack2xF16(vec2(_213.x, _213.y)), pack2xF16(vec2(_213.z, _213.w)));
    sa[0] = vec4(_230.x, _230.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _243 = vec2(sa[0].x, sa[0].y);
    vec2 _245 = unpack2xF16(_243.x);
    vec2 _247 = unpack2xF16(_243.y);
    vec4 _252 = vec4(_245.x, _245.y, _247.x, _247.y);
    vec2 _261 = vec2(pack2xF16(vec2(_252.x, _252.y)), pack2xF16(vec2(_252.z, _252.w)));
    pa[0] = vec4(_261.x, _261.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _135)
{
    uint _138 = floatBitsToUint(_135);
    return uvec2(bitfieldExtract(_138, 0, 16), bitfieldExtract(_138, 16, 16));
}

void frag_output_finalize()
{
    vec2 _101 = vec2(pa[0].x, pa[0].y);
    vec2 _112 = unpack2xF16(_101.x);
    vec2 _114 = unpack2xF16(_101.y);
    out_color = vec4(_112.x, _112.y, _114.x, _114.y);
    vec2 _131 = vec2(pa[0].x, pa[0].y);
    uvec2 _144 = unpack2xU16(_131.x);
    uvec2 _146 = unpack2xU16(_131.y);
    out_color_ui = uvec4(_144.x, _144.y, _146.x, _146.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:49.037] |E| [compile_program]: Fragment info
-------------
0(32) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:49.071] |I| [load_shader_generic]: Generating frag shader c1d6e923ceec636862a4083a6d62651fa7641cb3379c7a3f7fffdc9f157d1cb6
[10:36:49.074] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: c1d6e923ceec636862a4083a6d62651fa7641cb3379c7a3f7fffdc9f157d1cb6

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _111)
{
    return unpackHalf2x16(floatBitsToUint(_111));
}

float pack2xF16(vec2 _224)
{
    return uintBitsToFloat(packHalf2x16(_224));
}

void secondary_program()
{
    vec2 _193 = vec2(sa[0].x, sa[0].y);
    vec2 _195 = unpack2xF16(_193.x);
    vec2 _197 = unpack2xF16(_193.y);
    vec2 _209 = vec2(sa[0].z, sa[0].w);
    vec2 _211 = unpack2xF16(_209.x);
    vec2 _213 = unpack2xF16(_209.y);
    vec4 _219 = vec4(_195.x, _195.y, _197.x, _197.y) + vec4(_211.x, _211.y, _213.x, _213.y);
    vec2 _236 = vec2(pack2xF16(vec2(_219.x, _219.y)), pack2xF16(vec2(_219.z, _219.w)));
    sa[0] = vec4(_236.x, _236.y, sa[0].z, sa[0].w);
    vec2 _246 = vec2(sa[0].x, sa[0].y);
    vec2 _248 = unpack2xF16(_246.x);
    vec2 _261 = vec2(sa[2].x, sa[2].y);
    vec2 _263 = unpack2xF16(_261.x);
    vec2 _281 = unpack2xF16(sa[1].w);
    vec2 _286 = vec2(pack2xF16(vec2(dot(vec4(_248.x, _248.y, unpack2xF16(_246.y).x, 0.0), vec4(_263.x, _263.y, unpack2xF16(_261.y).x, 1.0)), unpack2xF16(sa[1].z).y)), pack2xF16(vec2(_281.x, _281.y)));
    sa[1] = vec4(sa[1].x, sa[1].y, _286.x, _286.y);
    vec2 _295 = unpack2xF16(sa[1].z);
    vec2 _307 = vec2(sa[1].x, sa[1].y);
    vec2 _309 = unpack2xF16(_307.x);
    vec2 _311 = unpack2xF16(_307.y);
    vec2 _323 = vec2(sa[0].x, sa[0].y);
    vec2 _325 = unpack2xF16(_323.x);
    vec2 _327 = unpack2xF16(_323.y);
    vec4 _335 = (vec4(_295.x, _295.x, _295.x, _295.x) * vec4(_309.x, _309.y, _311.x, _311.y)) + (vec4(0.0) - vec4(_325.x, _325.y, _327.x, _327.y));
    vec2 _344 = vec2(pack2xF16(vec2(_335.x, _335.y)), pack2xF16(vec2(_335.z, _335.w)));
    sa[0] = vec4(sa[0].x, sa[0].y, _344.x, _344.y);
    vec2 _353 = unpack2xF16(sa[1].y);
    vec2 _365 = vec2(sa[0].z, sa[0].w);
    vec2 _367 = unpack2xF16(_365.x);
    vec2 _369 = unpack2xF16(_365.y);
    vec2 _381 = vec2(sa[0].x, sa[0].y);
    vec2 _383 = unpack2xF16(_381.x);
    vec2 _385 = unpack2xF16(_381.y);
    vec4 _392 = (vec4(_353.y, _353.y, _353.y, _353.y) * vec4(_367.x, _367.y, _369.x, _369.y)) + vec4(_383.x, _383.y, _385.x, _385.y);
    vec2 _401 = vec2(pack2xF16(vec2(_392.x, _392.y)), pack2xF16(vec2(_392.z, _392.w)));
    sa[0] = vec4(sa[0].x, sa[0].y, _401.x, _401.y);
    vec2 _410 = unpack2xF16(sa[1].z);
    vec2 _422 = vec2(sa[0].z, sa[0].w);
    vec2 _424 = unpack2xF16(_422.x);
    vec3 _431 = (vec3(0.0) - vec3(_410.x, _410.x, _410.x)) + vec3(_424.x, _424.y, unpack2xF16(_422.y).x);
    vec2 _444 = vec2(pack2xF16(vec2(_431.x, _431.y)), pack2xF16(vec2(_431.z, unpack2xF16(sa[0].y).y)));
    sa[0] = vec4(_444.x, _444.y, sa[0].z, sa[0].w);
    vec2 _453 = unpack2xF16(sa[1].z);
    vec2 _465 = vec2(sa[0].x, sa[0].y);
    vec2 _467 = unpack2xF16(_465.x);
    vec2 _469 = unpack2xF16(_465.y);
    vec2 _480 = unpack2xF16(sa[1].z);
    vec4 _487 = (vec4(_453.y, _453.y, _453.y, _453.y) * vec4(_467.x, _467.y, _469.x, _469.y)) + vec4(_480.x, _480.x, _480.x, _480.x);
    vec2 _496 = vec2(pack2xF16(vec2(_487.x, _487.y)), pack2xF16(vec2(_487.z, _487.w)));
    sa[0] = vec4(sa[0].x, sa[0].y, _496.x, _496.y);
    vec2 _506 = vec2(sa[0].z, sa[0].w);
    vec2 _508 = unpack2xF16(_506.x);
    vec2 _520 = unpack2xF16(sa[2].w);
    vec3 _525 = vec3(_508.x, _508.y, unpack2xF16(_506.y).x) + vec3(_520.x, _520.x, _520.x);
    vec2 _538 = vec2(pack2xF16(vec2(_525.x, _525.y)), pack2xF16(vec2(_525.z, unpack2xF16(sa[0].y).y)));
    sa[0] = vec4(_538.x, _538.y, sa[0].z, sa[0].w);
    vec2 _547 = unpack2xF16(sa[1].w);
    vec2 _559 = vec2(sa[0].x, sa[0].y);
    vec2 _561 = unpack2xF16(_559.x);
    vec2 _563 = unpack2xF16(_559.y);
    vec2 _574 = unpack2xF16(sa[2].z);
    vec4 _581 = (vec4(_547.y, _547.y, _547.y, _547.y) * vec4(_561.x, _561.y, _563.x, _563.y)) + vec4(_574.x, _574.x, _574.x, _574.x);
    vec2 _590 = vec2(pack2xF16(vec2(_581.x, _581.y)), pack2xF16(vec2(_581.z, _581.w)));
    sa[0] = vec4(sa[0].x, sa[0].y, _590.x, _590.y);
    vec2 _600 = vec2(sa[0].z, sa[0].w);
    vec2 _602 = unpack2xF16(_600.x);
    vec2 _614 = unpack2xF16(sa[1].w);
    vec3 _619 = vec3(_602.x, _602.y, unpack2xF16(_600.y).x) + vec3(_614.x, _614.x, _614.x);
    vec2 _632 = vec2(pack2xF16(vec2(_619.x, _619.y)), pack2xF16(vec2(_619.z, unpack2xF16(sa[0].y).y)));
    sa[0] = vec4(_632.x, _632.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _645 = vec2(sa[0].x, sa[0].y);
    vec2 _647 = unpack2xF16(_645.x);
    vec2 _649 = unpack2xF16(_645.y);
    vec4 _654 = vec4(_647.x, _647.y, _649.x, _649.y);
    vec2 _663 = vec2(pack2xF16(vec2(_654.x, _654.y)), pack2xF16(vec2(_654.z, _654.w)));
    pa[0] = vec4(_663.x, _663.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _141)
{
    uint _144 = floatBitsToUint(_141);
    return uvec2(bitfieldExtract(_144, 0, 16), bitfieldExtract(_144, 16, 16));
}

void frag_output_finalize()
{
    vec2 _107 = vec2(pa[0].x, pa[0].y);
    vec2 _118 = unpack2xF16(_107.x);
    vec2 _120 = unpack2xF16(_107.y);
    out_color = vec4(_118.x, _118.y, _120.x, _120.y);
    vec2 _137 = vec2(pa[0].x, pa[0].y);
    uvec2 _150 = unpack2xU16(_137.x);
    uvec2 _152 = unpack2xU16(_137.y);
    out_color_ui = uvec4(_150.x, _150.y, _152.x, _152.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05);
    frag_init();
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:49.097] |E| [compile_program]: Fragment info
-------------
0(32) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:49.097] |I| [load_shader_generic]: Generating frag shader cb8e848f8130eab38710e1e73afaa1167b28a69d913108cbecf54c0feef88247
[10:36:49.101] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: cb8e848f8130eab38710e1e73afaa1167b28a69d913108cbecf54c0feef88247

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

vec2 unpack2xF16(float _127)
{
    return unpackHalf2x16(floatBitsToUint(_127));
}

float pack2xF16(vec2 _203)
{
    return uintBitsToFloat(packHalf2x16(_203));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _237 = unpack2xF16(sa[1].w);
    vec2 _247 = unpack2xF16(sa[4].y);
    vec3 _252 = vec3(_237.x, _237.x, _237.x) + vec3(_247.x, _247.x, _247.x);
    vec2 _265 = vec2(pack2xF16(vec2(_252.x, _252.y)), pack2xF16(vec2(_252.z, unpack2xF16(sa[5].y).y)));
    sa[5] = vec4(_265.x, _265.y, sa[5].z, sa[5].w);
}

float pack4xU8(uvec4 _451)
{
    return uintBitsToFloat(bitfieldInsert(bitfieldInsert(bitfieldInsert(bitfieldInsert(0u, _451.x, 0, 8), _451.y, 8, 8), _451.z, 16, 8), _451.w, 24, 8));
}

uvec4 unpack4xU8(float _514)
{
    uint _517 = floatBitsToUint(_514);
    return uvec4(bitfieldExtract(_517, 0, 8), bitfieldExtract(_517, 8, 8), bitfieldExtract(_517, 16, 8), bitfieldExtract(_517, 24, 8));
}

void primary_program()
{
    p[0] = unpack2xF16(sa[2].x).x > unpack2xF16(sa[4].x).x;
    if (!p[0])
    {
        vec2 _319 = unpack2xF16(pa[0].y);
        vec2 _324 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[4].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_319.x, _319.y)));
        pa[0] = vec4(_324.x, _324.y, pa[0].z, pa[0].w);
        vec2 _346 = unpack2xF16(pa[0].y);
        vec2 _351 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_346.x, _346.y)));
        pa[0] = vec4(_351.x, _351.y, pa[0].z, pa[0].w);
    }
    else
    {
        vec2 _385 = unpack2xF16(r[0].y);
        vec2 _390 = vec2(pack2xF16(vec2(fract(abs(unpack2xF16(pa[0].x).x)), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_385.x, _385.y)));
        r[0] = vec4(_390.x, _390.y, r[0].z, r[0].w);
        vec2 _414 = unpack2xF16(pa[0].y);
        vec2 _419 = vec2(pack2xF16(vec2(abs(unpack2xF16(pa[0].x).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_414.x, _414.y)));
        pa[0] = vec4(_419.x, _419.y, pa[0].z, pa[0].w);
        vec2 _430 = vec2(pa[0].x, pa[0].y);
        vec2 _432 = unpack2xF16(_430.x);
        vec2 _434 = unpack2xF16(_430.y);
        uvec4 _444 = uvec4(vec4(lessThan(vec4(_432.x, _432.y, _434.x, _434.y), vec4(0.0)))) * uvec4(255);
        vec4 _470 = pa[0];
        _470.z = pack4xU8(uvec4(_444.x, _444.y, _444.z, _444.w));
        pa[0] = _470;
        vec2 _490 = unpack2xF16(pa[0].y);
        vec2 _495 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[0].x).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_490.x, _490.y)));
        pa[0] = vec4(_495.x, _495.y, pa[0].z, pa[0].w);
        vec2 _504 = unpack2xF16(pa[0].x);
        vec2 _507 = vec2(_504.x, _504.x);
        uvec4 _524 = unpack4xU8(pa[0].z);
        vec2 _534 = vec2(r[0].x, r[0].x);
        bvec2 _537 = notEqual(uvec2(_524.x, _524.y), uvec2(0u));
        vec2 _538 = vec2(_537.x ? _507.x : _534.x, _537.y ? _507.y : _534.y);
        vec2 _546 = unpack2xF16(pa[0].y);
        vec2 _551 = vec2(pack2xF16(vec2(_538.x, _538.y)), pack2xF16(vec2(_546.x, _546.y)));
        pa[0] = vec4(_551.x, _551.y, pa[0].z, pa[0].w);
    }
    vec2 _564 = vec2(unpack2xF16(pa[0].x).x, 0.5) * vec2(1.0);
    vec2 _572 = unpack2xF16(pa[0].y);
    vec2 _577 = vec2(pack2xF16(vec2(_564.x, _564.y)), pack2xF16(vec2(_572.x, _572.y)));
    pa[0] = vec4(_577.x, _577.y, pa[0].z, pa[0].w);
    vec2 _586 = unpack2xF16(pa[0].x);
    vec4 _591 = texture(fragTex_sampler0, vec2(_586.x, _586.y));
    vec2 _600 = vec2(pack2xF16(vec2(_591.x, _591.y)), pack2xF16(vec2(_591.z, _591.w)));
    pa[0] = vec4(_600.x, _600.y, pa[0].z, pa[0].w);
    vec2 _610 = vec2(pa[0].x, pa[0].y);
    vec2 _612 = unpack2xF16(_610.x);
    vec2 _614 = unpack2xF16(_610.y);
    vec2 _626 = vec2(sa[0].z, sa[0].w);
    vec2 _628 = unpack2xF16(_626.x);
    vec2 _630 = unpack2xF16(_626.y);
    vec2 _642 = vec2(sa[0].x, sa[0].y);
    vec2 _644 = unpack2xF16(_642.x);
    vec2 _646 = unpack2xF16(_642.y);
    vec4 _653 = (vec4(_612.x, _612.y, _614.x, _614.y) * vec4(_628.x, _628.y, _630.x, _630.y)) + vec4(_644.x, _644.y, _646.x, _646.y);
    vec2 _662 = vec2(pack2xF16(vec2(_653.x, _653.y)), pack2xF16(vec2(_653.z, _653.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _662.x, _662.y);
    vec2 _672 = vec2(pa[0].z, pa[0].w);
    vec2 _674 = unpack2xF16(_672.x);
    vec2 _687 = vec2(sa[3].z, sa[3].w);
    vec2 _689 = unpack2xF16(_687.x);
    vec2 _707 = unpack2xF16(r[0].y);
    vec2 _712 = vec2(pack2xF16(vec2(dot(vec4(_674.x, _674.y, unpack2xF16(_672.y).x, 0.0), vec4(_689.x, _689.y, unpack2xF16(_687.y).x, 1.0)), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_707.x, _707.y)));
    r[0] = vec4(_712.x, _712.y, r[0].z, r[0].w);
    vec2 _721 = unpack2xF16(r[0].x);
    vec2 _733 = vec2(sa[1].x, sa[1].y);
    vec2 _735 = unpack2xF16(_733.x);
    vec2 _737 = unpack2xF16(_733.y);
    vec2 _749 = vec2(pa[0].z, pa[0].w);
    vec2 _751 = unpack2xF16(_749.x);
    vec2 _753 = unpack2xF16(_749.y);
    vec4 _761 = (vec4(_721.x, _721.x, _721.x, _721.x) * vec4(_735.x, _735.y, _737.x, _737.y)) + (vec4(0.0) - vec4(_751.x, _751.y, _753.x, _753.y));
    vec2 _770 = vec2(pack2xF16(vec2(_761.x, _761.y)), pack2xF16(vec2(_761.z, _761.w)));
    pa[0] = vec4(_770.x, _770.y, pa[0].z, pa[0].w);
    vec2 _780 = vec2(pa[0].x, pa[0].y);
    vec2 _782 = unpack2xF16(_780.x);
    vec2 _784 = unpack2xF16(_780.y);
    vec2 _795 = unpack2xF16(sa[1].y);
    vec2 _807 = vec2(pa[0].z, pa[0].w);
    vec2 _809 = unpack2xF16(_807.x);
    vec2 _811 = unpack2xF16(_807.y);
    vec4 _818 = (vec4(_782.x, _782.y, _784.x, _784.y) * vec4(_795.y, _795.y, _795.y, _795.y)) + vec4(_809.x, _809.y, _811.x, _811.y);
    vec2 _827 = vec2(pack2xF16(vec2(_818.x, _818.y)), pack2xF16(vec2(_818.z, _818.w)));
    pa[0] = vec4(_827.x, _827.y, pa[0].z, pa[0].w);
    vec2 _836 = unpack2xF16(r[0].x);
    vec2 _848 = vec2(pa[0].x, pa[0].y);
    vec2 _850 = unpack2xF16(_848.x);
    vec3 _857 = (vec3(0.0) - vec3(_836.x, _836.x, _836.x)) + vec3(_850.x, _850.y, unpack2xF16(_848.y).x);
    vec2 _870 = vec2(pack2xF16(vec2(_857.x, _857.y)), pack2xF16(vec2(_857.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_870.x, _870.y, pa[0].z, pa[0].w);
    vec2 _880 = vec2(pa[0].x, pa[0].y);
    vec2 _882 = unpack2xF16(_880.x);
    vec2 _884 = unpack2xF16(_880.y);
    vec2 _895 = unpack2xF16(sa[1].z);
    vec2 _906 = unpack2xF16(r[0].x);
    vec4 _913 = (vec4(_882.x, _882.y, _884.x, _884.y) * vec4(_895.y, _895.y, _895.y, _895.y)) + vec4(_906.x, _906.x, _906.x, _906.x);
    vec2 _922 = vec2(pack2xF16(vec2(_913.x, _913.y)), pack2xF16(vec2(_913.z, _913.w)));
    pa[0] = vec4(_922.x, _922.y, pa[0].z, pa[0].w);
    vec2 _932 = vec2(pa[0].x, pa[0].y);
    vec2 _934 = unpack2xF16(_932.x);
    vec2 _946 = unpack2xF16(sa[4].z);
    vec3 _951 = vec3(_934.x, _934.y, unpack2xF16(_932.y).x) + vec3(_946.x, _946.x, _946.x);
    vec2 _964 = vec2(pack2xF16(vec2(_951.x, _951.y)), pack2xF16(vec2(_951.z, unpack2xF16(pa[0].y).y)));
    pa[0] = vec4(_964.x, _964.y, pa[0].z, pa[0].w);
    vec2 _974 = vec2(pa[0].x, pa[0].y);
    vec2 _976 = unpack2xF16(_974.x);
    vec2 _978 = unpack2xF16(_974.y);
    vec2 _989 = unpack2xF16(sa[1].w);
    vec2 _1001 = vec2(sa[5].x, sa[5].y);
    vec2 _1003 = unpack2xF16(_1001.x);
    vec2 _1005 = unpack2xF16(_1001.y);
    vec4 _1012 = (vec4(_976.x, _976.y, _978.x, _978.y) * vec4(_989.y, _989.y, _989.y, _989.y)) + vec4(_1003.x, _1003.y, _1005.x, _1005.y);
    vec2 _1021 = vec2(pack2xF16(vec2(_1012.x, _1012.y)), pack2xF16(vec2(_1012.z, _1012.w)));
    pa[0] = vec4(_1021.x, _1021.y, pa[0].z, pa[0].w);
    vec2 _1039 = vec2(pa[0].x, pa[0].y);
    vec2 _1041 = unpack2xF16(_1039.x);
    vec4 _1048 = vec4(1.0, 1.0, 1.0, unpack2xF16(pa[0].w).y) * vec4(_1041.x, _1041.y, unpack2xF16(_1039.y).x, 1.0);
    vec2 _1057 = vec2(pack2xF16(vec2(_1048.x, _1048.y)), pack2xF16(vec2(_1048.z, _1048.w)));
    pa[0] = vec4(_1057.x, _1057.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _157)
{
    uint _160 = floatBitsToUint(_157);
    return uvec2(bitfieldExtract(_160, 0, 16), bitfieldExtract(_160, 16, 16));
}

void frag_output_finalize()
{
    vec2 _123 = vec2(pa[0].x, pa[0].y);
    vec2 _134 = unpack2xF16(_123.x);
    vec2 _136 = unpack2xF16(_123.y);
    out_color = vec4(_134.x, _134.y, _136.x, _136.y);
    vec2 _153 = vec2(pa[0].x, pa[0].y);
    uvec2 _166 = unpack2xU16(_153.x);
    uvec2 _168 = unpack2xU16(_153.y);
    out_color_ui = uvec4(_166.x, _166.y, _168.x, _168.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[3] = vec4(sa[3].x, sa[3].y, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 2.0089014784560577528762587306044e-41, 3.0569732189178466796875e-05).x, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 2.0089014784560577528762587306044e-41, 3.0569732189178466796875e-05).y);
    sa[4] = vec4(vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 2.0089014784560577528762587306044e-41, 3.0569732189178466796875e-05).z, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 2.0089014784560577528762587306044e-41, 3.0569732189178466796875e-05).w, sa[4].z, sa[4].w);
    sa[4] = vec4(sa[4].x, sa[4].y, vec2(-3.0688941478729248046875e-05, 2.1523944412029190209388486399333e-41).x, vec2(-3.0688941478729248046875e-05, 2.1523944412029190209388486399333e-41).y);
    vec2 _214 = unpack2xF16(pa[0].y);
    vec2 _219 = vec2(pack2xF16(vec2(v_TexCoord0.x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_214.x, _214.y)));
    pa[0] = vec4(_219.x, _219.y, pa[0].z, pa[0].w);
    frag_init();
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:36:49.103] |I| [load_shader_generic]: Generating vert shader 21cf7bf07edc97828829c9ea33bba5b43db576ae91eb32e5bd9d8abbf0868d22
[10:36:49.105] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 21cf7bf07edc97828829c9ea33bba5b43db576ae91eb32e5bd9d8abbf0868d22

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[9];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _142 = sa[4];
    _142.z = 1.0 / sa[7].x;
    sa[4] = _142;
    vec4 _151 = sa[4];
    _151.w = 1.0 / sa[7].y;
    sa[4] = _151;
}

void primary_program()
{
    vec2 _165 = vec2(pa[0].x, pa[0].y);
    vec2 _172 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_165.x, _165.y, _172.x, _172.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[1] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _262 = internals[2];
    _262.x = 1.0 / internals[1].w;
    internals[2] = _262;
    vec2 _288 = (vec2(internals[0].y, internals[0].y) * (vec2(0.0) - vec2(sa[5].x, sa[5].y))) + vec2(sa[6].x, sa[6].y);
    pa[0] = vec4(_288.x, _288.y, pa[0].z, pa[0].w);
    vec2 _314 = (vec2(internals[0].x, internals[0].x) * vec2(sa[4].x, sa[4].y)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_314.x, _314.y, pa[0].z, pa[0].w);
    vec2 _341 = (vec2(pa[0].x, pa[0].y) * vec2(sa[4].z, sa[4].w)) + vec2(sa[7].z, sa[7].w);
    pa[0] = vec4(_341.x, _341.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _369 = vec2(internals[1].x, internals[1].y) * vec2(internals[2].x, internals[2].x);
    vec4 _372 = internals[0];
    vec2 _376 = vec2(_372.x, _372.y);
    internals[2] = vec4(_369.x, _369.y, internals[2].z, internals[2].w);
    outs[1] = vec4(_376.x, _376.y, outs[1].z, outs[1].w);
    vec2 _389 = vec2(internals[0].z, internals[0].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _389.x, _389.y);
    vec4 _407 = internals[2];
    _407.z = (1.0 * sa[8].x) + internals[1].z;
    internals[2] = _407;
    internals[0] = vec4(internals[2].x, internals[2].y, internals[2].z, 1.0) * vec4(1.0);
    vec2 _424 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_424.x, _424.y, outs[0].z, outs[0].w);
    vec2 _434 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _434.x, _434.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 9)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:36:49.145] |E| [compile_program]: Vertex info
-----------
0(31) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0]" might be used before being initialized
0(37) : warning C7050: "r[0]" might be used before being initialized


[10:36:49.147] |I| [load_shader_generic]: Generating frag shader d531eac14063a91423e3ce084cc942a21f9f2c27f805876022a4f89c08163858
[10:36:49.149] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: d531eac14063a91423e3ce084cc942a21f9f2c27f805876022a4f89c08163858

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _189)
{
    return uintBitsToFloat(packHalf2x16(_189));
}

vec2 unpack2xF16(float _110)
{
    return unpackHalf2x16(floatBitsToUint(_110));
}

void primary_program()
{
    vec2 _211 = vec2(pa[0].x, pa[0].y);
    vec2 _213 = unpack2xF16(_211.x);
    vec2 _215 = unpack2xF16(_211.y);
    vec2 _227 = vec2(sa[0].x, sa[0].y);
    vec2 _229 = unpack2xF16(_227.x);
    vec2 _231 = unpack2xF16(_227.y);
    vec2 _243 = vec2(sa[0].z, sa[0].w);
    vec2 _245 = unpack2xF16(_243.x);
    vec2 _247 = unpack2xF16(_243.y);
    vec4 _254 = (vec4(_213.x, _213.y, _215.x, _215.y) * vec4(_229.x, _229.y, _231.x, _231.y)) + vec4(_245.x, _245.y, _247.x, _247.y);
    vec2 _263 = vec2(pack2xF16(vec2(_254.x, _254.y)), pack2xF16(vec2(_254.z, _254.w)));
    pa[0] = vec4(_263.x, _263.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _140)
{
    uint _143 = floatBitsToUint(_140);
    return uvec2(bitfieldExtract(_143, 0, 16), bitfieldExtract(_143, 16, 16));
}

void frag_output_finalize()
{
    vec2 _106 = vec2(pa[0].x, pa[0].y);
    vec2 _117 = unpack2xF16(_106.x);
    vec2 _119 = unpack2xF16(_106.y);
    out_color = vec4(_117.x, _117.y, _119.x, _119.y);
    vec2 _136 = vec2(pa[0].x, pa[0].y);
    uvec2 _149 = unpack2xU16(_136.x);
    uvec2 _151 = unpack2xU16(_136.y);
    out_color_ui = uvec4(_149.x, _149.y, _151.x, _151.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    vec4 _186 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _199 = vec2(pack2xF16(_186.xy), pack2xF16(_186.zw));
    pa[0] = vec4(_199.x, _199.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:36:49.162] |E| [compile_program]: Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized


[10:36:50.373] |I| [process]: The currently running game requests playback rate scaling when decoding audio. Audio might crackle.
[10:38:19.971] |I| [load_shader_generic]: Generating frag shader b6d8e03cb4fef0996c353467116345f4535efdbf43e97fca1afdbc59f81904ec
[10:38:19.975] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: b6d8e03cb4fef0996c353467116345f4535efdbf43e97fca1afdbc59f81904ec

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _200)
{
    return uintBitsToFloat(packHalf2x16(_200));
}

vec2 unpack2xF16(float _121)
{
    return unpackHalf2x16(floatBitsToUint(_121));
}

void secondary_program()
{
    vec2 _221 = unpack2xF16(sa[1].w);
    vec2 _231 = unpack2xF16(sa[3].x);
    vec3 _236 = vec3(_221.x, _221.x, _221.x) + vec3(_231.x, _231.x, _231.x);
    vec2 _249 = vec2(pack2xF16(vec2(_236.x, _236.y)), pack2xF16(vec2(_236.z, unpack2xF16(sa[3].w).y)));
    sa[3] = vec4(sa[3].x, sa[3].y, _249.x, _249.y);
}

void primary_program()
{
    vec2 _262 = vec2(pa[0].x, pa[0].y);
    vec2 _264 = unpack2xF16(_262.x);
    vec2 _266 = unpack2xF16(_262.y);
    vec2 _278 = vec2(sa[0].z, sa[0].w);
    vec2 _280 = unpack2xF16(_278.x);
    vec2 _282 = unpack2xF16(_278.y);
    vec2 _294 = vec2(sa[0].x, sa[0].y);
    vec2 _296 = unpack2xF16(_294.x);
    vec2 _298 = unpack2xF16(_294.y);
    vec4 _305 = (vec4(_264.x, _264.y, _266.x, _266.y) * vec4(_280.x, _280.y, _282.x, _282.y)) + vec4(_296.x, _296.y, _298.x, _298.y);
    vec2 _314 = vec2(pack2xF16(vec2(_305.x, _305.y)), pack2xF16(vec2(_305.z, _305.w)));
    r[0] = vec4(r[0].x, r[0].y, _314.x, _314.y);
    vec2 _324 = vec2(r[0].z, r[0].w);
    vec2 _326 = unpack2xF16(_324.x);
    vec2 _339 = vec2(sa[2].z, sa[2].w);
    vec2 _341 = unpack2xF16(_339.x);
    vec2 _359 = unpack2xF16(r[1].y);
    vec2 _364 = vec2(pack2xF16(vec2(dot(vec4(_326.x, _326.y, unpack2xF16(_324.y).x, 0.0), vec4(_341.x, _341.y, unpack2xF16(_339.y).x, 1.0)), unpack2xF16(r[1].x).y)), pack2xF16(vec2(_359.x, _359.y)));
    r[1] = vec4(_364.x, _364.y, r[1].z, r[1].w);
    vec2 _373 = unpack2xF16(r[1].x);
    vec2 _385 = vec2(sa[1].x, sa[1].y);
    vec2 _387 = unpack2xF16(_385.x);
    vec2 _389 = unpack2xF16(_385.y);
    vec2 _401 = vec2(r[0].z, r[0].w);
    vec2 _403 = unpack2xF16(_401.x);
    vec2 _405 = unpack2xF16(_401.y);
    vec4 _413 = (vec4(_373.x, _373.x, _373.x, _373.x) * vec4(_387.x, _387.y, _389.x, _389.y)) + (vec4(0.0) - vec4(_403.x, _403.y, _405.x, _405.y));
    vec2 _422 = vec2(pack2xF16(vec2(_413.x, _413.y)), pack2xF16(vec2(_413.z, _413.w)));
    r[0] = vec4(_422.x, _422.y, r[0].z, r[0].w);
    vec2 _432 = vec2(r[0].x, r[0].y);
    vec2 _434 = unpack2xF16(_432.x);
    vec2 _436 = unpack2xF16(_432.y);
    vec2 _447 = unpack2xF16(sa[1].y);
    vec2 _459 = vec2(r[0].z, r[0].w);
    vec2 _461 = unpack2xF16(_459.x);
    vec2 _463 = unpack2xF16(_459.y);
    vec4 _470 = (vec4(_434.x, _434.y, _436.x, _436.y) * vec4(_447.y, _447.y, _447.y, _447.y)) + vec4(_461.x, _461.y, _463.x, _463.y);
    vec2 _479 = vec2(pack2xF16(vec2(_470.x, _470.y)), pack2xF16(vec2(_470.z, _470.w)));
    r[0] = vec4(_479.x, _479.y, r[0].z, r[0].w);
    vec2 _488 = unpack2xF16(r[1].x);
    vec2 _500 = vec2(r[0].x, r[0].y);
    vec2 _502 = unpack2xF16(_500.x);
    vec3 _509 = (vec3(0.0) - vec3(_488.x, _488.x, _488.x)) + vec3(_502.x, _502.y, unpack2xF16(_500.y).x);
    vec2 _522 = vec2(pack2xF16(vec2(_509.x, _509.y)), pack2xF16(vec2(_509.z, unpack2xF16(r[0].y).y)));
    r[0] = vec4(_522.x, _522.y, r[0].z, r[0].w);
    vec2 _532 = vec2(r[0].x, r[0].y);
    vec2 _534 = unpack2xF16(_532.x);
    vec2 _536 = unpack2xF16(_532.y);
    vec2 _547 = unpack2xF16(sa[1].z);
    vec2 _558 = unpack2xF16(r[1].x);
    vec4 _565 = (vec4(_534.x, _534.y, _536.x, _536.y) * vec4(_547.y, _547.y, _547.y, _547.y)) + vec4(_558.x, _558.x, _558.x, _558.x);
    vec2 _574 = vec2(pack2xF16(vec2(_565.x, _565.y)), pack2xF16(vec2(_565.z, _565.w)));
    r[0] = vec4(_574.x, _574.y, r[0].z, r[0].w);
    vec2 _584 = vec2(r[0].x, r[0].y);
    vec2 _586 = unpack2xF16(_584.x);
    vec2 _598 = unpack2xF16(sa[3].y);
    vec3 _603 = vec3(_586.x, _586.y, unpack2xF16(_584.y).x) + vec3(_598.x, _598.x, _598.x);
    vec2 _616 = vec2(pack2xF16(vec2(_603.x, _603.y)), pack2xF16(vec2(_603.z, unpack2xF16(r[0].w).y)));
    r[0] = vec4(r[0].x, r[0].y, _616.x, _616.y);
    vec2 _626 = vec2(pa[0].x, pa[0].y);
    vec2 _628 = unpack2xF16(_626.x);
    vec2 _642 = vec2(sa[3].z, sa[3].w);
    vec2 _644 = unpack2xF16(_642.x);
    vec3 _651 = (vec3(0.0) - vec3(_628.x, _628.y, unpack2xF16(_626.y).x)) + vec3(_644.x, _644.y, unpack2xF16(_642.y).x);
    vec2 _664 = vec2(pack2xF16(vec2(_651.x, _651.y)), pack2xF16(vec2(_651.z, unpack2xF16(r[0].y).y)));
    r[0] = vec4(_664.x, _664.y, r[0].z, r[0].w);
    vec2 _674 = vec2(r[0].z, r[0].w);
    vec2 _676 = unpack2xF16(_674.x);
    vec2 _678 = unpack2xF16(_674.y);
    vec2 _689 = unpack2xF16(sa[1].w);
    vec2 _701 = vec2(r[0].x, r[0].y);
    vec2 _703 = unpack2xF16(_701.x);
    vec2 _705 = unpack2xF16(_701.y);
    vec4 _712 = (vec4(_676.x, _676.y, _678.x, _678.y) * vec4(_689.y, _689.y, _689.y, _689.y)) + vec4(_703.x, _703.y, _705.x, _705.y);
    vec2 _721 = vec2(pack2xF16(vec2(_712.x, _712.y)), pack2xF16(vec2(_712.z, _712.w)));
    r[0] = vec4(_721.x, _721.y, r[0].z, r[0].w);
    vec2 _731 = vec2(r[0].x, r[0].y);
    vec2 _733 = unpack2xF16(_731.x);
    vec2 _735 = unpack2xF16(_731.y);
    vec2 _746 = unpack2xF16(sa[2].y);
    vec2 _758 = vec2(pa[0].x, pa[0].y);
    vec2 _760 = unpack2xF16(_758.x);
    vec2 _762 = unpack2xF16(_758.y);
    vec4 _769 = (vec4(_733.x, _733.y, _735.x, _735.y) * vec4(_746.x, _746.x, _746.x, _746.x)) + vec4(_760.x, _760.y, _762.x, _762.y);
    vec2 _778 = vec2(pack2xF16(vec2(_769.x, _769.y)), pack2xF16(vec2(_769.z, _769.w)));
    pa[0] = vec4(_778.x, _778.y, pa[0].z, pa[0].w);
    vec2 _788 = vec2(pa[0].x, pa[0].y);
    vec2 _790 = unpack2xF16(_788.x);
    vec4 _798 = vec4(_790.x, _790.y, unpack2xF16(_788.y).x, 1.0) * vec4(1.0);
    vec2 _807 = vec2(pack2xF16(vec2(_798.x, _798.y)), pack2xF16(vec2(_798.z, _798.w)));
    pa[0] = vec4(_807.x, _807.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _151)
{
    uint _154 = floatBitsToUint(_151);
    return uvec2(bitfieldExtract(_154, 0, 16), bitfieldExtract(_154, 16, 16));
}

void frag_output_finalize()
{
    vec2 _117 = vec2(pa[0].x, pa[0].y);
    vec2 _128 = unpack2xF16(_117.x);
    vec2 _130 = unpack2xF16(_117.y);
    out_color = vec4(_128.x, _128.y, _130.x, _130.y);
    vec2 _147 = vec2(pa[0].x, pa[0].y);
    uvec2 _160 = unpack2xU16(_147.x);
    uvec2 _162 = unpack2xU16(_147.y);
    out_color_ui = uvec4(_160.x, _160.y, _162.x, _162.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05).x, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05).y);
    sa[3] = vec4(vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05).z, vec4(8.4975334175396710634231567382812e-05, 1.6966921806044885094744517794474e-41, 3.0569732189178466796875e-05, -3.0688941478729248046875e-05).w, sa[3].z, sa[3].w);
    frag_init();
    vec4 _197 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _210 = vec2(pack2xF16(_197.xy), pack2xF16(_197.zw));
    pa[0] = vec4(_210.x, _210.y, pa[0].z, pa[0].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:38:20.007] |E| [compile_program]: Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized
0(37) : warning C7050: "r[0].xy" might be used before being initialized
0(37) : warning C7050: "r[1]" might be used before being initialized


[10:39:16.769] |I| [load_shader_generic]: Generating vert shader cc34f6a19c08e3f6d1759329930f1f7d93d02817c1fe1a474a29adda4f21b926
[10:39:16.772] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: cc34f6a19c08e3f6d1759329930f1f7d93d02817c1fe1a474a29adda4f21b926

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[6];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _168 = sa[4];
    _168.x = sa[4].x * sa[4].y;
    sa[4] = _168;
    vec4 _189 = internals[0];
    _189.x = (sa[4].x * sa[8].y) + sa[8].z;
    internals[0] = _189;
    vec4 _203 = internals[0];
    _203.x = fract(internals[0].x);
    internals[0] = _203;
    vec4 _223 = internals[1];
    _223.x = (internals[0].x * sa[8].x) + sa[7].w;
    internals[1] = _223;
    vec4 _238 = sa[4];
    _238.x = (internals[1].x * internals[1].x) + 0.0;
    sa[4] = _238;
    vec4 _258 = internals[0];
    _258.x = (sa[4].x * sa[7].z) + sa[7].y;
    internals[0] = _258;
    vec4 _279 = internals[0];
    _279.x = (internals[0].x * sa[4].x) + (0.0 - sa[7].x);
    internals[0] = _279;
    vec4 _299 = internals[0];
    _299.x = (internals[0].x * sa[4].x) + sa[8].z;
    internals[0] = _299;
    vec4 _314 = internals[2];
    _314.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _314;
    vec4 _334 = internals[0];
    _334.x = (sa[4].x * sa[6].z) + sa[6].y;
    internals[0] = _334;
    vec4 _355 = internals[0];
    _355.x = (internals[0].x * sa[4].x) + (0.0 - sa[6].x);
    internals[0] = _355;
    vec4 _375 = internals[1];
    _375.x = (internals[0].x * sa[4].x) + sa[6].w;
    internals[1] = _375;
    vec4 _390 = internals[0];
    _390.x = (internals[2].x * internals[2].x) + 0.0;
    internals[0] = _390;
    vec4 _410 = internals[0];
    _410.x = (internals[2].x * internals[2].x) + internals[0].x;
    internals[0] = _410;
    vec4 _426 = sa[4];
    _426.z = (1.0 * sa[6].w) + (0.0 - internals[0].x);
    sa[4] = _426;
    vec4 _441 = internals[0];
    _441.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _441;
    vec4 _461 = sa[4];
    _461.x = (internals[2].x * internals[1].x) + internals[0].x;
    sa[4] = _461;
}

void primary_program()
{
    vec2 _471 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_471.x, _471.y, outs[1].z, outs[1].w);
    vec2 _481 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _481.x, _481.y);
    vec2 _501 = (vec2(0.0) - vec2(sa[5].x, sa[5].y)) + vec2(pa[0].x, pa[0].y);
    pa[1] = vec4(_501.x, _501.y, pa[1].z, pa[1].w);
    vec2 _519 = vec2(sa[4].z, sa[4].z) * vec2(pa[1].x, pa[1].y);
    pa[0] = vec4(_519.x, _519.y, pa[0].z, pa[0].w);
    vec4 _543 = pa[0];
    _543.x = (pa[1].y * (0.0 - sa[4].x)) + pa[0].x;
    pa[0] = _543;
    vec4 _563 = pa[0];
    _563.y = (pa[1].x * sa[4].x) + pa[0].y;
    pa[0] = _563;
    vec2 _578 = vec2(sa[5].x, sa[5].y) + vec2(pa[0].x, pa[0].y);
    internals[0] = vec4(_578.x, _578.y, internals[0].z, internals[0].w);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[0] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    vec2 _623 = vec2(pa[0].z, pa[0].w);
    internals[1] = vec4(internals[1].x, internals[1].y, _623.x, _623.y);
    internals[0] = (vec4(internals[1].z, internals[1].z, internals[1].z, internals[1].z) * sa[2]) + internals[0];
    internals[0] = (vec4(internals[1].w, internals[1].w, internals[1].w, internals[1].w) * sa[3]) + internals[0];
    vec4 _675 = internals[1];
    _675.x = 1.0 / internals[0].w;
    internals[1] = _675;
    vec2 _691 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_691.x, _691.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _712 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_712.x, _712.y, outs[0].z, outs[0].w);
    vec2 _722 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _722.x, _722.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 6)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[6] = vec4(0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 1.0);
    sa[7] = vec4(0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875);
    sa[8] = vec4(vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).x, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).y, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).z, sa[8].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:39:16.784] |E| [compile_program]: Vertex info
-----------
0(32) : warning C7050: "internals[0]" might be used before being initialized
0(32) : warning C7050: "internals[1]" might be used before being initialized
0(32) : warning C7050: "internals[2]" might be used before being initialized


[10:40:26.589] |I| [load_shader_generic]: Generating frag shader 1efa000c2a81f79fbd535e0d55aefe7ad6c75c6696eedbdd87d20832241f1dae
[10:40:26.597] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 1efa000c2a81f79fbd535e0d55aefe7ad6c75c6696eedbdd87d20832241f1dae

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 5) in vec4 v_TexCoord1;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 7) in vec4 v_TexCoord3;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _252)
{
    return uintBitsToFloat(packHalf2x16(_252));
}

vec2 unpack2xF16(float _178)
{
    return unpackHalf2x16(floatBitsToUint(_178));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec4 _354 = sa[1];
    _354.w = pack2xF16(vec2(1.0 / unpack2xF16(sa[2].x).y, unpack2xF16(sa[1].w).y));
    sa[1] = _354;
}

void primary_program()
{
    vec2 _384 = unpack2xF16(r[0].y);
    vec2 _389 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].z).x) + unpack2xF16(sa[2].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_384.x, _384.y)));
    r[0] = vec4(_389.x, _389.y, r[0].z, r[0].w);
    vec2 _418 = unpack2xF16(r[0].y);
    vec2 _423 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(r[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_418.x, _418.y)));
    r[0] = vec4(_423.x, _423.y, r[0].z, r[0].w);
    vec4 _444 = pa[0];
    _444.y = pack2xF16(vec2(inversesqrt(unpack2xF16(r[0].x).x), unpack2xF16(pa[0].y).y));
    pa[0] = _444;
    vec4 _463 = pa[0];
    _463.y = pack2xF16(vec2(1.0 / (0.0 - unpack2xF16(pa[0].y).x), unpack2xF16(pa[0].y).y));
    pa[0] = _463;
    vec2 _489 = unpack2xF16(r[0].y);
    vec2 _494 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].y).x * unpack2xF16(sa[6].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_489.x, _489.y)));
    r[0] = vec4(_494.x, _494.y, r[0].z, r[0].w);
    vec2 _503 = unpack2xF16(pa[1].w);
    vec2 _512 = unpack2xF16(sa[6].y);
    vec2 _521 = unpack2xF16(r[0].x);
    vec2 _526 = (vec2(_503.x, _503.x) * vec2(_512.x, _512.x)) + vec2(_521.x, _521.x);
    vec2 _534 = unpack2xF16(r[0].y);
    vec2 _539 = vec2(pack2xF16(vec2(_526.x, _526.y)), pack2xF16(vec2(_534.x, _534.y)));
    r[0] = vec4(_539.x, _539.y, r[0].z, r[0].w);
    vec2 _548 = unpack2xF16(r[0].x);
    vec2 _557 = unpack2xF16(sa[6].x);
    vec2 _567 = unpack2xF16(sa[7].w);
    vec2 _572 = (vec2(_548.x, _548.x) * vec2(_557.x, _557.x)) + vec2(_567.x, _567.x);
    vec2 _580 = unpack2xF16(r[0].y);
    vec2 _585 = vec2(pack2xF16(vec2(_572.x, _572.y)), pack2xF16(vec2(_580.x, _580.y)));
    r[0] = vec4(_585.x, _585.y, r[0].z, r[0].w);
    vec2 _614 = unpack2xF16(r[0].y);
    vec2 _619 = vec2(pack2xF16(vec2(fract(unpack2xF16(r[0].x).x), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_614.x, _614.y)));
    r[0] = vec4(_619.x, _619.y, r[0].z, r[0].w);
    vec2 _628 = unpack2xF16(r[0].x);
    vec2 _637 = unpack2xF16(sa[5].w);
    vec2 _646 = unpack2xF16(sa[5].z);
    vec2 _651 = (vec2(_628.x, _628.x) * vec2(_637.x, _637.x)) + vec2(_646.x, _646.x);
    vec2 _659 = unpack2xF16(r[0].w);
    vec2 _664 = vec2(pack2xF16(vec2(_651.x, _651.y)), pack2xF16(vec2(_659.x, _659.y)));
    r[0] = vec4(r[0].x, r[0].y, _664.x, _664.y);
    vec2 _693 = unpack2xF16(r[1].y);
    vec2 _698 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x * unpack2xF16(r[0].z).x, unpack2xF16(r[1].x).y)), pack2xF16(vec2(_693.x, _693.y)));
    r[1] = vec4(_698.x, _698.y, r[1].z, r[1].w);
    vec2 _707 = unpack2xF16(r[1].x);
    vec2 _716 = unpack2xF16(sa[5].y);
    vec2 _725 = unpack2xF16(sa[5].x);
    vec2 _730 = (vec2(_707.x, _707.x) * vec2(_716.x, _716.x)) + vec2(_725.x, _725.x);
    vec2 _738 = unpack2xF16(r[0].y);
    vec2 _743 = vec2(pack2xF16(vec2(_730.x, _730.y)), pack2xF16(vec2(_738.x, _738.y)));
    r[0] = vec4(_743.x, _743.y, r[0].z, r[0].w);
    vec2 _752 = unpack2xF16(r[1].x);
    vec2 _761 = unpack2xF16(r[0].x);
    vec2 _770 = unpack2xF16(sa[4].w);
    vec2 _776 = (vec2(_752.x, _752.x) * vec2(_761.x, _761.x)) + (vec2(0.0) - vec2(_770.x, _770.x));
    vec2 _784 = unpack2xF16(r[0].y);
    vec2 _789 = vec2(pack2xF16(vec2(_776.x, _776.y)), pack2xF16(vec2(_784.x, _784.y)));
    r[0] = vec4(_789.x, _789.y, r[0].z, r[0].w);
    vec2 _798 = unpack2xF16(r[1].x);
    vec2 _807 = unpack2xF16(r[0].x);
    vec2 _816 = unpack2xF16(sa[7].w);
    vec2 _821 = (vec2(_798.x, _798.x) * vec2(_807.x, _807.x)) + vec2(_816.x, _816.x);
    vec2 _829 = unpack2xF16(r[0].y);
    vec2 _834 = vec2(pack2xF16(vec2(_821.x, _821.y)), pack2xF16(vec2(_829.x, _829.y)));
    r[0] = vec4(_834.x, _834.y, r[0].z, r[0].w);
    vec2 _863 = unpack2xF16(r[1].w);
    vec2 _868 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(r[0].z).x, unpack2xF16(r[1].z).y)), pack2xF16(vec2(_863.x, _863.y)));
    r[1] = vec4(r[1].x, r[1].y, _868.x, _868.y);
    vec2 _877 = unpack2xF16(r[1].x);
    vec2 _886 = unpack2xF16(sa[4].z);
    vec2 _895 = unpack2xF16(sa[4].y);
    vec2 _900 = (vec2(_877.x, _877.x) * vec2(_886.x, _886.x)) + vec2(_895.x, _895.x);
    vec2 _908 = unpack2xF16(r[0].y);
    vec2 _913 = vec2(pack2xF16(vec2(_900.x, _900.y)), pack2xF16(vec2(_908.x, _908.y)));
    r[0] = vec4(_913.x, _913.y, r[0].z, r[0].w);
    vec2 _922 = unpack2xF16(r[0].x);
    vec2 _931 = unpack2xF16(r[1].x);
    vec2 _940 = unpack2xF16(sa[4].x);
    vec2 _946 = (vec2(_922.x, _922.x) * vec2(_931.x, _931.x)) + (vec2(0.0) - vec2(_940.x, _940.x));
    vec2 _954 = unpack2xF16(r[0].y);
    vec2 _959 = vec2(pack2xF16(vec2(_946.x, _946.y)), pack2xF16(vec2(_954.x, _954.y)));
    r[0] = vec4(_959.x, _959.y, r[0].z, r[0].w);
    vec2 _968 = unpack2xF16(r[0].x);
    vec2 _977 = unpack2xF16(r[1].x);
    vec2 _986 = unpack2xF16(sa[3].x);
    vec2 _991 = (vec2(_968.x, _968.x) * vec2(_977.x, _977.x)) + vec2(_986.x, _986.x);
    vec2 _999 = unpack2xF16(r[0].w);
    vec2 _1004 = vec2(pack2xF16(vec2(_991.x, _991.y)), pack2xF16(vec2(_999.x, _999.y)));
    r[0] = vec4(r[0].x, r[0].y, _1004.x, _1004.y);
    vec2 _1034 = unpack2xF16(r[0].y);
    vec2 _1039 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(sa[2].x).x) + unpack2xF16(pa[1].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1034.x, _1034.y)));
    r[0] = vec4(_1039.x, _1039.y, r[0].z, r[0].w);
    vec2 _1071 = unpack2xF16(r[0].y);
    vec2 _1076 = vec2(pack2xF16(vec2((0.0 - abs(unpack2xF16(r[0].x).x)) + unpack2xF16(sa[7].w).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1071.x, _1071.y)));
    r[0] = vec4(_1076.x, _1076.y, r[0].z, r[0].w);
    vec2 _1105 = unpack2xF16(r[0].y);
    vec2 _1110 = vec2(pack2xF16(vec2(min(unpack2xF16(r[0].x).x, unpack2xF16(sa[3].x).x), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1105.x, _1105.y)));
    r[0] = vec4(_1110.x, _1110.y, r[0].z, r[0].w);
    vec2 _1132 = unpack2xF16(r[1].y);
    vec2 _1137 = vec2(pack2xF16(vec2(max(unpack2xF16(r[0].x).x, 0.0), unpack2xF16(r[1].x).y)), pack2xF16(vec2(_1132.x, _1132.y)));
    r[1] = vec4(_1137.x, _1137.y, r[1].z, r[1].w);
    vec2 _1166 = unpack2xF16(r[0].y);
    vec2 _1171 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x * unpack2xF16(r[1].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1166.x, _1166.y)));
    r[0] = vec4(_1171.x, _1171.y, r[0].z, r[0].w);
    vec2 _1180 = unpack2xF16(r[1].z);
    vec2 _1189 = unpack2xF16(r[0].z);
    vec2 _1198 = unpack2xF16(r[0].x);
    vec2 _1203 = (vec2(_1180.x, _1180.x) * vec2(_1189.x, _1189.x)) + vec2(_1198.x, _1198.x);
    vec2 _1211 = unpack2xF16(r[0].y);
    vec2 _1216 = vec2(pack2xF16(vec2(_1203.x, _1203.y)), pack2xF16(vec2(_1211.x, _1211.y)));
    r[0] = vec4(_1216.x, _1216.y, r[0].z, r[0].w);
    vec2 _1225 = unpack2xF16(r[0].x);
    vec2 _1234 = unpack2xF16(sa[1].w);
    vec2 _1243 = unpack2xF16(sa[7].z);
    vec2 _1248 = (vec2(_1225.x, _1225.x) * vec2(_1234.x, _1234.x)) + vec2(_1243.x, _1243.x);
    vec2 _1256 = unpack2xF16(r[0].y);
    vec2 _1261 = vec2(pack2xF16(vec2(_1248.x, _1248.y)), pack2xF16(vec2(_1256.x, _1256.y)));
    r[0] = vec4(_1261.x, _1261.y, r[0].z, r[0].w);
    vec2 _1290 = unpack2xF16(r[0].y);
    vec2 _1295 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(r[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1290.x, _1290.y)));
    r[0] = vec4(_1295.x, _1295.y, r[0].z, r[0].w);
    vec2 _1324 = unpack2xF16(r[0].y);
    vec2 _1329 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(r[1].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1324.x, _1324.y)));
    r[0] = vec4(_1329.x, _1329.y, r[0].z, r[0].w);
    vec2 _1338 = unpack2xF16(pa[0].x);
    vec2 _1347 = unpack2xF16(sa[1].w);
    vec2 _1356 = unpack2xF16(r[0].x);
    vec2 _1361 = (vec2(_1338.x, _1338.x) * vec2(_1347.x, _1347.x)) + vec2(_1356.x, _1356.x);
    vec2 _1369 = unpack2xF16(pa[0].y);
    vec2 _1374 = vec2(pack2xF16(vec2(_1361.x, _1361.y)), pack2xF16(vec2(_1369.x, _1369.y)));
    pa[0] = vec4(_1374.x, _1374.y, pa[0].z, pa[0].w);
    vec4 _1395 = internals[1];
    _1395.x = unpack2xF16(pa[0].x).x + unpack2xF16(sa[7].z).x;
    internals[1] = _1395;
    vec2 _1422 = unpack2xF16(pa[0].y);
    vec2 _1427 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].z).x) + unpack2xF16(sa[3].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1422.x, _1422.y)));
    pa[0] = vec4(_1427.x, _1427.y, pa[0].z, pa[0].w);
    vec2 _1456 = unpack2xF16(pa[0].y);
    vec2 _1461 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[1].z).x, unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1456.x, _1456.y)));
    pa[0] = vec4(_1461.x, _1461.y, pa[0].z, pa[0].w);
    vec2 _1493 = unpack2xF16(pa[0].y);
    vec2 _1498 = vec2(pack2xF16(vec2((0.0 - abs(unpack2xF16(pa[0].x).x)) + unpack2xF16(sa[3].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1493.x, _1493.y)));
    pa[0] = vec4(_1498.x, _1498.y, pa[0].z, pa[0].w);
    vec2 _1527 = unpack2xF16(pa[0].y);
    vec2 _1532 = vec2(pack2xF16(vec2(max(unpack2xF16(sa[3].w).x, unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1527.x, _1527.y)));
    pa[0] = vec4(_1532.x, _1532.y, pa[0].z, pa[0].w);
    vec2 _1556 = unpack2xF16(pa[0].y);
    vec2 _1561 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(pa[0].x).x)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1556.x, _1556.y)));
    pa[0] = vec4(_1561.x, _1561.y, pa[0].z, pa[0].w);
    vec4 _1582 = internals[0];
    _1582.x = unpack2xF16(pa[0].x).x * unpack2xF16(sa[2].y).y;
    internals[0] = _1582;
    vec4 _1598 = internals[1];
    vec4 _1604 = internals[0];
    _1604.x = exp(internals[0].x);
    internals[0] = _1604;
    vec2 _1610 = unpack2xF16(pa[0].y);
    vec2 _1615 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].z).y + _1598.x)), pack2xF16(vec2(_1610.x, _1610.y)));
    pa[0] = vec4(_1615.x, _1615.y, pa[0].z, pa[0].w);
    vec2 _1631 = unpack2xF16(sa[2].y);
    vec2 _1641 = unpack2xF16(pa[0].x);
    vec2 _1646 = (vec2(internals[0].x, internals[0].x) * (vec2(0.0) - vec2(_1631.x, _1631.x))) + vec2(_1641.x, _1641.x);
    vec2 _1654 = unpack2xF16(pa[0].y);
    vec2 _1659 = vec2(pack2xF16(vec2(_1646.x, _1646.y)), pack2xF16(vec2(_1654.x, _1654.y)));
    pa[0] = vec4(_1659.x, _1659.y, pa[0].z, pa[0].w);
    vec2 _1683 = unpack2xF16(pa[0].x);
    vec2 _1688 = (vec2(internals[1].x, internals[1].x) * (vec2(0.0) - vec2(internals[0].x, internals[0].x))) + vec2(_1683.x, _1683.x);
    vec2 _1696 = unpack2xF16(r[0].y);
    vec2 _1701 = vec2(pack2xF16(vec2(_1688.x, _1688.y)), pack2xF16(vec2(_1696.x, _1696.y)));
    r[0] = vec4(_1701.x, _1701.y, r[0].z, r[0].w);
    p[1] = unpack2xF16(r[0].x).x >= 0.0;
    if (!p[1])
    {
        discard;
    }
    vec2 _1741 = unpack2xF16(pa[0].y);
    vec2 _1746 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(pa[1].z).y)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1741.x, _1741.y)));
    pa[0] = vec4(_1746.x, _1746.y, pa[0].z, pa[0].w);
    vec2 _1775 = unpack2xF16(pa[0].y);
    vec2 _1780 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(sa[7].y).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1775.x, _1775.y)));
    pa[0] = vec4(_1780.x, _1780.y, pa[0].z, pa[0].w);
    vec2 _1802 = unpack2xF16(pa[0].y);
    vec2 _1807 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1802.x, _1802.y)));
    pa[0] = vec4(_1807.x, _1807.y, pa[0].z, pa[0].w);
    vec2 _1816 = unpack2xF16(pa[0].x);
    vec2 _1825 = unpack2xF16(sa[7].x);
    vec2 _1835 = unpack2xF16(sa[6].w);
    vec2 _1840 = (vec2(_1816.x, _1816.x) * (vec2(0.0) - vec2(_1825.x, _1825.x))) + vec2(_1835.x, _1835.x);
    vec2 _1848 = unpack2xF16(pa[0].y);
    vec2 _1853 = vec2(pack2xF16(vec2(_1840.x, _1840.y)), pack2xF16(vec2(_1848.x, _1848.y)));
    pa[0] = vec4(_1853.x, _1853.y, pa[0].z, pa[0].w);
    vec2 _1862 = unpack2xF16(pa[0].x);
    vec2 _1874 = vec2(sa[0].x, sa[0].y);
    vec2 _1876 = unpack2xF16(_1874.x);
    vec2 _1878 = unpack2xF16(_1874.y);
    vec4 _1884 = vec4(_1862.x, _1862.x, _1862.x, _1862.x) * vec4(_1876.x, _1876.y, _1878.x, _1878.y);
    vec2 _1893 = vec2(pack2xF16(vec2(_1884.x, _1884.y)), pack2xF16(vec2(_1884.z, _1884.w)));
    r[0] = vec4(r[0].x, r[0].y, _1893.x, _1893.y);
    vec2 _1922 = unpack2xF16(pa[0].y);
    vec2 _1927 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1922.x, _1922.y)));
    pa[0] = vec4(_1927.x, _1927.y, pa[0].z, pa[0].w);
    vec2 _1936 = unpack2xF16(r[1].x);
    vec2 _1945 = unpack2xF16(sa[3].z);
    vec2 _1954 = unpack2xF16(sa[3].y);
    vec2 _1959 = (vec2(_1936.x, _1936.x) * vec2(_1945.x, _1945.x)) + vec2(_1954.x, _1954.x);
    vec2 _1967 = unpack2xF16(pa[0].w);
    vec2 _1972 = vec2(pack2xF16(vec2(_1959.x, _1959.y)), pack2xF16(vec2(_1967.x, _1967.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1972.x, _1972.y);
    vec2 _2001 = unpack2xF16(pa[1].y);
    vec2 _2006 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[0].z).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_2001.x, _2001.y)));
    pa[1] = vec4(_2006.x, _2006.y, pa[1].z, pa[1].w);
    vec2 _2035 = unpack2xF16(pa[0].w);
    vec2 _2040 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].w).y + unpack2xF16(r[0].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_2035.x, _2035.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _2040.x, _2040.y);
    p[0] = unpack2xF16(r[0].x).x < unpack2xF16(sa[1].z).x;
    vec2 _2085 = unpack2xF16(pa[0].y);
    vec2 _2090 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x + unpack2xF16(sa[2].w).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2085.x, _2085.y)));
    pa[0] = vec4(_2090.x, _2090.y, pa[0].z, pa[0].w);
    if (!p[0])
    {
        p[0] = unpack2xF16(pa[1].x).x > unpack2xF16(pa[0].x).x;
    }
    if (p[0])
    {
        vec2 _2125 = vec2(sa[1].x, sa[1].y);
        vec2 _2127 = unpack2xF16(_2125.x);
        vec2 _2129 = unpack2xF16(_2125.y);
        vec4 _2134 = vec4(_2127.x, _2127.y, _2129.x, _2129.y);
        vec2 _2143 = vec2(pack2xF16(vec2(_2134.x, _2134.y)), pack2xF16(vec2(_2134.z, _2134.w)));
        pa[0] = vec4(_2143.x, _2143.y, pa[0].z, pa[0].w);
    }
    if (!p[0])
    {
        vec2 _2178 = unpack2xF16(pa[0].y);
        vec2 _2183 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].x).x) + unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2178.x, _2178.y)));
        pa[0] = vec4(_2183.x, _2183.y, pa[0].z, pa[0].w);
        vec2 _2200 = vec2(sa[3].x, sa[3].x);
        bvec2 _2202 = lessThan(vec2(pa[0].x, pa[0].y), vec2(0.0));
        vec2 _2203 = vec2(_2202.x ? vec2(0.0).x : _2200.x, _2202.y ? vec2(0.0).y : _2200.y);
        vec2 _2211 = unpack2xF16(pa[0].w);
        vec2 _2216 = vec2(pack2xF16(vec2(_2203.x, _2203.y)), pack2xF16(vec2(_2211.x, _2211.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _2216.x, _2216.y);
        vec2 _2225 = unpack2xF16(pa[0].z);
        vec2 _2237 = vec2(sa[0].z, sa[0].w);
        vec2 _2239 = unpack2xF16(_2237.x);
        vec2 _2241 = unpack2xF16(_2237.y);
        vec2 _2254 = vec2(sa[0].z, sa[0].w);
        vec2 _2256 = unpack2xF16(_2254.x);
        vec2 _2258 = unpack2xF16(_2254.y);
        vec4 _2265 = (vec4(_2225.x, _2225.x, _2225.x, _2225.x) * (vec4(0.0) - vec4(_2239.x, _2239.y, _2241.x, _2241.y))) + vec4(_2256.x, _2256.y, _2258.x, _2258.y);
        vec2 _2274 = vec2(pack2xF16(vec2(_2265.x, _2265.y)), pack2xF16(vec2(_2265.z, _2265.w)));
        pa[0] = vec4(_2274.x, _2274.y, pa[0].z, pa[0].w);
        vec2 _2283 = unpack2xF16(pa[0].z);
        vec2 _2295 = vec2(r[0].z, r[0].w);
        vec2 _2297 = unpack2xF16(_2295.x);
        vec2 _2299 = unpack2xF16(_2295.y);
        vec2 _2311 = vec2(pa[0].x, pa[0].y);
        vec2 _2313 = unpack2xF16(_2311.x);
        vec2 _2315 = unpack2xF16(_2311.y);
        vec4 _2322 = (vec4(_2283.x, _2283.x, _2283.x, _2283.x) * vec4(_2297.x, _2297.y, _2299.x, _2299.y)) + vec4(_2313.x, _2313.y, _2315.x, _2315.y);
        vec2 _2331 = vec2(pack2xF16(vec2(_2322.x, _2322.y)), pack2xF16(vec2(_2322.z, _2322.w)));
        pa[0] = vec4(_2331.x, _2331.y, pa[0].z, pa[0].w);
    }
}

uvec2 unpack2xU16(float _208)
{
    uint _211 = floatBitsToUint(_208);
    return uvec2(bitfieldExtract(_211, 0, 16), bitfieldExtract(_211, 16, 16));
}

void frag_output_finalize()
{
    vec2 _174 = vec2(pa[0].x, pa[0].y);
    vec2 _185 = unpack2xF16(_174.x);
    vec2 _187 = unpack2xF16(_174.y);
    out_color = vec4(_185.x, _185.y, _187.x, _187.y);
    vec2 _204 = vec2(pa[0].x, pa[0].y);
    uvec2 _217 = unpack2xU16(_204.x);
    uvec2 _219 = unpack2xU16(_204.y);
    out_color_ui = uvec4(_217.x, _217.y, _219.x, _219.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec4(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41, 2.1523944412029190209388486399333e-41, 6.4859099421274158127704823762574e-41).x, vec4(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41, 2.1523944412029190209388486399333e-41, 6.4859099421274158127704823762574e-41).y);
    sa[3] = vec4(vec4(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41, 2.1523944412029190209388486399333e-41, 6.4859099421274158127704823762574e-41).z, vec4(8.0356059138242310115050349224177e-41, 1.8079552786718789849057959083606e-41, 2.1523944412029190209388486399333e-41, 6.4859099421274158127704823762574e-41).w, sa[3].z, sa[3].w);
    sa[3] = vec4(sa[3].x, sa[3].y, vec4(2.3676338853232109230327335039266e-41, 2.8698592549372253612517981865777e-42, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).x, vec4(2.3676338853232109230327335039266e-41, 2.8698592549372253612517981865777e-42, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).y);
    sa[4] = vec4(vec4(2.3676338853232109230327335039266e-41, 2.8698592549372253612517981865777e-42, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).z, vec4(2.3676338853232109230327335039266e-41, 2.8698592549372253612517981865777e-42, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).w, sa[4].z, sa[4].w);
    sa[4] = vec4(sa[4].x, sa[4].y, vec4(4.6427820720009839193845008553562e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42, 4.595418183906805102387278795441e-41).x, vec4(4.6427820720009839193845008553562e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42, 4.595418183906805102387278795441e-41).y);
    sa[5] = vec4(vec4(4.6427820720009839193845008553562e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42, 4.595418183906805102387278795441e-41).z, vec4(4.6427820720009839193845008553562e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42, 4.595418183906805102387278795441e-41).w, sa[5].z, sa[5].w);
    sa[5] = vec4(sa[5].x, sa[5].y, vec4(6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41, 2.7084296718470064346813845385827e-41).x, vec4(6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41, 2.7084296718470064346813845385827e-41).y);
    sa[6] = vec4(vec4(6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41, 2.7084296718470064346813845385827e-41).z, vec4(6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41, 2.7084296718470064346813845385827e-41).w, sa[6].z, sa[6].w);
    sa[6] = vec4(sa[6].x, sa[6].y, vec4(3.0604358460854004828974254099052e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41, 2.4752536073833568740796759359233e-41).x, vec4(3.0604358460854004828974254099052e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41, 2.4752536073833568740796759359233e-41).y);
    sa[7] = vec4(vec4(3.0604358460854004828974254099052e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41, 2.4752536073833568740796759359233e-41).z, vec4(3.0604358460854004828974254099052e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41, 2.4752536073833568740796759359233e-41).w, sa[7].z, sa[7].w);
    sa[7] = vec4(sa[7].x, sa[7].y, vec2(6.399730086571439562908673006885e-41, 2.0089014784560577528762587306044e-41).x, vec2(6.399730086571439562908673006885e-41, 2.0089014784560577528762587306044e-41).y);
    vec2 _247 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _263 = unpack2xF16(pa[1].w);
    vec2 _268 = vec2(pack2xF16(vec2(_247.x, _247.y)), pack2xF16(vec2(_263.x, _263.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _268.x, _268.y);
    vec2 _275 = vec2(v_TexCoord4.x, v_TexCoord4.y);
    vec2 _283 = unpack2xF16(pa[2].x);
    vec2 _288 = vec2(pack2xF16(vec2(_275.x, _275.y)), pack2xF16(vec2(_283.x, _283.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, pa[1].z, _288.x);
    pa[2] = vec4(_288.y, pa[2].y, pa[2].z, pa[2].w);
    frag_init();
    vec4 _304 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _309 = vec2(pack2xF16(_304.xy), pack2xF16(_304.zw));
    pa[0] = vec4(_309.x, _309.y, pa[0].z, pa[0].w);
    vec4 _315 = texture(fragTex_sampler0, v_TexCoord2.xy);
    vec2 _320 = vec2(pack2xF16(_315.xy), pack2xF16(_315.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _320.x, _320.y);
    vec4 _326 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _331 = vec2(pack2xF16(_326.xy), pack2xF16(_326.zw));
    pa[1] = vec4(_331.x, _331.y, pa[1].z, pa[1].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:40:26.601] |I| [load_shader_generic]: Generating vert shader 501d5fbdd11b8897012f76402aad6375fd45455d52e96180faff6a22b190bc23
[10:40:26.604] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 501d5fbdd11b8897012f76402aad6375fd45455d52e96180faff6a22b190bc23

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[6];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _184 = sa[8];
    _184.z = sa[5].x * sa[5].z;
    sa[8] = _184;
    vec4 _199 = sa[8];
    _199.x = sa[8].z * sa[7].z;
    sa[8] = _199;
    vec4 _217 = sa[5];
    _217.z = fract(abs(sa[8].x));
    sa[5] = _217;
    vec4 _231 = internals[0];
    _231.x = sa[8].z * sa[7].y;
    internals[0] = _231;
    vec4 _249 = internals[0];
    _249.x = fract(abs(internals[0].x));
    internals[0] = _249;
    vec4 _264 = sa[5];
    _264.x = (internals[0].x * sa[7].x) + 0.0;
    sa[5] = _264;
    vec4 _273 = sa[7];
    _273.x = sa[6].w;
    sa[7] = _273;
    vec4 _276 = sa[7];
    _276.y = 2.0;
    sa[7] = _276;
    vec4 _279 = sa[7];
    _279.z = 2.0;
    sa[7] = _279;
    vec4 _289 = sa[4];
    _289.z = (0.0 - sa[5].z) * 1.0;
    sa[4] = _289;
    vec4 _299 = sa[4];
    _299.x = (0.0 - sa[5].x) * 1.0;
    sa[4] = _299;
}

void primary_program()
{
    vec2 _317 = vec2(pa[1].x, pa[1].y) * vec2(sa[6].x, sa[6].y);
    outs[4] = vec4(_317.x, _317.y, outs[4].z, outs[4].w);
    vec2 _331 = vec2(pa[0].x, pa[0].y);
    vec2 _338 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_331.x, _331.y, _338.x, _338.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _428 = pa[0];
    _428.x = 1.0 / internals[0].w;
    pa[0] = _428;
    vec4 _436 = internals[1];
    _436.x = sa[8].x;
    internals[1] = _436;
    vec4 _457 = internals[2];
    _457.x = (internals[1].x < 0.0) ? sa[4].z : sa[5].z;
    internals[2] = _457;
    vec4 _465 = internals[1];
    _465.x = sa[8].z;
    internals[1] = _465;
    vec4 _485 = pa[0];
    _485.z = (internals[1].x < 0.0) ? sa[4].x : sa[5].x;
    pa[0] = _485;
    vec4 _501 = outs[4];
    _501.y = (1.0 * outs[4].y) + (0.0 - internals[2].x);
    outs[4] = _501;
    vec2 _517 = (vec2(internals[0].x, internals[0].y) * vec2(pa[0].x, pa[0].x)) + vec2(0.0);
    internals[0] = vec4(_517.x, _517.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _538 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_538.x, _538.y, outs[0].z, outs[0].w);
    vec2 _548 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _548.x, _548.y);
    vec4 _559 = pa[0];
    _559.w = sa[5].y;
    pa[0] = _559;
    internals[0] = vec4(pa[0].z, pa[0].w, 0.0, 0.0) * vec4(1.0);
    vec2 _575 = vec2(internals[0].x, internals[0].y);
    outs[5] = vec4(_575.x, _575.y, outs[5].z, outs[5].w);
    vec2 _585 = vec2(internals[0].z, internals[0].w);
    outs[5] = vec4(outs[5].x, outs[5].y, _585.x, _585.y);
    vec2 _602 = vec2(sa[4].y, 1.0) * vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_602.x, _602.y, outs[1].z, outs[1].w);
    vec2 _614 = vec2(0.0) * vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _614.x, _614.y);
    internals[0] = vec4(sa[7].x, sa[7].x, sa[7].y, sa[7].z) * vec4(outs[4].x, outs[4].y, outs[4].x, outs[4].y);
    internals[1] = vec4(internals[0].x, internals[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _653 = vec2(internals[1].x, internals[1].y);
    outs[2] = vec4(_653.x, _653.y, outs[2].z, outs[2].w);
    vec2 _663 = vec2(internals[1].z, internals[1].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _663.x, _663.y);
    internals[0] = vec4(internals[0].z, internals[0].w, 0.0, 0.0) * vec4(1.0);
    vec2 _682 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_682.x, _682.y, outs[3].z, outs[3].w);
    vec2 _692 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _692.x, _692.y);
    vec2 _710 = vec2(sa[6].z, sa[6].z) * vec2(outs[4].x, outs[4].y);
    pa[0] = vec4(_710.x, _710.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _729 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_729.x, _729.y, outs[4].z, outs[4].w);
    vec2 _739 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _739.x, _739.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
}

void main()
{
    int i = 0;
    while (i < 6)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[6] = vec4(0.00609756074845790863037109375, 0.0500000007450580596923828125, 10.0, 3.0);
    sa[7] = vec4(vec3(0.418879032135009765625, 2.3873240947723388671875, 0.0500000007450580596923828125).x, vec3(0.418879032135009765625, 2.3873240947723388671875, 0.0500000007450580596923828125).y, vec3(0.418879032135009765625, 2.3873240947723388671875, 0.0500000007450580596923828125).z, sa[7].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:40:26.686] |E| [compile_program]: Vertex info
-----------
0(36) : warning C7050: "internals[0]" might be used before being initialized
0(36) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(38) : warning C7050: "pa[0].zw" might be used before being initialized
0(38) : warning C7050: "pa[1].xyw" might be used before being initialized
0(38) : warning C7050: "pa[2]" might be used before being initialized
0(41) : warning C7050: "r[0]" might be used before being initialized
0(41) : warning C7050: "r[1]" might be used before being initialized
0(40) : warning C7050: "internals[0]" might be used before being initialized
0(40) : warning C7050: "internals[1]" might be used before being initialized


[10:40:27.137] |E| [compile_program]: Fragment info
-------------
0(35) : warning C7050: "pa[0].zw" might be used before being initialized


[10:40:57.348] |I| [load_shader_generic]: Generating frag shader d18bf6334171e3dc1ffb1d10d60840c93db448b51dd428a6cf5fdfc4ba0edabb
[10:40:57.351] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: d18bf6334171e3dc1ffb1d10d60840c93db448b51dd428a6cf5fdfc4ba0edabb

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

vec2 unpack2xF16(float _116)
{
    return unpackHalf2x16(floatBitsToUint(_116));
}

float pack2xF16(vec2 _192)
{
    return uintBitsToFloat(packHalf2x16(_192));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack4xU8(uvec4 _400)
{
    return uintBitsToFloat(bitfieldInsert(bitfieldInsert(bitfieldInsert(bitfieldInsert(0u, _400.x, 0, 8), _400.y, 8, 8), _400.z, 16, 8), _400.w, 24, 8));
}

uvec4 unpack4xU8(float _463)
{
    uint _466 = floatBitsToUint(_463);
    return uvec4(bitfieldExtract(_466, 0, 8), bitfieldExtract(_466, 8, 8), bitfieldExtract(_466, 16, 8), bitfieldExtract(_466, 24, 8));
}

void primary_program()
{
    p[0] = unpack2xF16(sa[1].x).x > unpack2xF16(sa[2].z).x;
    if (!p[0])
    {
        vec2 _268 = unpack2xF16(pa[0].y);
        vec2 _273 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_268.x, _268.y)));
        pa[0] = vec4(_273.x, _273.y, pa[0].z, pa[0].w);
        vec2 _295 = unpack2xF16(pa[0].y);
        vec2 _300 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_295.x, _295.y)));
        pa[0] = vec4(_300.x, _300.y, pa[0].z, pa[0].w);
    }
    else
    {
        vec2 _334 = unpack2xF16(r[0].y);
        vec2 _339 = vec2(pack2xF16(vec2(fract(abs(unpack2xF16(pa[0].x).x)), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_334.x, _334.y)));
        r[0] = vec4(_339.x, _339.y, r[0].z, r[0].w);
        vec2 _363 = unpack2xF16(pa[0].y);
        vec2 _368 = vec2(pack2xF16(vec2(abs(unpack2xF16(pa[0].x).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_363.x, _363.y)));
        pa[0] = vec4(_368.x, _368.y, pa[0].z, pa[0].w);
        vec2 _379 = vec2(pa[0].x, pa[0].y);
        vec2 _381 = unpack2xF16(_379.x);
        vec2 _383 = unpack2xF16(_379.y);
        uvec4 _393 = uvec4(vec4(lessThan(vec4(_381.x, _381.y, _383.x, _383.y), vec4(0.0)))) * uvec4(255);
        vec4 _419 = pa[0];
        _419.z = pack4xU8(uvec4(_393.x, _393.y, _393.z, _393.w));
        pa[0] = _419;
        vec2 _439 = unpack2xF16(pa[0].y);
        vec2 _444 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[0].x).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_439.x, _439.y)));
        pa[0] = vec4(_444.x, _444.y, pa[0].z, pa[0].w);
        vec2 _453 = unpack2xF16(pa[0].x);
        vec2 _456 = vec2(_453.x, _453.x);
        uvec4 _473 = unpack4xU8(pa[0].z);
        vec2 _483 = vec2(r[0].x, r[0].x);
        bvec2 _486 = notEqual(uvec2(_473.x, _473.y), uvec2(0u));
        vec2 _487 = vec2(_486.x ? _456.x : _483.x, _486.y ? _456.y : _483.y);
        vec2 _495 = unpack2xF16(pa[0].y);
        vec2 _500 = vec2(pack2xF16(vec2(_487.x, _487.y)), pack2xF16(vec2(_495.x, _495.y)));
        pa[0] = vec4(_500.x, _500.y, pa[0].z, pa[0].w);
    }
    vec2 _513 = vec2(unpack2xF16(pa[0].x).x, 0.5) * vec2(1.0);
    vec2 _521 = unpack2xF16(pa[0].y);
    vec2 _526 = vec2(pack2xF16(vec2(_513.x, _513.y)), pack2xF16(vec2(_521.x, _521.y)));
    pa[0] = vec4(_526.x, _526.y, pa[0].z, pa[0].w);
    vec2 _535 = unpack2xF16(pa[0].x);
    vec4 _540 = texture(fragTex_sampler0, vec2(_535.x, _535.y));
    vec2 _549 = vec2(pack2xF16(vec2(_540.x, _540.y)), pack2xF16(vec2(_540.z, _540.w)));
    pa[0] = vec4(_549.x, _549.y, pa[0].z, pa[0].w);
    vec2 _559 = vec2(pa[0].x, pa[0].y);
    vec2 _561 = unpack2xF16(_559.x);
    vec2 _563 = unpack2xF16(_559.y);
    vec2 _575 = vec2(sa[0].z, sa[0].w);
    vec2 _577 = unpack2xF16(_575.x);
    vec2 _579 = unpack2xF16(_575.y);
    vec2 _591 = vec2(sa[0].x, sa[0].y);
    vec2 _593 = unpack2xF16(_591.x);
    vec2 _595 = unpack2xF16(_591.y);
    vec4 _602 = (vec4(_561.x, _561.y, _563.x, _563.y) * vec4(_577.x, _577.y, _579.x, _579.y)) + vec4(_593.x, _593.y, _595.x, _595.y);
    vec2 _611 = vec2(pack2xF16(vec2(_602.x, _602.y)), pack2xF16(vec2(_602.z, _602.w)));
    pa[0] = vec4(_611.x, _611.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _146)
{
    uint _149 = floatBitsToUint(_146);
    return uvec2(bitfieldExtract(_149, 0, 16), bitfieldExtract(_149, 16, 16));
}

void frag_output_finalize()
{
    vec2 _112 = vec2(pa[0].x, pa[0].y);
    vec2 _123 = unpack2xF16(_112.x);
    vec2 _125 = unpack2xF16(_112.y);
    out_color = vec4(_123.x, _123.y, _125.x, _125.y);
    vec2 _142 = vec2(pa[0].x, pa[0].y);
    uvec2 _155 = unpack2xU16(_142.x);
    uvec2 _157 = unpack2xU16(_142.y);
    out_color_ui = uvec4(_155.x, _155.y, _157.x, _157.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec2(2.0089014784560577528762587306044e-41, 2.1523944412029190209388486399333e-41).x, vec2(2.0089014784560577528762587306044e-41, 2.1523944412029190209388486399333e-41).y);
    vec2 _203 = unpack2xF16(pa[0].y);
    vec2 _208 = vec2(pack2xF16(vec2(v_TexCoord0.x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_203.x, _203.y)));
    pa[0] = vec4(_208.x, _208.y, pa[0].z, pa[0].w);
    frag_init();
    primary_program();
    frag_output_finalize();
}


[10:40:57.374] |E| [compile_program]: Vertex info
-----------
0(31) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0]" might be used before being initialized
0(37) : warning C7050: "r[0]" might be used before being initialized


[10:44:10.339] |E| [compile_program]: Fragment info
-------------
0(32) : warning C7050: "pa[0].zw" might be used before being initialized


[10:44:10.340] |I| [load_shader_generic]: Generating frag shader 1866ea61cfe0598d110abd923bb763ac60d1ecff6da50a0b0040f13a5646945b
[10:44:10.342] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 1866ea61cfe0598d110abd923bb763ac60d1ecff6da50a0b0040f13a5646945b

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

vec2 unpack2xF16(float _115)
{
    return unpackHalf2x16(floatBitsToUint(_115));
}

float pack2xF16(vec2 _191)
{
    return uintBitsToFloat(packHalf2x16(_191));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec2 _237 = vec2(sa[1].x, sa[1].y);
    vec2 _239 = unpack2xF16(_237.x);
    vec2 _241 = unpack2xF16(_237.y);
    vec4 _246 = vec4(_239.x, _239.y, _241.x, _241.y);
    vec2 _255 = vec2(pack2xF16(vec2(_246.x, _246.y)), pack2xF16(vec2(_246.z, _246.w)));
    r[0] = vec4(_255.x, _255.y, r[0].z, r[0].w);
    vec2 _265 = vec2(pa[0].x, pa[0].y);
    vec2 _267 = unpack2xF16(_265.x);
    vec2 _269 = unpack2xF16(_265.y);
    vec2 _281 = vec2(sa[0].x, sa[0].y);
    vec2 _283 = unpack2xF16(_281.x);
    vec2 _285 = unpack2xF16(_281.y);
    vec2 _297 = vec2(sa[0].z, sa[0].w);
    vec2 _299 = unpack2xF16(_297.x);
    vec2 _301 = unpack2xF16(_297.y);
    internals[0] = (vec4(_267.x, _267.y, _269.x, _269.y) * vec4(_283.x, _283.y, _285.x, _285.y)) + vec4(_299.x, _299.y, _301.x, _301.y);
    vec2 _315 = unpack2xF16(pa[0].z);
    vec2 _326 = unpack2xF16(sa[1].w);
    vec2 _336 = unpack2xF16(sa[1].w);
    vec2 _341 = (abs(vec2(_315.x, _315.x)) * (vec2(0.0) - vec2(_326.x, _326.x))) + vec2(_336.x, _336.x);
    vec2 _349 = unpack2xF16(pa[0].y);
    vec2 _354 = vec2(pack2xF16(vec2(_341.x, _341.y)), pack2xF16(vec2(_349.x, _349.y)));
    pa[0] = vec4(_354.x, _354.y, pa[0].z, pa[0].w);
    vec4 _380 = r[0];
    _380.y = pack2xF16(vec2(unpack2xF16(r[0].y).x, unpack2xF16(pa[0].x).x * internals[0].w));
    r[0] = _380;
    vec2 _399 = unpack2xF16(pa[0].y);
    vec2 _404 = vec2(pack2xF16(vec2(log(abs(internals[0].w)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_399.x, _399.y)));
    pa[0] = vec4(_404.x, _404.y, pa[0].z, pa[0].w);
    vec4 _425 = internals[1];
    _425.x = unpack2xF16(sa[2].x).x * unpack2xF16(pa[0].x).x;
    internals[1] = _425;
    vec2 _432 = vec2(r[0].x, r[0].y);
    vec2 _434 = unpack2xF16(_432.x);
    vec2 _436 = unpack2xF16(_432.y);
    vec4 _450 = internals[1];
    internals[1] = (vec4(0.0) - vec4(_434.x, _434.y, _436.x, _436.y)) + internals[0];
    vec2 _460 = unpack2xF16(pa[0].y);
    vec2 _465 = vec2(pack2xF16(vec2(exp(_450.x))), pack2xF16(vec2(_460.x, _460.y)));
    pa[0] = vec4(_465.x, _465.y, pa[0].z, pa[0].w);
    vec2 _474 = unpack2xF16(pa[0].x);
    vec2 _490 = vec2(r[0].x, r[0].y);
    vec2 _492 = unpack2xF16(_490.x);
    vec2 _494 = unpack2xF16(_490.y);
    vec4 _501 = (vec4(_474.x, _474.x, _474.x, _474.x) * internals[1]) + vec4(_492.x, _492.y, _494.x, _494.y);
    vec2 _510 = vec2(pack2xF16(vec2(_501.x, _501.y)), pack2xF16(vec2(_501.z, _501.w)));
    pa[0] = vec4(_510.x, _510.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _145)
{
    uint _148 = floatBitsToUint(_145);
    return uvec2(bitfieldExtract(_148, 0, 16), bitfieldExtract(_148, 16, 16));
}

void frag_output_finalize()
{
    vec2 _111 = vec2(pa[0].x, pa[0].y);
    vec2 _122 = unpack2xF16(_111.x);
    vec2 _124 = unpack2xF16(_111.y);
    out_color = vec4(_122.x, _122.y, _124.x, _124.y);
    vec2 _141 = vec2(pa[0].x, pa[0].y);
    uvec2 _154 = unpack2xU16(_141.x);
    uvec2 _156 = unpack2xU16(_141.y);
    out_color_ui = uvec4(_154.x, _154.y, _156.x, _156.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    vec4 _66 = sa[2];
    _66.x = 2.6546198108169334591579133225844e-41;
    sa[2] = _66;
    vec2 _202 = unpack2xF16(pa[0].w);
    vec2 _207 = vec2(pack2xF16(vec2(v_TexCoord1.x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_202.x, _202.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _207.x, _207.y);
    frag_init();
    vec4 _220 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _225 = vec2(pack2xF16(_220.xy), pack2xF16(_220.zw));
    pa[0] = vec4(_225.x, _225.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:44:10.343] |I| [load_shader_generic]: Generating vert shader d42203c5836d8030b1c462d49256d202078b2919541679793c341c814727f714
[10:44:10.346] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: d42203c5836d8030b1c462d49256d202078b2919541679793c341c814727f714

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _173 = sa[4];
    _173.x = sa[4].x * sa[4].y;
    sa[4] = _173;
    vec4 _194 = internals[0];
    _194.x = (sa[4].x * sa[7].y) + sa[7].z;
    internals[0] = _194;
    vec4 _208 = internals[0];
    _208.x = fract(internals[0].x);
    internals[0] = _208;
    vec4 _228 = internals[1];
    _228.x = (internals[0].x * sa[7].x) + sa[6].w;
    internals[1] = _228;
    vec4 _243 = sa[4];
    _243.x = (internals[1].x * internals[1].x) + 0.0;
    sa[4] = _243;
    vec4 _263 = internals[0];
    _263.x = (sa[4].x * sa[6].z) + sa[6].y;
    internals[0] = _263;
    vec4 _284 = internals[0];
    _284.x = (internals[0].x * sa[4].x) + (0.0 - sa[6].x);
    internals[0] = _284;
    vec4 _304 = internals[0];
    _304.x = (internals[0].x * sa[4].x) + sa[7].z;
    internals[0] = _304;
    vec4 _319 = internals[2];
    _319.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _319;
    vec4 _339 = internals[0];
    _339.x = (sa[4].x * sa[5].w) + sa[5].z;
    internals[0] = _339;
    vec4 _360 = internals[0];
    _360.x = (internals[0].x * sa[4].x) + (0.0 - sa[5].y);
    internals[0] = _360;
    vec4 _380 = internals[1];
    _380.x = (internals[0].x * sa[4].x) + sa[5].x;
    internals[1] = _380;
    vec4 _395 = internals[0];
    _395.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _395;
    vec4 _415 = sa[4];
    _415.z = (internals[2].x * internals[1].x) + internals[0].x;
    sa[4] = _415;
    vec2 _423 = vec2(sa[4].z, 0.0) * vec2(1.0);
    sa[5] = vec4(_423.x, _423.y, sa[5].z, sa[5].w);
    vec2 _428 = vec2(0.0) * vec2(1.0);
    sa[4] = vec4(_428.x, _428.y, sa[4].z, sa[4].w);
}

void primary_program()
{
    vec2 _441 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_441.x, _441.y, outs[1].z, outs[1].w);
    vec2 _451 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _451.x, _451.y);
    vec2 _465 = vec2(pa[0].x, pa[0].y);
    vec2 _472 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_465.x, _465.y, _472.x, _472.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _562 = internals[1];
    _562.x = 1.0 / internals[0].w;
    internals[1] = _562;
    vec2 _578 = (vec2(internals[1].x, internals[1].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_578.x, _578.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _599 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_599.x, _599.y, outs[0].z, outs[0].w);
    vec2 _609 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _609.x, _609.y);
    vec2 _619 = vec2(sa[4].x, sa[4].y);
    outs[2] = vec4(outs[2].x, outs[2].y, _619.x, _619.y);
    vec2 _629 = vec2(sa[5].x, sa[5].y);
    outs[2] = vec4(_629.x, _629.y, outs[2].z, outs[2].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(1.0, 0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05);
    sa[6] = vec4(0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875);
    sa[7] = vec4(vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).x, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).y, vec3(6.283185482025146484375, 0.15915493667125701904296875, 0.5).z, sa[7].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:44:10.367] |E| [compile_program]: Vertex info
-----------
0(33) : warning C7050: "internals[0]" might be used before being initialized
0(33) : warning C7050: "internals[1]" might be used before being initialized
0(33) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(35) : warning C7050: "pa[0]" might be used before being initialized
0(38) : warning C7050: "r[0].zw" might be used before being initialized
0(37) : warning C7050: "internals[1]" might be used before being initialized


[10:46:28.653] |I| [load_shader_generic]: Generating frag shader 0f13129ca36cde1c2a43e7050ab054d9ced83161df6698c8f5a6f9a89a95a16a
[10:46:28.658] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 0f13129ca36cde1c2a43e7050ab054d9ced83161df6698c8f5a6f9a89a95a16a

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _205)
{
    return uintBitsToFloat(packHalf2x16(_205));
}

vec2 unpack2xF16(float _133)
{
    return unpackHalf2x16(floatBitsToUint(_133));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _254 = unpack2xF16(sa[1].y);
    vec2 _263 = unpack2xF16(sa[1].x);
    vec2 _273 = unpack2xF16(sa[1].y);
    vec2 _278 = (vec2(_254.x, _254.x) * (vec2(0.0) - vec2(_263.y, _263.y))) + vec2(_273.x, _273.x);
    vec2 _286 = unpack2xF16(sa[4].w);
    vec2 _291 = vec2(pack2xF16(vec2(_278.x, _278.y)), pack2xF16(vec2(_286.x, _286.y)));
    sa[4] = vec4(sa[4].x, sa[4].y, _291.x, _291.y);
}

void primary_program()
{
    p[0] = ((0.0 - unpack2xF16(pa[0].z).x) + unpack2xF16(sa[2].z).x) >= 0.0;
    if (!p[0])
    {
        vec2 _350 = unpack2xF16(pa[0].w);
        vec2 _355 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[0].x).x) + abs(unpack2xF16(r[0].x).y), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_350.x, _350.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _355.x, _355.y);
        vec4 _376 = r[0];
        _376.y = pack2xF16(vec2(1.0 / unpack2xF16(pa[0].z).x, unpack2xF16(r[0].y).y));
        r[0] = _376;
        vec2 _404 = unpack2xF16(pa[0].w);
        vec2 _409 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + abs(unpack2xF16(r[0].x).y), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_404.x, _404.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _409.x, _409.y);
        vec2 _438 = unpack2xF16(r[0].w);
        vec2 _443 = vec2(pack2xF16(vec2(unpack2xF16(r[0].y).x * unpack2xF16(pa[0].z).x, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_438.x, _438.y)));
        r[0] = vec4(r[0].x, r[0].y, _443.x, _443.y);
        vec2 _472 = unpack2xF16(pa[0].w);
        vec2 _477 = vec2(pack2xF16(vec2(unpack2xF16(sa[4].x).x * unpack2xF16(r[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_472.x, _472.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _477.x, _477.y);
        vec2 _486 = unpack2xF16(pa[0].z);
        vec2 _495 = unpack2xF16(r[0].z);
        vec2 _504 = unpack2xF16(sa[3].w);
        vec2 _509 = (vec2(_486.x, _486.x) * vec2(_495.x, _495.x)) + vec2(_504.x, _504.x);
        vec2 _517 = unpack2xF16(pa[0].w);
        vec2 _522 = vec2(pack2xF16(vec2(_509.x, _509.y)), pack2xF16(vec2(_517.x, _517.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _522.x, _522.y);
        vec2 _531 = unpack2xF16(r[0].z);
        vec2 _540 = unpack2xF16(pa[0].z);
        vec2 _549 = unpack2xF16(sa[3].x);
        vec2 _554 = (vec2(_531.x, _531.x) * vec2(_540.x, _540.x)) + vec2(_549.x, _549.x);
        vec2 _562 = unpack2xF16(r[1].y);
        vec2 _567 = vec2(pack2xF16(vec2(_554.x, _554.y)), pack2xF16(vec2(_562.x, _562.y)));
        r[1] = vec4(_567.x, _567.y, r[1].z, r[1].w);
    }
    else
    {
        vec2 _600 = unpack2xF16(r[0].w);
        vec2 _605 = vec2(pack2xF16(vec2((0.0 - abs(unpack2xF16(r[0].x).y)) + unpack2xF16(r[0].x).x, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_600.x, _600.y)));
        r[0] = vec4(r[0].x, r[0].y, _605.x, _605.y);
        vec2 _636 = unpack2xF16(pa[0].w);
        vec2 _641 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + abs(unpack2xF16(r[0].x).y), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_636.x, _636.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _641.x, _641.y);
        vec2 _663 = unpack2xF16(pa[0].w);
        vec2 _668 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_663.x, _663.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _668.x, _668.y);
        vec2 _697 = unpack2xF16(r[0].w);
        vec2 _702 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x * unpack2xF16(pa[0].z).x, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_697.x, _697.y)));
        r[0] = vec4(r[0].x, r[0].y, _702.x, _702.y);
        vec2 _731 = unpack2xF16(pa[0].w);
        vec2 _736 = vec2(pack2xF16(vec2(unpack2xF16(sa[4].x).x * unpack2xF16(r[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_731.x, _731.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _736.x, _736.y);
        vec2 _745 = unpack2xF16(pa[0].z);
        vec2 _754 = unpack2xF16(r[0].z);
        vec2 _763 = unpack2xF16(sa[3].w);
        vec2 _768 = (vec2(_745.x, _745.x) * vec2(_754.x, _754.x)) + vec2(_763.x, _763.x);
        vec2 _776 = unpack2xF16(pa[0].w);
        vec2 _781 = vec2(pack2xF16(vec2(_768.x, _768.y)), pack2xF16(vec2(_776.x, _776.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _781.x, _781.y);
        vec2 _790 = unpack2xF16(r[0].z);
        vec2 _799 = unpack2xF16(pa[0].z);
        vec2 _808 = unpack2xF16(sa[3].y);
        vec2 _813 = (vec2(_790.x, _790.x) * vec2(_799.x, _799.x)) + vec2(_808.x, _808.x);
        vec2 _821 = unpack2xF16(r[1].y);
        vec2 _826 = vec2(pack2xF16(vec2(_813.x, _813.y)), pack2xF16(vec2(_821.x, _821.y)));
        r[1] = vec4(_826.x, _826.y, r[1].z, r[1].w);
    }
    vec2 _849 = unpack2xF16(r[0].w);
    vec2 _854 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[1].x).x) * 1.0, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_849.x, _849.y)));
    r[0] = vec4(r[0].x, r[0].y, _854.x, _854.y);
    vec2 _863 = unpack2xF16(r[0].x);
    vec2 _866 = vec2(_863.y, _863.y);
    vec2 _874 = unpack2xF16(pa[0].w);
    vec2 _879 = vec2(pack2xF16(vec2(_866.x, _866.y)), pack2xF16(vec2(_874.x, _874.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _879.x, _879.y);
    vec2 _888 = unpack2xF16(r[0].z);
    vec2 _891 = vec2(_888.x, _888.x);
    vec2 _905 = vec2(r[1].x, r[1].x);
    bvec2 _907 = lessThan(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _908 = vec2(_907.x ? _891.x : _905.x, _907.y ? _891.y : _905.y);
    vec2 _916 = unpack2xF16(r[0].w);
    vec2 _921 = vec2(pack2xF16(vec2(_908.x, _908.y)), pack2xF16(vec2(_916.x, _916.y)));
    r[0] = vec4(r[0].x, r[0].y, _921.x, _921.y);
    vec2 _950 = unpack2xF16(pa[0].w);
    vec2 _955 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].y).y * unpack2xF16(sa[2].w).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_950.x, _950.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _955.x, _955.y);
    vec2 _968 = vec2(unpack2xF16(pa[0].z).x, 1.0) * vec2(1.0);
    vec2 _976 = unpack2xF16(pa[0].w);
    vec2 _981 = vec2(pack2xF16(vec2(_968.x, _968.y)), pack2xF16(vec2(_976.x, _976.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _981.x, _981.y);
    vec2 _993 = vec2(unpack2xF16(pa[0].x).x, 0.0) * vec2(1.0);
    vec2 _1001 = unpack2xF16(pa[0].y);
    vec2 _1006 = vec2(pack2xF16(vec2(_993.x, _993.y)), pack2xF16(vec2(_1001.x, _1001.y)));
    pa[0] = vec4(_1006.x, _1006.y, pa[0].z, pa[0].w);
    vec2 _1015 = unpack2xF16(pa[0].z);
    vec2 _1024 = unpack2xF16(r[0].z);
    vec2 _1033 = unpack2xF16(pa[0].x);
    vec2 _1038 = (vec2(_1015.x, _1015.y) * vec2(_1024.x, _1024.x)) + vec2(_1033.x, _1033.y);
    vec2 _1046 = unpack2xF16(pa[0].y);
    vec2 _1051 = vec2(pack2xF16(vec2(_1038.x, _1038.y)), pack2xF16(vec2(_1046.x, _1046.y)));
    pa[0] = vec4(_1051.x, _1051.y, pa[0].z, pa[0].w);
    vec2 _1060 = unpack2xF16(pa[0].x);
    vec4 _1065 = texture(fragTex_sampler0, vec2(_1060.x, _1060.y));
    vec2 _1074 = vec2(pack2xF16(vec2(_1065.x, _1065.y)), pack2xF16(vec2(_1065.z, _1065.w)));
    r[0] = vec4(r[0].x, r[0].y, _1074.x, _1074.y);
    vec2 _1083 = unpack2xF16(r[0].x);
    vec2 _1086 = vec2(_1083.x, _1083.y);
    internals[0] = vec4(_1086.x, _1086.y, internals[0].z, internals[0].w);
    vec4 _1107 = internals[0];
    _1107.x = dot(vec3(internals[0].x, internals[0].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
    internals[0] = _1107;
    vec2 _1124 = unpack2xF16(pa[0].y);
    vec2 _1129 = vec2(pack2xF16(vec2(inversesqrt(internals[0].x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1124.x, _1124.y)));
    pa[0] = vec4(_1129.x, _1129.y, pa[0].z, pa[0].w);
    vec2 _1151 = unpack2xF16(pa[0].y);
    vec2 _1156 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1151.x, _1151.y)));
    pa[0] = vec4(_1156.x, _1156.y, pa[0].z, pa[0].w);
    vec2 _1186 = unpack2xF16(pa[0].y);
    vec2 _1191 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[3].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1186.x, _1186.y)));
    pa[0] = vec4(_1191.x, _1191.y, pa[0].z, pa[0].w);
    vec2 _1220 = unpack2xF16(pa[0].y);
    vec2 _1225 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1220.x, _1220.y)));
    pa[0] = vec4(_1225.x, _1225.y, pa[0].z, pa[0].w);
    vec2 _1254 = unpack2xF16(pa[0].y);
    vec2 _1259 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[0].y).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1254.x, _1254.y)));
    pa[0] = vec4(_1259.x, _1259.y, pa[0].z, pa[0].w);
    vec2 _1288 = unpack2xF16(pa[0].y);
    vec2 _1293 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(sa[1].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1288.x, _1288.y)));
    pa[0] = vec4(_1293.x, _1293.y, pa[0].z, pa[0].w);
    vec2 _1302 = unpack2xF16(pa[0].x);
    vec2 _1311 = unpack2xF16(sa[1].x);
    vec2 _1320 = unpack2xF16(sa[4].z);
    vec2 _1325 = (vec2(_1302.x, _1302.x) * vec2(_1311.y, _1311.y)) + vec2(_1320.x, _1320.x);
    vec2 _1333 = unpack2xF16(pa[0].y);
    vec2 _1338 = vec2(pack2xF16(vec2(_1325.x, _1325.y)), pack2xF16(vec2(_1333.x, _1333.y)));
    pa[0] = vec4(_1338.x, _1338.y, pa[0].z, pa[0].w);
    vec2 _1367 = unpack2xF16(pa[0].y);
    vec2 _1372 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[3].z).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1367.x, _1367.y)));
    pa[0] = vec4(_1372.x, _1372.y, pa[0].z, pa[0].w);
    vec2 _1394 = unpack2xF16(pa[0].y);
    vec2 _1399 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1394.x, _1394.y)));
    pa[0] = vec4(_1399.x, _1399.y, pa[0].z, pa[0].w);
    vec2 _1408 = unpack2xF16(pa[0].x);
    vec2 _1420 = vec2(sa[0].x, sa[0].y);
    vec2 _1422 = unpack2xF16(_1420.x);
    vec2 _1424 = unpack2xF16(_1420.y);
    vec2 _1436 = vec2(sa[0].z, sa[0].w);
    vec2 _1438 = unpack2xF16(_1436.x);
    vec2 _1440 = unpack2xF16(_1436.y);
    vec4 _1447 = (vec4(_1408.x, _1408.x, _1408.x, _1408.x) * vec4(_1422.x, _1422.y, _1424.x, _1424.y)) + vec4(_1438.x, _1438.y, _1440.x, _1440.y);
    vec2 _1456 = vec2(pack2xF16(vec2(_1447.x, _1447.y)), pack2xF16(vec2(_1447.z, _1447.w)));
    pa[0] = vec4(_1456.x, _1456.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _163)
{
    uint _166 = floatBitsToUint(_163);
    return uvec2(bitfieldExtract(_166, 0, 16), bitfieldExtract(_166, 16, 16));
}

void frag_output_finalize()
{
    vec2 _129 = vec2(pa[0].x, pa[0].y);
    vec2 _140 = unpack2xF16(_129.x);
    vec2 _142 = unpack2xF16(_129.y);
    out_color = vec4(_140.x, _140.y, _142.x, _142.y);
    vec2 _159 = vec2(pa[0].x, pa[0].y);
    uvec2 _172 = unpack2xU16(_159.x);
    uvec2 _174 = unpack2xU16(_159.y);
    out_color_ui = uvec4(_172.x, _172.y, _174.x, _174.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec4(3.0569732189178466796875e-05, 1.4349296274686126806258990932889e-41, 2.3213910360004919596922504276781e-41, 2.0907373087726270698182045382686e-41).x, vec4(3.0569732189178466796875e-05, 1.4349296274686126806258990932889e-41, 2.3213910360004919596922504276781e-41, 2.0907373087726270698182045382686e-41).y);
    sa[3] = vec4(vec4(3.0569732189178466796875e-05, 1.4349296274686126806258990932889e-41, 2.3213910360004919596922504276781e-41, 2.0907373087726270698182045382686e-41).z, vec4(3.0569732189178466796875e-05, 1.4349296274686126806258990932889e-41, 2.3213910360004919596922504276781e-41, 2.0907373087726270698182045382686e-41).w, sa[3].z, sa[3].w);
    sa[3] = vec4(sa[3].x, sa[3].y, vec3(2.1523944412029190209388486399333e-41, 6.7389844447844777757793079389995e-41, 1.8037513832789045336930247196108e-41).x, vec3(2.1523944412029190209388486399333e-41, 6.7389844447844777757793079389995e-41, 1.8037513832789045336930247196108e-41).y);
    sa[4] = vec4(vec3(2.1523944412029190209388486399333e-41, 6.7389844447844777757793079389995e-41, 1.8037513832789045336930247196108e-41).z, sa[4].y, sa[4].z, sa[4].w);
    vec2 _217 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_217.x, _217.y, pa[0].z, pa[0].w);
    vec2 _224 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _232 = unpack2xF16(pa[0].w);
    vec2 _237 = vec2(pack2xF16(vec2(_224.x, _224.y)), pack2xF16(vec2(_232.x, _232.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _237.x, _237.y);
    frag_init();
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:46:28.661] |I| [load_shader_generic]: Generating vert shader 26d27e6ac69f920e6fb8a774c3d6be21152d7fdf873382c23019cff274ac0f48
[10:46:28.666] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 26d27e6ac69f920e6fb8a774c3d6be21152d7fdf873382c23019cff274ac0f48

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _186 = sa[9];
    _186.x = (sa[4].x * sa[8].z) + sa[5].y;
    sa[9] = _186;
    vec4 _200 = internals[0];
    _200.x = sa[9].x + sa[8].w;
    internals[0] = _200;
    vec4 _214 = internals[0];
    _214.x = fract(internals[0].x);
    internals[0] = _214;
    vec4 _234 = internals[2];
    _234.x = (internals[0].x * sa[8].y) + sa[8].x;
    internals[2] = _234;
    vec4 _254 = internals[0];
    _254.x = (sa[4].x * sa[8].z) + sa[8].w;
    internals[0] = _254;
    vec4 _268 = internals[0];
    _268.x = fract(internals[0].x);
    internals[0] = _268;
    vec4 _288 = sa[9];
    _288.x = (internals[0].x * sa[8].y) + sa[8].x;
    sa[9] = _288;
    vec4 _303 = internals[1];
    _303.x = (internals[2].x * internals[2].x) + 0.0;
    internals[1] = _303;
    vec4 _318 = sa[10];
    _318.x = sa[9].x * sa[9].x;
    sa[10] = _318;
    vec4 _338 = internals[0];
    _338.x = (internals[1].x * sa[7].w) + sa[7].z;
    internals[0] = _338;
    vec4 _359 = internals[0];
    _359.x = (internals[0].x * internals[1].x) + (0.0 - sa[7].y);
    internals[0] = _359;
    vec4 _379 = internals[0];
    _379.x = (internals[0].x * internals[1].x) + sa[8].w;
    internals[0] = _379;
    vec4 _394 = sa[9];
    _394.z = (internals[2].x * internals[0].x) + 0.0;
    sa[9] = _394;
    vec4 _414 = internals[0];
    _414.x = (sa[10].x * sa[7].w) + sa[7].z;
    internals[0] = _414;
    vec4 _435 = internals[0];
    _435.x = (internals[0].x * sa[10].x) + (0.0 - sa[7].y);
    internals[0] = _435;
    vec4 _455 = internals[0];
    _455.x = (internals[0].x * sa[10].x) + sa[8].w;
    internals[0] = _455;
    vec4 _470 = internals[2];
    _470.x = (internals[0].x * sa[9].x) + 0.0;
    internals[2] = _470;
    vec4 _490 = internals[0];
    _490.x = (sa[10].x * sa[6].w) + sa[6].z;
    internals[0] = _490;
    vec4 _511 = internals[0];
    _511.x = (internals[0].x * sa[10].x) + (0.0 - sa[6].y);
    internals[0] = _511;
    vec4 _531 = internals[1];
    _531.x = (internals[0].x * sa[10].x) + sa[7].x;
    internals[1] = _531;
    vec4 _546 = internals[0];
    _546.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _546;
    vec4 _566 = internals[1];
    _566.x = (internals[2].x * internals[1].x) + internals[0].x;
    internals[1] = _566;
    vec4 _580 = internals[0];
    _580.x = sa[9].z * sa[9].z;
    internals[0] = _580;
    vec4 _600 = internals[0];
    _600.x = (sa[9].z * sa[9].z) + internals[0].x;
    internals[0] = _600;
    vec4 _616 = internals[0];
    _616.x = (1.0 * sa[7].x) + (0.0 - internals[0].x);
    internals[0] = _616;
    vec4 _631 = internals[0];
    _631.x = (internals[0].x * internals[1].x) + 0.0;
    internals[0] = _631;
    vec4 _646 = internals[0];
    _646.x = (internals[0].x * sa[4].y) + 0.0;
    internals[0] = _646;
    vec4 _661 = sa[9];
    _661.z = (internals[0].x * sa[5].x) + 0.0;
    sa[9] = _661;
    vec4 _675 = internals[0];
    _675.x = sa[4].x * sa[6].x;
    internals[0] = _675;
    vec4 _693 = internals[0];
    _693.x = fract(abs(internals[0].x));
    internals[0] = _693;
    vec4 _708 = sa[9];
    _708.x = (internals[0].x * sa[5].w) + 0.0;
    sa[9] = _708;
    vec4 _722 = internals[0];
    _722.x = sa[4].x * sa[5].z;
    internals[0] = _722;
    vec4 _742 = internals[0];
    _742.x = (internals[0].x * sa[8].z) + sa[8].w;
    internals[0] = _742;
    vec4 _756 = internals[0];
    _756.x = fract(internals[0].x);
    internals[0] = _756;
    vec4 _776 = internals[1];
    _776.x = (internals[0].x * sa[8].y) + sa[8].x;
    internals[1] = _776;
    vec4 _791 = sa[5];
    _791.x = (internals[1].x * internals[1].x) + 0.0;
    sa[5] = _791;
    vec4 _811 = internals[0];
    _811.x = (sa[5].x * sa[7].w) + sa[7].z;
    internals[0] = _811;
    vec4 _832 = internals[0];
    _832.x = (internals[0].x * sa[5].x) + (0.0 - sa[7].y);
    internals[0] = _832;
    vec4 _852 = internals[0];
    _852.x = (internals[0].x * sa[5].x) + sa[8].w;
    internals[0] = _852;
    vec4 _867 = internals[2];
    _867.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _867;
    vec4 _887 = internals[0];
    _887.x = (sa[5].x * sa[6].w) + sa[6].z;
    internals[0] = _887;
    vec4 _908 = internals[0];
    _908.x = (internals[0].x * sa[5].x) + (0.0 - sa[6].y);
    internals[0] = _908;
    vec4 _928 = internals[1];
    _928.x = (internals[0].x * sa[5].x) + sa[7].x;
    internals[1] = _928;
    vec4 _943 = internals[0];
    _943.x = (internals[2].x * internals[2].x) + 0.0;
    internals[0] = _943;
    vec4 _963 = internals[0];
    _963.x = (internals[2].x * internals[2].x) + internals[0].x;
    internals[0] = _963;
    vec4 _979 = sa[6];
    _979.x = (1.0 * sa[7].x) + (0.0 - internals[0].x);
    sa[6] = _979;
    vec4 _994 = internals[0];
    _994.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _994;
    vec4 _1014 = sa[5];
    _1014.z = (internals[2].x * internals[1].x) + internals[0].x;
    sa[5] = _1014;
    vec4 _1024 = sa[5];
    _1024.x = (0.0 - sa[9].x) * 1.0;
    sa[5] = _1024;
}

void primary_program()
{
    vec2 _1034 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_1034.x, _1034.y, outs[1].z, outs[1].w);
    vec2 _1044 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _1044.x, _1044.y);
    vec2 _1058 = vec2(pa[0].x, pa[0].y);
    vec2 _1065 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_1058.x, _1058.y, _1065.x, _1065.y);
    vec2 _1087 = (vec2(internals[0].x, internals[0].y) * vec2(sa[6].x, sa[6].x)) + vec2(0.0);
    pa[0] = vec4(_1087.x, _1087.y, pa[0].z, pa[0].w);
    vec4 _1111 = internals[2];
    _1111.x = (internals[0].y * (0.0 - sa[5].z)) + pa[0].x;
    internals[2] = _1111;
    vec4 _1131 = internals[1];
    _1131.x = (internals[0].x * sa[5].z) + pa[0].y;
    internals[1] = _1131;
    internals[2] = sa[0] * vec4(internals[2].x, internals[2].x, internals[2].x, internals[2].x);
    internals[1] = (vec4(internals[1].x, internals[1].x, internals[1].x, internals[1].x) * sa[1]) + internals[2];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _1215 = internals[2];
    _1215.x = 1.0 / internals[0].w;
    internals[2] = _1215;
    vec4 _1224 = internals[1];
    _1224.x = sa[4].x;
    internals[1] = _1224;
    vec4 _1245 = internals[1];
    _1245.x = (internals[1].x < 0.0) ? sa[5].x : sa[9].x;
    internals[1] = _1245;
    vec2 _1261 = (vec2(internals[2].x, internals[2].x) * vec2(internals[0].x, internals[0].y)) + vec2(0.0);
    internals[0] = vec4(_1261.x, _1261.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _1282 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_1282.x, _1282.y, outs[0].z, outs[0].w);
    vec2 _1292 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _1292.x, _1292.y);
    vec4 _1303 = outs[2];
    _1303.x = sa[9].z;
    outs[2] = _1303;
    vec4 _1311 = outs[2];
    _1311.y = internals[1].x;
    outs[2] = _1311;
    vec2 _1318 = vec2(sa[4].w, sa[4].z);
    outs[2] = vec4(outs[2].x, outs[2].y, _1318.x, _1318.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(0.0199999995529651641845703125, -0.749985754489898681640625, 0.4000000059604644775390625, 15.70796298980712890625);
    sa[6] = vec4(0.06366197764873504638671875, 0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05);
    sa[7] = vec4(1.0, 0.02083333395421504974365234375, 0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06);
    sa[8] = vec4(-3.1415927410125732421875, 6.283185482025146484375, 0.15915493667125701904296875, 0.5);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:46:28.720] |E| [compile_program]: Vertex info
-----------
0(33) : warning C7050: "internals[0]" might be used before being initialized
0(33) : warning C7050: "internals[1]" might be used before being initialized
0(33) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(35) : warning C7050: "pa[0].zw" might be used before being initialized
0(38) : warning C7050: "r[0]" might be used before being initialized
0(38) : warning C7050: "r[1].yzw" might be used before being initialized
0(37) : warning C7050: "internals[0].zw" might be used before being initialized


[10:46:46.252] |I| [load_shader_generic]: Generating frag shader 0e607aeebe7ee47ef676682725c74e0501bb92260c1ef26133865843b5c7734f
[10:46:46.265] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 0e607aeebe7ee47ef676682725c74e0501bb92260c1ef26133865843b5c7734f

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _271)
{
    return uintBitsToFloat(packHalf2x16(_271));
}

vec2 unpack2xF16(float _197)
{
    return unpackHalf2x16(floatBitsToUint(_197));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _315 = unpack2xF16(sa[0].x);
    vec2 _324 = unpack2xF16(sa[9].w);
    vec2 _333 = unpack2xF16(sa[9].z);
    vec2 _338 = (vec2(_315.x, _315.x) * vec2(_324.x, _324.x)) + vec2(_333.x, _333.x);
    vec2 _346 = unpack2xF16(sa[9].w);
    vec2 _351 = vec2(pack2xF16(vec2(_338.x, _338.y)), pack2xF16(vec2(_346.x, _346.y)));
    sa[9] = vec4(sa[9].x, sa[9].y, _351.x, _351.y);
    vec2 _382 = unpack2xF16(sa[14].w);
    vec2 _387 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(sa[9].z).x) + unpack2xF16(sa[12].x).x, unpack2xF16(sa[14].z).y)), pack2xF16(vec2(_382.x, _382.y)));
    sa[14] = vec4(sa[14].x, sa[14].y, _387.x, _387.y);
    vec2 _397 = vec2(sa[0].x, sa[0].y);
    vec2 _413 = vec2(unpack2xF16(_397.x).y, unpack2xF16(_397.y).x) * vec2(unpack2xF16(sa[1].z).x, 1.0);
    vec2 _430 = vec2(pack2xF16(vec2(_413.x, unpack2xF16(sa[9].z).y)), pack2xF16(vec2(unpack2xF16(sa[9].w).x, _413.y)));
    sa[9] = vec4(sa[9].x, sa[9].y, _430.x, _430.y);
    vec2 _440 = vec2(sa[9].z, sa[9].w);
    vec2 _453 = unpack2xF16(sa[11].z);
    vec2 _457 = vec2(unpack2xF16(_440.x).x, unpack2xF16(_440.y).y) * vec2(_453.x, _453.x);
    vec2 _465 = unpack2xF16(sa[14].y);
    vec2 _470 = vec2(pack2xF16(vec2(_457.x, _457.y)), pack2xF16(vec2(_465.x, _465.y)));
    sa[14] = vec4(_470.x, _470.y, sa[14].z, sa[14].w);
    vec2 _499 = unpack2xF16(sa[0].y);
    vec2 _504 = vec2(pack2xF16(vec2(unpack2xF16(sa[1].z).x * unpack2xF16(sa[11].w).x, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_499.x, _499.y)));
    sa[0] = vec4(_504.x, _504.y, sa[0].z, sa[0].w);
    vec2 _517 = vec2(unpack2xF16(sa[1].z).x, 1.0) * vec2(1.0);
    vec2 _525 = unpack2xF16(sa[9].w);
    vec2 _530 = vec2(pack2xF16(vec2(_517.x, _517.y)), pack2xF16(vec2(_525.x, _525.y)));
    sa[9] = vec4(sa[9].x, sa[9].y, _530.x, _530.y);
    vec2 _542 = vec2(unpack2xF16(sa[0].x).x, 0.5) * vec2(1.0);
    vec2 _550 = unpack2xF16(sa[12].w);
    vec2 _555 = vec2(pack2xF16(vec2(_542.x, _542.y)), pack2xF16(vec2(_550.x, _550.y)));
    sa[12] = vec4(sa[12].x, sa[12].y, _555.x, _555.y);
    vec2 _565 = vec2(sa[0].x, sa[0].y);
    vec2 _578 = unpack2xF16(sa[9].z);
    vec2 _589 = unpack2xF16(sa[12].z);
    vec2 _594 = (vec2(unpack2xF16(_565.x).y, unpack2xF16(_565.y).x) * (vec2(0.0) - vec2(_578.x, _578.y))) + vec2(_589.x, _589.y);
    internals[1] = vec4(_594.x, _594.y, internals[1].z, internals[1].w);
    vec4 _615 = internals[1];
    _615.x = dot(vec3(internals[1].x, internals[1].y, 0.0), vec3(internals[1].x, internals[1].y, 1.0));
    internals[1] = _615;
    vec2 _632 = unpack2xF16(sa[0].y);
    vec2 _637 = vec2(pack2xF16(vec2(inversesqrt(internals[1].x), unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_632.x, _632.y)));
    sa[0] = vec4(_637.x, _637.y, sa[0].z, sa[0].w);
    vec2 _659 = unpack2xF16(sa[0].y);
    vec2 _664 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(sa[0].x).x, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_659.x, _659.y)));
    sa[0] = vec4(_664.x, _664.y, sa[0].z, sa[0].w);
    vec2 _673 = unpack2xF16(sa[0].x);
    vec2 _682 = unpack2xF16(sa[8].z);
    vec2 _691 = unpack2xF16(sa[12].x);
    vec2 _696 = (vec2(_673.x, _673.x) * vec2(_682.x, _682.x)) + vec2(_691.x, _691.x);
    vec2 _704 = unpack2xF16(sa[8].w);
    vec2 _709 = vec2(pack2xF16(vec2(_696.x, _696.y)), pack2xF16(vec2(_704.x, _704.y)));
    sa[8] = vec4(sa[8].x, sa[8].y, _709.x, _709.y);
    vec2 _739 = unpack2xF16(sa[13].w);
    vec2 _744 = vec2(pack2xF16(vec2(unpack2xF16(sa[8].z).x * unpack2xF16(sa[14].z).x, unpack2xF16(sa[13].z).y)), pack2xF16(vec2(_739.x, _739.y)));
    sa[13] = vec4(sa[13].x, sa[13].y, _744.x, _744.y);
    vec2 _766 = unpack2xF16(sa[0].y);
    vec2 _771 = vec2(pack2xF16(vec2(max(unpack2xF16(sa[14].z).x, 0.0), unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_766.x, _766.y)));
    sa[0] = vec4(_771.x, _771.y, sa[0].z, sa[0].w);
    vec2 _793 = unpack2xF16(sa[0].y);
    vec2 _798 = vec2(pack2xF16(vec2(log(unpack2xF16(sa[0].x).x), unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_793.x, _793.y)));
    sa[0] = vec4(_798.x, _798.y, sa[0].z, sa[0].w);
    vec2 _827 = unpack2xF16(sa[0].y);
    vec2 _832 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].x).x * unpack2xF16(sa[6].y).x, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_827.x, _827.y)));
    sa[0] = vec4(_832.x, _832.y, sa[0].z, sa[0].w);
    vec2 _854 = unpack2xF16(sa[0].y);
    vec2 _859 = vec2(pack2xF16(vec2(exp(unpack2xF16(sa[0].x).x), unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_854.x, _854.y)));
    sa[0] = vec4(_859.x, _859.y, sa[0].z, sa[0].w);
    vec2 _889 = unpack2xF16(sa[0].y);
    vec2 _894 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(sa[0].x).x) + unpack2xF16(sa[12].x).x, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_889.x, _889.y)));
    sa[0] = vec4(_894.x, _894.y, sa[0].z, sa[0].w);
    vec2 _923 = unpack2xF16(sa[0].y);
    vec2 _928 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].x).x * unpack2xF16(sa[0].y).y, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_923.x, _923.y)));
    sa[0] = vec4(_928.x, _928.y, sa[0].z, sa[0].w);
    vec2 _950 = unpack2xF16(sa[13].y);
    vec2 _955 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(sa[1].z).x, unpack2xF16(sa[13].x).y)), pack2xF16(vec2(_950.x, _950.y)));
    sa[13] = vec4(_955.x, _955.y, sa[13].z, sa[13].w);
    vec2 _970 = unpack2xF16(sa[13].y);
    vec2 _975 = vec2(pack2xF16(vec2(unpack2xF16(sa[13].x).x, 1.0 / 1.0)), pack2xF16(vec2(_970.x, _970.y)));
    sa[13] = vec4(_975.x, _975.y, sa[13].z, sa[13].w);
    vec2 _984 = unpack2xF16(sa[6].x);
    vec2 _993 = unpack2xF16(sa[14].z);
    vec2 _997 = vec2(_984.x, _984.x) + vec2(_993.x, _993.x);
    vec2 _1005 = unpack2xF16(sa[12].w);
    vec2 _1010 = vec2(pack2xF16(vec2(_997.x, _997.y)), pack2xF16(vec2(_1005.x, _1005.y)));
    sa[12] = vec4(sa[12].x, sa[12].y, _1010.x, _1010.y);
    vec2 _1019 = unpack2xF16(sa[5].w);
    vec2 _1028 = unpack2xF16(sa[14].z);
    vec2 _1032 = vec2(_1019.x, _1019.x) + vec2(_1028.x, _1028.x);
    vec2 _1040 = unpack2xF16(sa[8].w);
    vec2 _1045 = vec2(pack2xF16(vec2(_1032.x, _1032.y)), pack2xF16(vec2(_1040.x, _1040.y)));
    sa[8] = vec4(sa[8].x, sa[8].y, _1045.x, _1045.y);
    vec2 _1054 = unpack2xF16(sa[1].y);
    vec2 _1057 = vec2(_1054.x, _1054.y);
    vec2 _1065 = unpack2xF16(sa[6].y);
    vec2 _1070 = vec2(pack2xF16(vec2(_1057.x, _1057.y)), pack2xF16(vec2(_1065.x, _1065.y)));
    sa[6] = vec4(_1070.x, _1070.y, sa[6].z, sa[6].w);
}

void primary_program()
{
    vec2 _1090 = unpack2xF16(pa[0].z);
    vec2 _1094 = vec2(unpack2xF16(sa[1].z).x, 1.0) * vec2(_1090.x, _1090.y);
    vec2 _1102 = unpack2xF16(r[0].w);
    vec2 _1107 = vec2(pack2xF16(vec2(_1094.x, _1094.y)), pack2xF16(vec2(_1102.x, _1102.y)));
    r[0] = vec4(r[0].x, r[0].y, _1107.x, _1107.y);
    vec2 _1116 = unpack2xF16(r[0].z);
    vec2 _1125 = unpack2xF16(sa[11].z);
    vec2 _1135 = unpack2xF16(sa[14].x);
    vec2 _1140 = (vec2(_1116.x, _1116.y) * (vec2(0.0) - vec2(_1125.x, _1125.x))) + vec2(_1135.x, _1135.y);
    internals[1] = vec4(_1140.x, _1140.y, internals[1].z, internals[1].w);
    vec4 _1161 = internals[1];
    _1161.x = dot(vec3(internals[1].x, internals[1].y, 0.0), vec3(internals[1].x, internals[1].y, 1.0));
    internals[1] = _1161;
    vec4 _1177 = pa[0];
    _1177.y = pack2xF16(vec2(inversesqrt(internals[1].x), unpack2xF16(pa[0].y).y));
    pa[0] = _1177;
    vec4 _1195 = pa[0];
    _1195.y = pack2xF16(vec2(1.0 / unpack2xF16(pa[0].y).x, unpack2xF16(pa[0].y).y));
    pa[0] = _1195;
    vec2 _1201 = unpack2xF16(pa[0].y);
    vec2 _1210 = unpack2xF16(sa[9].y);
    vec2 _1220 = unpack2xF16(sa[9].x);
    vec2 _1225 = (vec2(_1201.x, _1201.x) * (vec2(0.0) - vec2(_1210.x, _1210.x))) + vec2(_1220.x, _1220.x);
    vec2 _1233 = unpack2xF16(r[0].y);
    vec2 _1238 = vec2(pack2xF16(vec2(_1225.x, _1225.y)), pack2xF16(vec2(_1233.x, _1233.y)));
    r[0] = vec4(_1238.x, _1238.y, r[0].z, r[0].w);
    vec2 _1260 = unpack2xF16(r[0].y);
    vec2 _1265 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(r[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1260.x, _1260.y)));
    r[0] = vec4(_1265.x, _1265.y, r[0].z, r[0].w);
    vec2 _1294 = unpack2xF16(pa[0].y);
    vec2 _1299 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(sa[8].w).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1294.x, _1294.y)));
    pa[0] = vec4(_1299.x, _1299.y, pa[0].z, pa[0].w);
    vec4 _1311 = pa[0];
    _1311.y = sa[8].y;
    pa[0] = _1311;
    vec2 _1317 = unpack2xF16(pa[0].y);
    vec2 _1326 = unpack2xF16(sa[13].z);
    vec2 _1335 = unpack2xF16(pa[0].x);
    vec2 _1341 = (vec2(_1317.x, _1317.x) * vec2(_1326.x, _1326.x)) + (vec2(0.0) - vec2(_1335.x, _1335.x));
    vec2 _1349 = unpack2xF16(pa[0].y);
    vec2 _1354 = vec2(pack2xF16(vec2(_1341.x, _1341.y)), pack2xF16(vec2(_1349.x, _1349.y)));
    pa[0] = vec4(_1354.x, _1354.y, pa[0].z, pa[0].w);
    vec2 _1376 = unpack2xF16(pa[0].y);
    vec2 _1381 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1376.x, _1376.y)));
    pa[0] = vec4(_1381.x, _1381.y, pa[0].z, pa[0].w);
    vec2 _1410 = unpack2xF16(pa[0].y);
    vec2 _1415 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1410.x, _1410.y)));
    pa[0] = vec4(_1415.x, _1415.y, pa[0].z, pa[0].w);
    vec2 _1444 = unpack2xF16(pa[0].y);
    vec2 _1449 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[8].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1444.x, _1444.y)));
    pa[0] = vec4(_1449.x, _1449.y, pa[0].z, pa[0].w);
    vec2 _1478 = unpack2xF16(r[2].y);
    vec2 _1483 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, unpack2xF16(sa[7].w).x), unpack2xF16(r[2].x).y)), pack2xF16(vec2(_1478.x, _1478.y)));
    r[2] = vec4(_1483.x, _1483.y, r[2].z, r[2].w);
    vec2 _1493 = vec2(sa[0].x, sa[0].y);
    vec2 _1495 = unpack2xF16(_1493.x);
    vec2 _1497 = unpack2xF16(_1493.y);
    vec4 _1502 = vec4(_1495.x, _1495.y, _1497.x, _1497.y);
    vec2 _1511 = vec2(pack2xF16(vec2(_1502.x, _1502.y)), pack2xF16(vec2(_1502.z, _1502.w)));
    r[1] = vec4(_1511.x, _1511.y, r[1].z, r[1].w);
    vec2 _1521 = vec2(r[1].x, r[1].y);
    vec2 _1534 = unpack2xF16(sa[9].z);
    vec2 _1544 = unpack2xF16(r[0].z);
    vec2 _1549 = (vec2(unpack2xF16(_1521.x).y, unpack2xF16(_1521.y).x) * (vec2(0.0) - vec2(_1534.x, _1534.y))) + vec2(_1544.x, _1544.y);
    internals[2] = vec4(_1549.x, _1549.y, internals[2].z, internals[2].w);
    vec2 _1578 = unpack2xF16(pa[0].y);
    vec2 _1583 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].z).x * unpack2xF16(r[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1578.x, _1578.y)));
    pa[0] = vec4(_1583.x, _1583.y, pa[0].z, pa[0].w);
    vec2 _1592 = unpack2xF16(pa[0].x);
    vec2 _1601 = unpack2xF16(sa[11].y);
    vec2 _1610 = unpack2xF16(sa[11].w);
    vec2 _1615 = (vec2(_1592.x, _1592.x) * vec2(_1601.x, _1601.x)) + vec2(_1610.x, _1610.x);
    vec2 _1623 = unpack2xF16(pa[0].y);
    vec2 _1628 = vec2(pack2xF16(vec2(_1615.x, _1615.y)), pack2xF16(vec2(_1623.x, _1623.y)));
    pa[0] = vec4(_1628.x, _1628.y, pa[0].z, pa[0].w);
    vec2 _1657 = unpack2xF16(pa[0].y);
    vec2 _1662 = vec2(pack2xF16(vec2(fract(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1657.x, _1657.y)));
    pa[0] = vec4(_1662.x, _1662.y, pa[0].z, pa[0].w);
    vec2 _1671 = unpack2xF16(pa[0].x);
    vec2 _1680 = unpack2xF16(sa[11].x);
    vec2 _1689 = unpack2xF16(sa[10].w);
    vec2 _1694 = (vec2(_1671.x, _1671.x) * vec2(_1680.x, _1680.x)) + vec2(_1689.x, _1689.x);
    vec2 _1702 = unpack2xF16(r[0].y);
    vec2 _1707 = vec2(pack2xF16(vec2(_1694.x, _1694.y)), pack2xF16(vec2(_1702.x, _1702.y)));
    r[0] = vec4(_1707.x, _1707.y, r[0].z, r[0].w);
    vec2 _1736 = unpack2xF16(r[1].y);
    vec2 _1741 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(r[0].x).x, unpack2xF16(r[1].x).y)), pack2xF16(vec2(_1736.x, _1736.y)));
    r[1] = vec4(_1741.x, _1741.y, r[1].z, r[1].w);
    vec2 _1750 = unpack2xF16(r[1].x);
    vec2 _1759 = unpack2xF16(sa[10].z);
    vec2 _1768 = unpack2xF16(sa[10].y);
    vec2 _1773 = (vec2(_1750.x, _1750.x) * vec2(_1759.x, _1759.x)) + vec2(_1768.x, _1768.x);
    vec2 _1781 = unpack2xF16(pa[0].y);
    vec2 _1786 = vec2(pack2xF16(vec2(_1773.x, _1773.y)), pack2xF16(vec2(_1781.x, _1781.y)));
    pa[0] = vec4(_1786.x, _1786.y, pa[0].z, pa[0].w);
    vec2 _1795 = unpack2xF16(r[1].x);
    vec2 _1804 = unpack2xF16(pa[0].x);
    vec2 _1813 = unpack2xF16(sa[10].x);
    vec2 _1819 = (vec2(_1795.x, _1795.x) * vec2(_1804.x, _1804.x)) + (vec2(0.0) - vec2(_1813.x, _1813.x));
    vec2 _1827 = unpack2xF16(pa[0].y);
    vec2 _1832 = vec2(pack2xF16(vec2(_1819.x, _1819.y)), pack2xF16(vec2(_1827.x, _1827.y)));
    pa[0] = vec4(_1832.x, _1832.y, pa[0].z, pa[0].w);
    vec2 _1841 = unpack2xF16(r[1].x);
    vec2 _1850 = unpack2xF16(pa[0].x);
    vec2 _1859 = unpack2xF16(sa[11].w);
    vec2 _1864 = (vec2(_1841.x, _1841.x) * vec2(_1850.x, _1850.x)) + vec2(_1859.x, _1859.x);
    vec2 _1872 = unpack2xF16(pa[0].y);
    vec2 _1877 = vec2(pack2xF16(vec2(_1864.x, _1864.y)), pack2xF16(vec2(_1872.x, _1872.y)));
    pa[0] = vec4(_1877.x, _1877.y, pa[0].z, pa[0].w);
    vec2 _1906 = unpack2xF16(r[0].w);
    vec2 _1911 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(r[0].x).x, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_1906.x, _1906.y)));
    r[0] = vec4(r[0].x, r[0].y, _1911.x, _1911.y);
    vec2 _1920 = unpack2xF16(r[1].x);
    vec2 _1929 = unpack2xF16(sa[7].z);
    vec2 _1938 = unpack2xF16(sa[7].y);
    vec2 _1943 = (vec2(_1920.x, _1920.x) * vec2(_1929.x, _1929.x)) + vec2(_1938.x, _1938.x);
    vec2 _1951 = unpack2xF16(pa[0].y);
    vec2 _1956 = vec2(pack2xF16(vec2(_1943.x, _1943.y)), pack2xF16(vec2(_1951.x, _1951.y)));
    pa[0] = vec4(_1956.x, _1956.y, pa[0].z, pa[0].w);
    vec2 _1965 = unpack2xF16(pa[0].x);
    vec2 _1974 = unpack2xF16(r[1].x);
    vec2 _1983 = unpack2xF16(sa[7].x);
    vec2 _1989 = (vec2(_1965.x, _1965.x) * vec2(_1974.x, _1974.x)) + (vec2(0.0) - vec2(_1983.x, _1983.x));
    vec2 _1997 = unpack2xF16(pa[0].y);
    vec2 _2002 = vec2(pack2xF16(vec2(_1989.x, _1989.y)), pack2xF16(vec2(_1997.x, _1997.y)));
    pa[0] = vec4(_2002.x, _2002.y, pa[0].z, pa[0].w);
    vec2 _2011 = unpack2xF16(pa[0].x);
    vec2 _2020 = unpack2xF16(r[1].x);
    vec2 _2029 = unpack2xF16(sa[12].x);
    vec2 _2034 = (vec2(_2011.x, _2011.x) * vec2(_2020.x, _2020.x)) + vec2(_2029.x, _2029.x);
    vec2 _2042 = unpack2xF16(pa[0].y);
    vec2 _2047 = vec2(pack2xF16(vec2(_2034.x, _2034.y)), pack2xF16(vec2(_2042.x, _2042.y)));
    pa[0] = vec4(_2047.x, _2047.y, pa[0].z, pa[0].w);
    vec2 _2068 = unpack2xF16(r[0].w);
    vec2 _2073 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2068.x, _2068.y)));
    r[0] = vec4(r[0].x, r[0].y, _2073.x, _2073.y);
    vec2 _2082 = unpack2xF16(r[0].z);
    vec2 _2091 = unpack2xF16(r[0].z);
    vec2 _2095 = vec2(_2082.x, _2082.y) * vec2(_2091.x, _2091.x);
    vec2 _2103 = unpack2xF16(r[0].y);
    vec2 _2108 = vec2(pack2xF16(vec2(_2095.x, _2095.y)), pack2xF16(vec2(_2103.x, _2103.y)));
    r[0] = vec4(_2108.x, _2108.y, r[0].z, r[0].w);
    vec2 _2117 = unpack2xF16(r[0].z);
    vec2 _2126 = unpack2xF16(r[0].z);
    vec2 _2135 = unpack2xF16(r[0].x);
    vec2 _2140 = (vec2(_2117.x, _2117.x) * vec2(_2126.x, _2126.x)) + vec2(_2135.x, _2135.x);
    vec2 _2148 = unpack2xF16(pa[0].y);
    vec2 _2153 = vec2(pack2xF16(vec2(_2140.x, _2140.y)), pack2xF16(vec2(_2148.x, _2148.y)));
    pa[0] = vec4(_2153.x, _2153.y, pa[0].z, pa[0].w);
    vec4 _2175 = internals[1];
    _2175.x = (0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[12].x).x;
    internals[1] = _2175;
    vec4 _2201 = internals[0];
    _2201.x = (unpack2xF16(r[0].z).x * unpack2xF16(r[0].z).y) + unpack2xF16(r[0].x).y;
    internals[0] = _2201;
    vec4 _2215 = internals[1];
    vec4 _2224 = internals[2];
    vec4 _2226 = vec4(_2215.x, _2215.x, _2215.x, _2215.x) * _2224;
    vec4 _2229 = internals[0];
    _2229.x = internals[1].x * internals[0].x;
    internals[0] = _2229;
    vec2 _2238 = vec2(pack2xF16(vec2(_2226.x, _2226.y)), pack2xF16(vec2(_2226.z, _2226.w)));
    pa[0] = vec4(_2238.x, _2238.y, pa[0].z, pa[0].w);
    vec2 _2261 = unpack2xF16(pa[0].x);
    vec2 _2266 = (vec2(internals[2].x, internals[2].x) * vec2(internals[0].x, internals[0].x)) + vec2(_2261.y, _2261.y);
    vec2 _2274 = unpack2xF16(r[0].y);
    vec2 _2279 = vec2(pack2xF16(vec2(_2266.x, _2266.y)), pack2xF16(vec2(_2274.x, _2274.y)));
    r[0] = vec4(_2279.x, _2279.y, r[0].z, r[0].w);
    vec2 _2303 = unpack2xF16(pa[0].x);
    vec2 _2308 = (vec2(internals[2].y, internals[2].y) * (vec2(0.0) - vec2(internals[0].x, internals[0].x))) + vec2(_2303.x, _2303.x);
    vec2 _2316 = unpack2xF16(pa[0].y);
    vec2 _2321 = vec2(pack2xF16(vec2(_2308.x, _2308.y)), pack2xF16(vec2(_2316.x, _2316.y)));
    pa[0] = vec4(_2321.x, _2321.y, pa[0].z, pa[0].w);
    vec2 _2342 = unpack2xF16(r[0].y);
    vec2 _2347 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_2342.x, _2342.y)));
    r[0] = vec4(_2347.x, _2347.y, r[0].z, r[0].w);
    vec2 _2357 = vec2(r[1].x, r[1].y);
    vec2 _2370 = unpack2xF16(sa[9].z);
    vec2 _2379 = unpack2xF16(r[0].x);
    vec2 _2384 = (vec2(unpack2xF16(_2357.x).y, unpack2xF16(_2357.y).x) * vec2(_2370.x, _2370.y)) + vec2(_2379.x, _2379.y);
    vec2 _2392 = unpack2xF16(r[0].y);
    vec2 _2397 = vec2(pack2xF16(vec2(_2384.x, _2384.y)), pack2xF16(vec2(_2392.x, _2392.y)));
    r[0] = vec4(_2397.x, _2397.y, r[0].z, r[0].w);
    vec2 _2406 = unpack2xF16(r[0].x);
    vec4 _2411 = texture(fragTex_sampler2, vec2(_2406.x, _2406.y));
    vec2 _2420 = vec2(pack2xF16(vec2(_2411.x, _2411.y)), pack2xF16(vec2(_2411.z, _2411.w)));
    pa[0] = vec4(_2420.x, _2420.y, pa[0].z, pa[0].w);
    vec2 _2429 = unpack2xF16(pa[0].x);
    vec2 _2438 = unpack2xF16(sa[6].w);
    vec2 _2447 = unpack2xF16(sa[6].z);
    vec2 _2452 = (vec2(_2429.x, _2429.x) * vec2(_2438.x, _2438.x)) + vec2(_2447.x, _2447.x);
    vec2 _2460 = unpack2xF16(pa[0].y);
    vec2 _2465 = vec2(pack2xF16(vec2(_2452.x, _2452.y)), pack2xF16(vec2(_2460.x, _2460.y)));
    pa[0] = vec4(_2465.x, _2465.y, pa[0].z, pa[0].w);
    vec2 _2494 = unpack2xF16(pa[0].y);
    vec2 _2499 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].x).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2494.x, _2494.y)));
    pa[0] = vec4(_2499.x, _2499.y, pa[0].z, pa[0].w);
    vec2 _2528 = unpack2xF16(pa[0].y);
    vec2 _2533 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(r[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2528.x, _2528.y)));
    pa[0] = vec4(_2533.x, _2533.y, pa[0].z, pa[0].w);
    vec2 _2542 = unpack2xF16(r[0].x);
    vec2 _2551 = unpack2xF16(sa[13].x);
    vec2 _2560 = unpack2xF16(pa[0].x);
    vec2 _2565 = (vec2(_2542.x, _2542.y) * vec2(_2551.x, _2551.y)) + vec2(_2560.x, _2560.x);
    vec2 _2573 = unpack2xF16(r[0].y);
    vec2 _2578 = vec2(pack2xF16(vec2(_2565.x, _2565.y)), pack2xF16(vec2(_2573.x, _2573.y)));
    r[0] = vec4(_2578.x, _2578.y, r[0].z, r[0].w);
    vec2 _2587 = unpack2xF16(r[0].x);
    vec2 _2592 = (vec2(0.0) - vec2(_2587.x, _2587.y)) + vec2(1.0);
    vec2 _2600 = unpack2xF16(pa[0].y);
    vec2 _2605 = vec2(pack2xF16(vec2(_2592.x, _2592.y)), pack2xF16(vec2(_2600.x, _2600.y)));
    pa[0] = vec4(_2605.x, _2605.y, pa[0].z, pa[0].w);
    vec2 _2614 = unpack2xF16(r[0].x);
    vec2 _2623 = unpack2xF16(pa[0].x);
    vec2 _2627 = min(vec2(_2614.x, _2614.y), vec2(_2623.x, _2623.y));
    vec2 _2635 = unpack2xF16(pa[0].y);
    vec2 _2640 = vec2(pack2xF16(vec2(_2627.x, _2627.y)), pack2xF16(vec2(_2635.x, _2635.y)));
    pa[0] = vec4(_2640.x, _2640.y, pa[0].z, pa[0].w);
    vec2 _2649 = unpack2xF16(pa[0].x);
    vec2 _2653 = max(vec2(_2649.x, _2649.y), vec2(0.0));
    vec2 _2661 = unpack2xF16(pa[0].y);
    vec2 _2666 = vec2(pack2xF16(vec2(_2653.x, _2653.y)), pack2xF16(vec2(_2661.x, _2661.y)));
    pa[0] = vec4(_2666.x, _2666.y, pa[0].z, pa[0].w);
    vec2 _2695 = unpack2xF16(pa[0].y);
    vec2 _2700 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).y, unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2695.x, _2695.y)));
    pa[0] = vec4(_2700.x, _2700.y, pa[0].z, pa[0].w);
    vec2 _2723 = unpack2xF16(pa[0].y);
    vec2 _2728 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2723.x, _2723.y)));
    pa[0] = vec4(_2728.x, _2728.y, pa[0].z, pa[0].w);
    vec2 _2751 = unpack2xF16(r[1].w);
    vec2 _2756 = vec2(pack2xF16(vec2(0.0 - floor(unpack2xF16(pa[0].x).x), unpack2xF16(r[1].z).y)), pack2xF16(vec2(_2751.x, _2751.y)));
    r[1] = vec4(r[1].x, r[1].y, _2756.x, _2756.y);
    vec2 _2765 = unpack2xF16(r[0].x);
    vec2 _2774 = unpack2xF16(sa[1].x);
    vec2 _2783 = unpack2xF16(sa[6].x);
    vec2 _2788 = (vec2(_2765.x, _2765.y) * vec2(_2774.x, _2774.y)) + vec2(_2783.x, _2783.y);
    vec2 _2796 = unpack2xF16(pa[0].y);
    vec2 _2801 = vec2(pack2xF16(vec2(_2788.x, _2788.y)), pack2xF16(vec2(_2796.x, _2796.y)));
    pa[0] = vec4(_2801.x, _2801.y, pa[0].z, pa[0].w);
    vec2 _2810 = unpack2xF16(pa[0].x);
    vec4 _2815 = texture(fragTex_sampler1, vec2(_2810.x, _2810.y));
    vec2 _2824 = vec2(pack2xF16(vec2(_2815.x, _2815.y)), pack2xF16(vec2(_2815.z, _2815.w)));
    r[0] = vec4(r[0].x, r[0].y, _2824.x, _2824.y);
    vec2 _2833 = unpack2xF16(pa[0].z);
    vec2 _2842 = unpack2xF16(sa[1].x);
    vec2 _2851 = unpack2xF16(sa[6].x);
    vec2 _2856 = (vec2(_2833.x, _2833.y) * vec2(_2842.x, _2842.y)) + vec2(_2851.x, _2851.y);
    vec2 _2864 = unpack2xF16(pa[0].y);
    vec2 _2869 = vec2(pack2xF16(vec2(_2856.x, _2856.y)), pack2xF16(vec2(_2864.x, _2864.y)));
    pa[0] = vec4(_2869.x, _2869.y, pa[0].z, pa[0].w);
    vec2 _2878 = unpack2xF16(pa[0].x);
    vec4 _2883 = texture(fragTex_sampler0, vec2(_2878.x, _2878.y));
    vec2 _2892 = vec2(pack2xF16(vec2(_2883.x, _2883.y)), pack2xF16(vec2(_2883.z, _2883.w)));
    r[1] = vec4(_2892.x, _2892.y, r[1].z, r[1].w);
    vec2 _2901 = unpack2xF16(sa[12].z);
    vec2 _2910 = unpack2xF16(r[0].x);
    vec2 _2914 = vec2(_2901.x, _2901.y) + vec2(_2910.x, _2910.y);
    vec2 _2922 = unpack2xF16(pa[0].w);
    vec2 _2927 = vec2(pack2xF16(vec2(_2914.x, _2914.y)), pack2xF16(vec2(_2922.x, _2922.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _2927.x, _2927.y);
    vec2 _2936 = unpack2xF16(r[0].x);
    vec2 _2946 = unpack2xF16(sa[8].z);
    vec2 _2950 = (vec2(0.0) - vec2(_2936.x, _2936.y)) + vec2(_2946.x, _2946.y);
    vec2 _2958 = unpack2xF16(pa[0].y);
    vec2 _2963 = vec2(pack2xF16(vec2(_2950.x, _2950.y)), pack2xF16(vec2(_2958.x, _2958.y)));
    pa[0] = vec4(_2963.x, _2963.y, pa[0].z, pa[0].w);
    vec2 _2972 = unpack2xF16(pa[0].x);
    vec2 _2981 = unpack2xF16(pa[0].z);
    vec2 _2985 = max(vec2(_2972.x, _2972.y), vec2(_2981.x, _2981.y));
    vec2 _2993 = unpack2xF16(pa[0].y);
    vec2 _2998 = vec2(pack2xF16(vec2(_2985.x, _2985.y)), pack2xF16(vec2(_2993.x, _2993.y)));
    pa[0] = vec4(_2998.x, _2998.y, pa[0].z, pa[0].w);
    vec2 _3007 = unpack2xF16(pa[0].x);
    vec2 _3011 = max(vec2(_3007.x, _3007.y), vec2(0.0));
    vec2 _3019 = unpack2xF16(pa[0].y);
    vec2 _3024 = vec2(pack2xF16(vec2(_3011.x, _3011.y)), pack2xF16(vec2(_3019.x, _3019.y)));
    pa[0] = vec4(_3024.x, _3024.y, pa[0].z, pa[0].w);
    vec2 _3053 = unpack2xF16(pa[0].y);
    vec2 _3058 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3053.x, _3053.y)));
    pa[0] = vec4(_3058.x, _3058.y, pa[0].z, pa[0].w);
    vec2 _3088 = unpack2xF16(pa[0].y);
    vec2 _3093 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[12].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3088.x, _3088.y)));
    pa[0] = vec4(_3093.x, _3093.y, pa[0].z, pa[0].w);
    vec2 _3115 = unpack2xF16(pa[0].y);
    vec2 _3120 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3115.x, _3115.y)));
    pa[0] = vec4(_3120.x, _3120.y, pa[0].z, pa[0].w);
    vec2 _3142 = unpack2xF16(pa[0].y);
    vec2 _3147 = vec2(pack2xF16(vec2(log(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3142.x, _3142.y)));
    pa[0] = vec4(_3147.x, _3147.y, pa[0].z, pa[0].w);
    vec4 _3168 = internals[0];
    _3168.x = unpack2xF16(pa[0].x).x * unpack2xF16(sa[5].z).x;
    internals[0] = _3168;
    vec2 _3196 = unpack2xF16(pa[0].y);
    vec2 _3201 = vec2(pack2xF16(vec2(abs(unpack2xF16(r[2].x).x) * unpack2xF16(r[1].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3196.x, _3196.y)));
    pa[0] = vec4(_3201.x, _3201.y, pa[0].z, pa[0].w);
    vec4 _3215 = internals[1];
    _3215.x = max(unpack2xF16(pa[0].x).x, 0.0);
    internals[1] = _3215;
    vec4 _3231 = internals[1];
    vec4 _3237 = internals[2];
    _3237.x = exp(internals[0].x);
    internals[2] = _3237;
    vec2 _3243 = unpack2xF16(pa[0].y);
    vec2 _3248 = vec2(pack2xF16(vec2(unpack2xF16(sa[11].w).x * _3231.x)), pack2xF16(vec2(_3243.x, _3243.y)));
    pa[0] = vec4(_3248.x, _3248.y, pa[0].z, pa[0].w);
    vec2 _3277 = unpack2xF16(pa[0].y);
    vec2 _3282 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_3277.x, _3277.y)));
    pa[0] = vec4(_3282.x, _3282.y, pa[0].z, pa[0].w);
    vec2 _3291 = unpack2xF16(pa[0].x);
    vec2 _3303 = vec2(sa[2].x, sa[2].y);
    vec2 _3305 = unpack2xF16(_3303.x);
    vec2 _3307 = unpack2xF16(_3303.y);
    vec2 _3319 = vec2(r[0].z, r[0].w);
    vec2 _3321 = unpack2xF16(_3319.x);
    vec2 _3323 = unpack2xF16(_3319.y);
    vec4 _3330 = (vec4(_3291.x, _3291.x, _3291.x, _3291.x) * vec4(_3305.x, _3305.y, _3307.x, _3307.y)) + vec4(_3321.x, _3321.y, _3323.x, _3323.y);
    vec2 _3339 = vec2(pack2xF16(vec2(_3330.x, _3330.y)), pack2xF16(vec2(_3330.z, _3330.w)));
    pa[0] = vec4(_3339.x, _3339.y, pa[0].z, pa[0].w);
    vec4 _3352 = vec4(1.0, 1.0, 1.0, unpack2xF16(r[0].w).y) * vec4(1.0);
    vec2 _3361 = vec2(pack2xF16(vec2(_3352.x, _3352.y)), pack2xF16(vec2(_3352.z, _3352.w)));
    r[0] = vec4(_3361.x, _3361.y, r[0].z, r[0].w);
    vec2 _3371 = vec2(pa[0].x, pa[0].y);
    vec2 _3373 = unpack2xF16(_3371.x);
    vec4 _3380 = vec4(_3373.x, _3373.y, unpack2xF16(_3371.y).x, 1.0) * vec4(1.0);
    vec2 _3389 = vec2(pack2xF16(vec2(_3380.x, _3380.y)), pack2xF16(vec2(_3380.z, _3380.w)));
    pa[0] = vec4(_3389.x, _3389.y, pa[0].z, pa[0].w);
    vec2 _3399 = vec2(r[0].x, r[0].y);
    vec2 _3401 = unpack2xF16(_3399.x);
    vec2 _3403 = unpack2xF16(_3399.y);
    vec2 _3415 = vec2(pa[0].x, pa[0].y);
    vec2 _3417 = unpack2xF16(_3415.x);
    vec2 _3419 = unpack2xF16(_3415.y);
    vec2 _3431 = vec2(r[1].x, r[1].y);
    vec2 _3433 = unpack2xF16(_3431.x);
    vec2 _3435 = unpack2xF16(_3431.y);
    vec4 _3443 = (vec4(_3401.x, _3401.y, _3403.x, _3403.y) * vec4(_3417.x, _3417.y, _3419.x, _3419.y)) + (vec4(0.0) - vec4(_3433.x, _3433.y, _3435.x, _3435.y));
    vec2 _3452 = vec2(pack2xF16(vec2(_3443.x, _3443.y)), pack2xF16(vec2(_3443.z, _3443.w)));
    pa[0] = vec4(_3452.x, _3452.y, pa[0].z, pa[0].w);
    vec2 _3471 = vec2(pa[0].x, pa[0].y);
    vec2 _3473 = unpack2xF16(_3471.x);
    vec2 _3475 = unpack2xF16(_3471.y);
    vec4 _3481 = vec4(internals[2].x, internals[2].x, internals[2].x, internals[2].x) * vec4(_3473.x, _3473.y, _3475.x, _3475.y);
    vec2 _3490 = vec2(pack2xF16(vec2(_3481.x, _3481.y)), pack2xF16(vec2(_3481.z, _3481.w)));
    pa[0] = vec4(_3490.x, _3490.y, pa[0].z, pa[0].w);
    vec2 _3499 = unpack2xF16(r[1].z);
    vec2 _3511 = vec2(pa[0].x, pa[0].y);
    vec2 _3513 = unpack2xF16(_3511.x);
    vec2 _3515 = unpack2xF16(_3511.y);
    vec2 _3527 = vec2(r[1].x, r[1].y);
    vec2 _3529 = unpack2xF16(_3527.x);
    vec2 _3531 = unpack2xF16(_3527.y);
    vec4 _3538 = (vec4(_3499.x, _3499.x, _3499.x, _3499.x) * vec4(_3513.x, _3513.y, _3515.x, _3515.y)) + vec4(_3529.x, _3529.y, _3531.x, _3531.y);
    vec2 _3547 = vec2(pack2xF16(vec2(_3538.x, _3538.y)), pack2xF16(vec2(_3538.z, _3538.w)));
    pa[0] = vec4(_3547.x, _3547.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _227)
{
    uint _230 = floatBitsToUint(_227);
    return uvec2(bitfieldExtract(_230, 0, 16), bitfieldExtract(_230, 16, 16));
}

void frag_output_finalize()
{
    vec2 _193 = vec2(pa[0].x, pa[0].y);
    vec2 _204 = unpack2xF16(_193.x);
    vec2 _206 = unpack2xF16(_193.y);
    out_color = vec4(_204.x, _204.y, _206.x, _206.y);
    vec2 _223 = vec2(pa[0].x, pa[0].y);
    uvec2 _236 = unpack2xU16(_223.x);
    uvec2 _238 = unpack2xU16(_223.y);
    out_color_ui = uvec4(_236.x, _236.y, _238.x, _238.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[5] = vec4(sa[5].x, sa[5].y, vec4(2.58287332944350282512661836792e-41, 4.3411762035762977221531322413739e-19, -0.00722455047070980072021484375, 2.4393803666966415570640284585911e-41).x, vec4(2.58287332944350282512661836792e-41, 4.3411762035762977221531322413739e-19, -0.00722455047070980072021484375, 2.4393803666966415570640284585911e-41).y);
    sa[6] = vec4(vec4(2.58287332944350282512661836792e-41, 4.3411762035762977221531322413739e-19, -0.00722455047070980072021484375, 2.4393803666966415570640284585911e-41).z, vec4(2.58287332944350282512661836792e-41, 4.3411762035762977221531322413739e-19, -0.00722455047070980072021484375, 2.4393803666966415570640284585911e-41).w, sa[6].z, sa[6].w);
    sa[6] = vec4(sa[6].x, sa[6].y, vec4(6.0744887130016495207472753706035e-41, 1.6262068678489502108069881814079e-41, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).x, vec4(6.0744887130016495207472753706035e-41, 1.6262068678489502108069881814079e-41, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).y);
    sa[7] = vec4(vec4(6.0744887130016495207472753706035e-41, 1.6262068678489502108069881814079e-41, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).z, vec4(6.0744887130016495207472753706035e-41, 1.6262068678489502108069881814079e-41, 1.7219155529623352167510789119466e-41, 9.0874205411464387049403863476351e-42).w, sa[7].z, sa[7].w);
    sa[7] = vec4(sa[7].x, sa[7].y, vec4(4.6427820720009839193845008553562e-41, 7.2105213780297787201451429437766e-41, 2.6187465701302181421422658452522e-41, 2.6546198108169334591579133225844e-41).x, vec4(4.6427820720009839193845008553562e-41, 7.2105213780297787201451429437766e-41, 2.6187465701302181421422658452522e-41, 2.6546198108169334591579133225844e-41).y);
    sa[8] = vec4(vec4(4.6427820720009839193845008553562e-41, 7.2105213780297787201451429437766e-41, 2.6187465701302181421422658452522e-41, 2.6546198108169334591579133225844e-41).z, vec4(4.6427820720009839193845008553562e-41, 7.2105213780297787201451429437766e-41, 2.6187465701302181421422658452522e-41, 2.6546198108169334591579133225844e-41).w, sa[8].z, sa[8].w);
    sa[8] = vec4(sa[8].x, sa[8].y, vec4(2.1567384664423259538587122016415e-41, 6.6006762863556183308791358291288e-41, 2.4770752953869791362718767843816e-41, 2.6205682581338404043344666937105e-41).x, vec4(2.1567384664423259538587122016415e-41, 6.6006762863556183308791358291288e-41, 2.4770752953869791362718767843816e-41, 2.6205682581338404043344666937105e-41).y);
    sa[9] = vec4(vec4(2.1567384664423259538587122016415e-41, 6.6006762863556183308791358291288e-41, 2.4770752953869791362718767843816e-41, 2.6205682581338404043344666937105e-41).z, vec4(2.1567384664423259538587122016415e-41, 6.6006762863556183308791358291288e-41, 2.4770752953869791362718767843816e-41, 2.6205682581338404043344666937105e-41).w, sa[9].z, sa[9].w);
    sa[9] = vec4(sa[9].x, sa[9].y, vec4(6.3021997134544322947723814278881e-41, 2.1811210597215777708927850963908e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42).x, vec4(6.3021997134544322947723814278881e-41, 2.1811210597215777708927850963908e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42).y);
    sa[10] = vec4(vec4(6.3021997134544322947723814278881e-41, 2.1811210597215777708927850963908e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42).z, vec4(6.3021997134544322947723814278881e-41, 2.1811210597215777708927850963908e-41, 1.3392209423552276746818083627502e-41, 4.4000771779799256027005108915303e-42).w, sa[10].z, sa[10].w);
    sa[10] = vec4(sa[10].x, sa[10].y, vec4(4.595418183906805102387278795441e-41, 6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41).x, vec4(4.595418183906805102387278795441e-41, 6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41).y);
    sa[11] = vec4(vec4(4.595418183906805102387278795441e-41, 6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41).z, vec4(4.595418183906805102387278795441e-41, 6.9694980421659101839462614554507e-41, 2.5212161970132108740059742662552e-41, 1.7611519099634300947369433402788e-41).w, sa[11].z, sa[11].w);
    sa[11] = vec4(sa[11].x, sa[11].y, vec3(8.015869140625, 2.0089014784560577528762587306044e-41, 2.1523944412029190209388486399333e-41).x, vec3(8.015869140625, 2.0089014784560577528762587306044e-41, 2.1523944412029190209388486399333e-41).y);
    sa[12] = vec4(vec3(8.015869140625, 2.0089014784560577528762587306044e-41, 2.1523944412029190209388486399333e-41).z, sa[12].y, sa[12].z, sa[12].w);
    vec2 _266 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _282 = unpack2xF16(pa[0].w);
    vec2 _287 = vec2(pack2xF16(vec2(_266.x, _266.y)), pack2xF16(vec2(_282.x, _282.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _287.x, _287.y);
    frag_init();
    vec4 _299 = texture(fragTex_sampler2, v_TexCoord0.xy);
    vec2 _304 = vec2(pack2xF16(_299.xy), pack2xF16(_299.zw));
    pa[0] = vec4(_304.x, _304.y, pa[0].z, pa[0].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:46:46.377] |E| [compile_program]: Fragment info
-------------
0(36) : warning C7050: "pa[0].xyw" might be used before being initialized
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[1].zw" might be used before being initialized
0(38) : warning C7050: "internals[2].zw" might be used before being initialized
0(39) : warning C7050: "r[0].xyw" might be used before being initialized
0(39) : warning C7050: "r[1].zw" might be used before being initialized
0(39) : warning C7050: "r[2]" might be used before being initialized


[10:47:20.159] |I| [do_trophy_callback]: Trophy unlocked, name: Vous en faites une tête !, detail: Accès au monde des morts, id = 15
[10:47:58.522] |I| [load_shader_generic]: Generating frag shader fdd626a91f5ba0857bef0ce48288a3a0e5f36dafa66678ade6695766ba90bc57
[10:47:58.525] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: fdd626a91f5ba0857bef0ce48288a3a0e5f36dafa66678ade6695766ba90bc57

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 7) in vec4 v_TexCoord3;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 9) in vec4 v_TexCoord5;
layout(location = 11) in vec4 v_TexCoord7;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _193)
{
    return uintBitsToFloat(packHalf2x16(_193));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _121)
{
    return unpackHalf2x16(floatBitsToUint(_121));
}

void primary_program()
{
    vec2 _294 = vec2(pa[0].z, pa[0].w);
    vec2 _296 = unpack2xF16(_294.x);
    vec2 _298 = unpack2xF16(_294.y);
    vec2 _309 = unpack2xF16(sa[0].z);
    vec4 _315 = vec4(_296.x, _296.y, _298.x, _298.y) * vec4(_309.x, _309.x, _309.x, _309.x);
    vec2 _324 = vec2(pack2xF16(vec2(_315.x, _315.y)), pack2xF16(vec2(_315.z, _315.w)));
    r[0] = vec4(_324.x, _324.y, r[0].z, r[0].w);
    vec2 _333 = unpack2xF16(pa[0].y);
    vec2 _336 = vec2(_333.x, _333.y);
    vec2 _344 = unpack2xF16(pa[0].y);
    vec2 _349 = vec2(pack2xF16(vec2(_336.x, _336.y)), pack2xF16(vec2(_344.x, _344.y)));
    pa[0] = vec4(_349.x, _349.y, pa[0].z, pa[0].w);
    vec2 _358 = unpack2xF16(pa[0].x);
    vec4 _363 = texture(fragTex_sampler1, vec2(_358.x, _358.y));
    vec2 _372 = vec2(pack2xF16(vec2(_363.x, _363.y)), pack2xF16(vec2(_363.z, _363.w)));
    pa[0] = vec4(_372.x, _372.y, pa[0].z, pa[0].w);
    vec2 _401 = unpack2xF16(pa[1].y);
    vec2 _406 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[1].z).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_401.x, _401.y)));
    pa[1] = vec4(_406.x, _406.y, pa[1].z, pa[1].w);
    vec2 _415 = unpack2xF16(pa[1].y);
    vec2 _418 = vec2(_415.x, _415.y);
    vec2 _426 = unpack2xF16(pa[0].y);
    vec2 _431 = vec2(pack2xF16(vec2(_418.x, _418.y)), pack2xF16(vec2(_426.x, _426.y)));
    pa[0] = vec4(_431.x, _431.y, pa[0].z, pa[0].w);
    vec2 _440 = unpack2xF16(pa[0].x);
    vec4 _445 = texture(fragTex_sampler1, vec2(_440.x, _440.y));
    vec2 _454 = vec2(pack2xF16(vec2(_445.x, _445.y)), pack2xF16(vec2(_445.z, _445.w)));
    pa[0] = vec4(_454.x, _454.y, pa[0].z, pa[0].w);
    vec2 _483 = unpack2xF16(pa[1].y);
    vec2 _488 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].x).x, unpack2xF16(pa[0].x).x * unpack2xF16(pa[2].z).x)), pack2xF16(vec2(_483.x, _483.y)));
    pa[1] = vec4(_488.x, _488.y, pa[1].z, pa[1].w);
    vec2 _497 = unpack2xF16(pa[2].y);
    vec2 _500 = vec2(_497.x, _497.y);
    vec2 _508 = unpack2xF16(pa[0].y);
    vec2 _513 = vec2(pack2xF16(vec2(_500.x, _500.y)), pack2xF16(vec2(_508.x, _508.y)));
    pa[0] = vec4(_513.x, _513.y, pa[0].z, pa[0].w);
    vec2 _522 = unpack2xF16(pa[0].x);
    vec4 _527 = texture(fragTex_sampler1, vec2(_522.x, _522.y));
    vec2 _536 = vec2(pack2xF16(vec2(_527.x, _527.y)), pack2xF16(vec2(_527.z, _527.w)));
    pa[0] = vec4(_536.x, _536.y, pa[0].z, pa[0].w);
    vec2 _565 = unpack2xF16(pa[0].y);
    vec2 _570 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[3].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_565.x, _565.y)));
    pa[0] = vec4(_570.x, _570.y, pa[0].z, pa[0].w);
    vec2 _599 = unpack2xF16(pa[0].y);
    vec2 _604 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].y).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_599.x, _599.y)));
    pa[0] = vec4(_604.x, _604.y, pa[0].z, pa[0].w);
    vec2 _626 = unpack2xF16(pa[1].w);
    vec2 _631 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, 1.0), unpack2xF16(pa[1].z).y)), pack2xF16(vec2(_626.x, _626.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _631.x, _631.y);
    vec2 _640 = unpack2xF16(sa[2].y);
    vec2 _649 = unpack2xF16(pa[1].x);
    vec2 _653 = vec2(_640.x, _640.x) * vec2(_649.x, _649.y);
    vec2 _661 = unpack2xF16(pa[0].y);
    vec2 _666 = vec2(pack2xF16(vec2(_653.x, _653.y)), pack2xF16(vec2(_661.x, _661.y)));
    pa[0] = vec4(_666.x, _666.y, pa[0].z, pa[0].w);
    vec2 _688 = unpack2xF16(pa[0].y);
    vec2 _693 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, 1.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_688.x, _688.y)));
    pa[0] = vec4(_693.x, _693.y, pa[0].z, pa[0].w);
    vec2 _715 = unpack2xF16(pa[0].y);
    vec2 _720 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_715.x, _715.y)));
    pa[0] = vec4(_720.x, _720.y, pa[0].z, pa[0].w);
    vec2 _742 = unpack2xF16(pa[1].w);
    vec2 _747 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].z).x, min(unpack2xF16(pa[0].x).y, 1.0))), pack2xF16(vec2(_742.x, _742.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _747.x, _747.y);
    vec2 _756 = unpack2xF16(pa[1].z);
    vec2 _760 = max(vec2(_756.x, _756.y), vec2(0.0));
    vec2 _768 = unpack2xF16(pa[1].y);
    vec2 _773 = vec2(pack2xF16(vec2(_760.x, _760.y)), pack2xF16(vec2(_768.x, _768.y)));
    pa[1] = vec4(_773.x, _773.y, pa[1].z, pa[1].w);
    vec2 _802 = unpack2xF16(pa[0].y);
    vec2 _807 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(pa[1].x).y, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_802.x, _802.y)));
    pa[0] = vec4(_807.x, _807.y, pa[0].z, pa[0].w);
    vec2 _836 = unpack2xF16(pa[0].y);
    vec2 _841 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(pa[1].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_836.x, _836.y)));
    pa[0] = vec4(_841.x, _841.y, pa[0].z, pa[0].w);
    vec2 _870 = unpack2xF16(pa[0].y);
    vec2 _875 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_870.x, _870.y)));
    pa[0] = vec4(_875.x, _875.y, pa[0].z, pa[0].w);
    vec2 _897 = unpack2xF16(pa[0].y);
    vec2 _902 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_897.x, _897.y)));
    pa[0] = vec4(_902.x, _902.y, pa[0].z, pa[0].w);
    vec2 _911 = unpack2xF16(pa[0].x);
    vec2 _920 = unpack2xF16(sa[0].x);
    vec2 _929 = unpack2xF16(r[0].y);
    vec2 _934 = (vec2(_911.x, _911.x) * vec2(_920.y, _920.y)) + vec2(_929.y, _929.y);
    vec2 _942 = unpack2xF16(pa[1].y);
    vec2 _947 = vec2(pack2xF16(vec2(_934.x, _934.y)), pack2xF16(vec2(_942.x, _942.y)));
    pa[1] = vec4(_947.x, _947.y, pa[1].z, pa[1].w);
    vec4 _960 = vec4(1.0, 1.0, 1.0, unpack2xF16(pa[1].x).x) * vec4(1.0);
    vec2 _969 = vec2(pack2xF16(vec2(_960.x, _960.y)), pack2xF16(vec2(_960.z, _960.w)));
    pa[0] = vec4(_969.x, _969.y, pa[0].z, pa[0].w);
    vec2 _979 = vec2(pa[0].z, pa[0].w);
    vec2 _981 = unpack2xF16(_979.x);
    vec2 _983 = unpack2xF16(_979.y);
    vec2 _994 = unpack2xF16(sa[0].z);
    vec2 _1007 = vec2(pa[0].x, pa[0].y);
    vec2 _1009 = unpack2xF16(_1007.x);
    vec2 _1011 = unpack2xF16(_1007.y);
    vec4 _1018 = (vec4(_981.x, _981.y, _983.x, _983.y) * (vec4(0.0) - vec4(_994.x, _994.x, _994.x, _994.x))) + vec4(_1009.x, _1009.y, _1011.x, _1011.y);
    vec2 _1027 = vec2(pack2xF16(vec2(_1018.x, _1018.y)), pack2xF16(vec2(_1018.z, _1018.w)));
    pa[0] = vec4(_1027.x, _1027.y, pa[0].z, pa[0].w);
    vec2 _1037 = vec2(pa[0].x, pa[0].y);
    vec2 _1039 = unpack2xF16(_1037.x);
    vec2 _1041 = unpack2xF16(_1037.y);
    vec2 _1052 = unpack2xF16(pa[1].x);
    vec2 _1064 = vec2(r[0].x, r[0].y);
    vec2 _1066 = unpack2xF16(_1064.x);
    vec2 _1068 = unpack2xF16(_1064.y);
    vec4 _1075 = (vec4(_1039.x, _1039.y, _1041.x, _1041.y) * vec4(_1052.x, _1052.x, _1052.x, _1052.x)) + vec4(_1066.x, _1066.y, _1068.x, _1068.y);
    vec2 _1084 = vec2(pack2xF16(vec2(_1075.x, _1075.y)), pack2xF16(vec2(_1075.z, _1075.w)));
    pa[0] = vec4(_1084.x, _1084.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _151)
{
    uint _154 = floatBitsToUint(_151);
    return uvec2(bitfieldExtract(_154, 0, 16), bitfieldExtract(_154, 16, 16));
}

void frag_output_finalize()
{
    vec2 _117 = vec2(pa[0].x, pa[0].y);
    vec2 _128 = unpack2xF16(_117.x);
    vec2 _130 = unpack2xF16(_117.y);
    out_color = vec4(_128.x, _128.y, _130.x, _130.y);
    vec2 _147 = vec2(pa[0].x, pa[0].y);
    uvec2 _160 = unpack2xU16(_147.x);
    uvec2 _162 = unpack2xU16(_147.y);
    out_color_ui = uvec4(_160.x, _160.y, _162.x, _162.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(vec2(2.1523944412029190209388486399333e-41, 2.3676338853232109230327335039266e-41).x, vec2(2.1523944412029190209388486399333e-41, 2.3676338853232109230327335039266e-41).y, sa[2].z, sa[2].w);
    vec2 _205 = vec2(pack2xF16(vec2(v_TexCoord3.x, v_TexCoord3.y)), pack2xF16(vec2(v_TexCoord3.z, v_TexCoord3.w)));
    pa[0] = vec4(_205.x, _205.y, pa[0].z, pa[0].w);
    vec2 _218 = vec2(pack2xF16(vec2(v_TexCoord4.x, v_TexCoord4.y)), pack2xF16(vec2(v_TexCoord4.z, v_TexCoord4.w)));
    pa[1] = vec4(_218.x, _218.y, pa[1].z, pa[1].w);
    vec2 _231 = vec2(pack2xF16(vec2(v_TexCoord5.x, v_TexCoord5.y)), pack2xF16(vec2(v_TexCoord5.z, v_TexCoord5.w)));
    pa[2] = vec4(_231.x, _231.y, pa[2].z, pa[2].w);
    frag_init();
    vec4 _244 = texture(fragTex_sampler2, v_TexCoord7.xy);
    vec2 _249 = vec2(pack2xF16(_244.xy), pack2xF16(_244.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _249.x, _249.y);
    vec4 _255 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _260 = vec2(pack2xF16(_255.xy), pack2xF16(_255.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _260.x, _260.y);
    vec4 _266 = texture(fragTex_sampler0, v_TexCoord4.xy);
    vec2 _271 = vec2(pack2xF16(_266.xy), pack2xF16(_266.zw));
    pa[2] = vec4(pa[2].x, pa[2].y, _271.x, _271.y);
    vec4 _277 = texture(fragTex_sampler0, v_TexCoord5.xy);
    vec2 _282 = vec2(pack2xF16(_277.xy), pack2xF16(_277.zw));
    pa[3] = vec4(_282.x, _282.y, pa[3].z, pa[3].w);
    primary_program();
    frag_output_finalize();
}


[10:47:58.527] |I| [load_shader_generic]: Generating vert shader 2c2c84a72e97293e47c3425d7f26c6246f2b103337d8262b66c3d3743c97b976
[10:47:58.528] |C| [store]: Trying to store int to float storage
[10:47:58.534] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 2c2c84a72e97293e47c3425d7f26c6246f2b103337d8262b66c3d3743c97b976

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[10];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
layout(location = 11) out vec4 v_TexCoord7;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _229 = sa[19];
    _229.x = 1.0;
    sa[19] = _229;
    vec4 _240 = internals[1];
    _240.x = 1.0 / abs(sa[5].y);
    internals[1] = _240;
    vec4 _255 = sa[7];
    _255.w = (internals[1].x * sa[8].x) + 0.0;
    sa[7] = _255;
    vec4 _272 = internals[0];
    _272.x = (0.0 - sa[8].x) + abs(sa[5].y);
    internals[0] = _272;
    vec4 _287 = sa[5];
    _287.w = (internals[1].x * internals[0].x) + 0.0;
    sa[5] = _287;
    vec4 _305 = sa[18];
    _305.z = (0.0 - sa[8].x) + abs(sa[4].x);
    sa[18] = _305;
    vec2 _320 = vec2(sa[7].x, sa[7].y) * vec2(sa[16].y, sa[16].y);
    sa[18] = vec4(_320.x, _320.y, sa[18].z, sa[18].w);
    vec4 _338 = internals[0];
    _338.x = sa[9].x * sa[16].x;
    internals[0] = _338;
    vec4 _356 = internals[0];
    _356.x = fract(abs(internals[0].x));
    internals[0] = _356;
    vec4 _371 = sa[9];
    _371.z = (internals[0].x * sa[15].w) + 0.0;
    sa[9] = _371;
    vec4 _385 = internals[0];
    _385.x = sa[9].x * sa[15].z;
    internals[0] = _385;
    vec4 _403 = internals[0];
    _403.x = fract(abs(internals[0].x));
    internals[0] = _403;
    vec4 _418 = sa[8];
    _418.z = (internals[0].x * sa[15].y) + 0.0;
    sa[8] = _418;
    vec4 _432 = internals[0];
    _432.x = sa[9].x * sa[15].x;
    internals[0] = _432;
    vec4 _450 = internals[0];
    _450.x = fract(abs(internals[0].x));
    internals[0] = _450;
    vec4 _465 = sa[7];
    _465.z = (internals[0].x * sa[14].w) + 0.0;
    sa[7] = _465;
    vec4 _474 = sa[5];
    _474.z = 1.0 / sa[9].y;
    sa[5] = _474;
    vec4 _483 = sa[4];
    _483.z = sa[14].y;
    sa[4] = _483;
    vec4 _491 = sa[4];
    _491.w = sa[13].w;
    sa[4] = _491;
    vec4 _499 = sa[6];
    _499.z = sa[13].y;
    sa[6] = _499;
    vec4 _507 = sa[6];
    _507.w = sa[12].w;
    sa[6] = _507;
    vec4 _515 = sa[7];
    _515.x = sa[12].w;
    sa[7] = _515;
    vec4 _520 = sa[15];
    _520.x = uintBitsToFloat(3472883712u);
    sa[15] = _520;
}

float pack4xU8(uvec4 _636)
{
    return uintBitsToFloat(bitfieldInsert(bitfieldInsert(bitfieldInsert(bitfieldInsert(0u, _636.x, 0, 8), _636.y, 8, 8), _636.z, 16, 8), _636.w, 24, 8));
}

uvec2 unpack2xU16(float _716)
{
    uint _719 = floatBitsToUint(_716);
    return uvec2(bitfieldExtract(_719, 0, 16), bitfieldExtract(_719, 16, 16));
}

float pack2xU16(uvec2 _728)
{
    return uintBitsToFloat(bitfieldInsert(bitfieldInsert(0u, _728.x, 0, 16), _728.y, 16, 16));
}

ivec2 unpack2xS16(float _761)
{
    int _764 = floatBitsToInt(_761);
    ivec2 _767 = ivec2(bitfieldExtract(_764, 0, 16), bitfieldExtract(_764, 16, 16));
    bvec2 _772 = lessThan(_767, ivec2(32768));
    ivec2 _774 = _767 - ivec2(65536);
    return ivec2(_772.x ? _767.x : _774.x, _772.y ? _767.y : _774.y);
}

float pack2xS16(ivec2 _781)
{
    uint _784 = _781.x;
    uint _789 = _781.y;
    return uintBitsToFloat(bitfieldInsert(bitfieldInsert(bitfieldInsert(bitfieldInsert(0u, _784, 0, 15), _784 >> uint(31), 15, 1), _789, 16, 15), _789 >> uint(31), 31, 1));
}

uvec4 unpack4xU8(float _825)
{
    uint _828 = floatBitsToUint(_825);
    return uvec4(bitfieldExtract(_828, 0, 8), bitfieldExtract(_828, 8, 8), bitfieldExtract(_828, 16, 8), bitfieldExtract(_828, 24, 8));
}

void primary_program()
{
    vec4 _531 = vec4(greaterThanEqual(pa[0], vec4(0.0)));
    outs[1] = vec4(_531.x, _531.y, _531.z, _531.w);
    vec4 _555 = outs[1];
    _555.w = (pa[0].y < 0.0) ? sa[7].w : sa[5].w;
    outs[1] = _555;
    vec4 _563 = internals[0];
    _563.x = pa[1].y;
    internals[0] = _563;
    vec4 _571 = internals[2];
    _571.x = internals[0].x;
    internals[2] = _571;
    vec4 _585 = internals[2];
    _585.x = max(internals[2].x, sa[15].x);
    internals[2] = _585;
    vec4 _590 = outs[0];
    _590.x = uintBitsToFloat(1325400064u);
    outs[0] = _590;
    vec4 _598 = outs[0];
    _598.y = outs[0].x;
    outs[0] = _598;
    vec4 _606 = outs[0];
    _606.z = outs[0].x;
    outs[0] = _606;
    vec4 _614 = outs[0];
    _614.w = outs[0].x;
    outs[0] = _614;
    uvec4 _629 = uvec4(vec4(greaterThanEqual((vec4(0.0) - outs[0]) + internals[2], vec4(0.0)))) * uvec4(255);
    vec4 _653 = pa[1];
    _653.x = pack4xU8(uvec4(_629.x, _629.y, _629.z, _629.w));
    pa[1] = _653;
    vec4 _664 = internals[0];
    _664.x = (internals[2].x * 2.71828174591064453125) + 0.0;
    internals[0] = _664;
    vec4 _678 = internals[1];
    _678.x = fract(internals[0].x);
    internals[1] = _678;
    vec4 _694 = pa[0];
    _694.y = (1.0 * (0.0 - internals[1].x)) + internals[0].x;
    pa[0] = _694;
    vec4 _704 = outs[0];
    _704.x = (internals[1].x * 0.5) + 0.0;
    outs[0] = _704;
    uvec2 _741 = unpack2xU16(pa[1].z);
    vec2 _746 = vec2(pack2xU16(uvec2(uint(outs[0].x), unpack2xU16(pa[1].y).y)), pack2xU16(uvec2(_741.x, _741.y)));
    pa[1] = vec4(pa[1].x, _746.x, _746.y, pa[1].w);
    ivec2 _799 = unpack2xS16(pa[1].z);
    vec2 _804 = vec2(pack2xS16(ivec2(unpack2xS16(pa[1].y).x, int(pa[0].y))), pack2xS16(ivec2(_799.x, _799.y)));
    pa[1] = vec4(pa[1].x, _804.x, _804.y, pa[1].w);
    vec4 _812 = internals[0];
    _812.x = uintBitsToFloat(2147483647u);
    internals[0] = _812;
    ivec4 _818 = floatBitsToInt(internals[0]);
    vec4 _844 = vec4(pa[1].y, pa[1].z, pa[1].w, pa[2].x);
    bvec4 _846 = notEqual(unpack4xU8(pa[1].x), uvec4(0u));
    p[0] = floatBitsToInt(internals[0].x) != floatBitsToInt(sa[10].x);
    vec4 _871 = r[0];
    _871.z = sa[19].x;
    r[0] = _871;
    if (p[0])
    {
        vec4 _878 = r[0];
        _878.z = 0.0;
        r[0] = _878;
    }
    vec2 _885 = vec2(pa[0].x, pa[0].x);
    r[0] = vec4(_885.x, _885.y, r[0].z, r[0].w);
    vec2 _896 = vec2(0.0, outs[1].y) * vec2(1.0);
    outs[0] = vec4(_896.x, _896.y, outs[0].z, outs[0].w);
    vec2 _906 = vec2(1.0, outs[1].y) * vec2(1.0);
    pa[1] = vec4(_906.x, _906.y, pa[1].z, pa[1].w);
    vec2 _916 = vec2(outs[0].x, outs[0].y);
    vec2 _930 = vec2(pa[1].x, pa[1].y);
    bvec2 _931 = lessThan(vec2(r[0].x, r[0].y), vec2(0.0));
    vec2 _932 = vec2(_931.x ? _916.x : _930.x, _931.y ? _916.y : _930.y);
    pa[1] = vec4(_932.x, _932.y, pa[1].z, pa[1].w);
    p[0] = pa[0].x < 0.0;
    vec4 _953 = internals[0];
    _953.x = 1.0 / abs(sa[4].x);
    internals[0] = _953;
    vec4 _968 = internals[1];
    _968.x = (0.0 - r[0].z) + sa[16].w;
    internals[1] = _968;
    vec4 _976 = pa[0];
    _976.x = outs[1].z;
    pa[0] = _976;
    vec4 _984 = pa[0];
    _984.y = outs[1].w;
    pa[0] = _984;
    if (p[0])
    {
        vec4 _1003 = pa[0];
        _1003.x = (internals[0].x * sa[8].x) + 0.0;
        pa[0] = _1003;
    }
    if (!p[0])
    {
        vec4 _1023 = outs[1];
        _1023.z = (internals[0].x * sa[18].z) + 0.0;
        outs[1] = _1023;
    }
    vec2 _1030 = vec2(pa[0].x, pa[0].y);
    vec2 _1044 = vec2(outs[1].z, outs[1].w);
    bvec2 _1045 = lessThan(vec2(r[0].x, r[0].y), vec2(0.0));
    vec2 _1046 = vec2(_1045.x ? _1030.x : _1044.x, _1045.y ? _1030.y : _1044.y);
    internals[0] = vec4(_1046.x, _1046.y, internals[0].z, internals[0].w);
    vec2 _1064 = vec2(internals[0].x, internals[0].y) * vec2(internals[1].x, internals[1].x);
    internals[0] = vec4(_1064.x, _1064.y, internals[0].z, internals[0].w);
    internals[2] = vec4(pa[0].z, pa[0].w, pa[0].z, pa[0].w);
    vec2 _1100 = (vec2(r[0].z, r[0].z) * vec2(pa[1].x, pa[1].y)) + vec2(internals[0].x, internals[0].y);
    internals[0] = vec4(_1100.x, _1100.y, internals[0].z, internals[0].w);
    vec2 _1119 = (vec2(internals[0].x, internals[0].x) * vec2(sa[4].x, sa[4].y)) + vec2(0.0);
    pa[0] = vec4(_1119.x, _1119.y, pa[0].z, pa[0].w);
    vec2 _1145 = (vec2(internals[0].y, internals[0].y) * vec2(sa[5].x, sa[5].y)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_1145.x, _1145.y, pa[0].z, pa[0].w);
    vec2 _1171 = (vec2(internals[2].z, internals[2].z) * vec2(sa[6].x, sa[6].y)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_1171.x, _1171.y, pa[0].z, pa[0].w);
    vec2 _1197 = (vec2(pa[0].x, pa[0].y) * vec2(sa[16].z, sa[16].z)) + vec2(sa[18].x, sa[18].y);
    outs[7] = vec4(outs[7].x, outs[7].y, _1197.x, _1197.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[0] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[0] = (vec4(internals[2].z, internals[2].z, internals[2].z, internals[2].z) * sa[2]) + internals[0];
    internals[0] = (vec4(internals[2].w, internals[2].w, internals[2].w, internals[2].w) * sa[3]) + internals[0];
    vec2 _1290 = vec2(outs[7].z, outs[7].w) * vec2(sa[14].z, sa[14].z);
    r[0] = vec4(_1290.x, _1290.y, r[0].z, r[0].w);
    vec4 _1303 = internals[1];
    _1303.x = (0.0 - sa[8].z) * 1.0;
    internals[1] = _1303;
    vec4 _1311 = internals[2];
    _1311.x = sa[9].x;
    internals[2] = _1311;
    vec4 _1331 = pa[1];
    _1331.x = (internals[2].x < 0.0) ? internals[1].x : sa[8].z;
    pa[1] = _1331;
    vec4 _1341 = internals[1];
    _1341.x = (0.0 - sa[7].z) * 1.0;
    internals[1] = _1341;
    vec4 _1361 = outs[5];
    _1361.x = (internals[2].x < 0.0) ? internals[1].x : sa[7].z;
    outs[5] = _1361;
    vec4 _1371 = internals[1];
    _1371.x = (0.0 - sa[9].z) * 1.0;
    internals[1] = _1371;
    vec4 _1391 = pa[0];
    _1391.z = (internals[2].x < 0.0) ? internals[1].x : sa[9].z;
    pa[0] = _1391;
    vec2 _1406 = vec2(pa[0].z, pa[0].z) * vec2(sa[4].z, sa[4].w);
    pa[0] = vec4(_1406.x, _1406.y, pa[0].z, pa[0].w);
    vec4 _1427 = internals[1];
    _1427.x = fract(abs(pa[0].x));
    internals[1] = _1427;
    vec4 _1447 = pa[0];
    _1447.x = 1.0 / internals[0].w;
    pa[0] = _1447;
    vec4 _1450 = internals[1];
    _1450.x = internals[1].x * sa[14].x;
    internals[1] = _1450;
    vec4 _1465 = internals[2];
    _1465.x = (0.0 - sa[13].z) * pa[1].x;
    internals[2] = _1465;
    vec4 _1480 = outs[6];
    _1480.x = (internals[2].x * sa[17].x) + 0.0;
    outs[6] = _1480;
    vec4 _1491 = internals[2];
    _1491.x = (internals[1].x * (0.0 - 1.0)) + 0.0;
    internals[2] = _1491;
    vec4 _1511 = internals[1];
    _1511.x = (pa[0].z < 0.0) ? internals[2].x : internals[1].x;
    internals[1] = _1511;
    internals[2] = vec4(sa[6].z, sa[6].z, sa[6].w, sa[7].x) * vec4(outs[7].z, outs[7].w, outs[7].z, outs[7].w);
    vec2 _1547 = (vec2(internals[2].x, internals[2].y) * vec2(sa[13].x, sa[13].x)) + vec2(0.0);
    outs[2] = vec4(_1547.x, _1547.y, outs[2].z, outs[2].w);
    vec2 _1558 = vec2(0.0) * vec2(sa[13].x, sa[13].x);
    outs[2] = vec4(outs[2].x, outs[2].y, _1558.x, _1558.y);
    vec4 _1576 = internals[1];
    _1576.x = (internals[1].x * sa[12].z) + 0.0;
    internals[1] = _1576;
    vec2 _1583 = vec2(internals[1].x, 0.0) * vec2(1.0);
    pa[0] = vec4(pa[0].x, pa[0].y, _1583.x, _1583.y);
    vec2 _1609 = (vec2(internals[2].z, internals[2].w) * vec2(sa[12].y, sa[12].y)) + vec2(pa[0].z, pa[0].w);
    pa[1] = vec4(_1609.x, _1609.y, pa[1].z, pa[1].w);
    vec2 _1627 = vec2(outs[2].x, outs[2].y) * vec2(sa[5].z, sa[5].z);
    r[1] = vec4(_1627.x, _1627.y, r[1].z, r[1].w);
    vec2 _1653 = (vec2(pa[1].x, pa[1].y) * vec2(sa[12].x, sa[12].x)) + vec2(sa[11].w, sa[11].w);
    internals[1] = vec4(_1653.x, _1653.y, internals[1].z, internals[1].w);
    vec2 _1672 = (vec2(internals[0].x, internals[0].y) * vec2(pa[0].x, pa[0].x)) + vec2(0.0);
    internals[0] = vec4(_1672.x, _1672.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _1701 = vec2(internals[1].x, internals[1].y) * vec2(sa[11].z, sa[11].z);
    vec4 _1704 = internals[0];
    vec2 _1708 = vec2(_1704.x, _1704.y);
    internals[2] = vec4(_1701.x, _1701.y, internals[2].z, internals[2].w);
    outs[0] = vec4(_1708.x, _1708.y, outs[0].z, outs[0].w);
    vec2 _1721 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _1721.x, _1721.y);
    vec4 _1739 = internals[0];
    _1739.x = (0.0 - r[0].y) * sa[17].w;
    internals[0] = _1739;
    vec4 _1759 = pa[0];
    _1759.x = (r[0].x * sa[17].z) + internals[0].x;
    pa[0] = _1759;
    vec4 _1780 = internals[0];
    _1780.x = (r[0].y * (0.0 - sa[17].z)) + sa[17].z;
    internals[0] = _1780;
    vec4 _1801 = outs[7];
    _1801.x = (r[0].x * sa[17].w) + (0.0 - internals[0].x);
    outs[7] = _1801;
    vec4 _1815 = outs[7];
    _1815.y = pa[0].x + sa[17].w;
    outs[7] = _1815;
    vec4 _1835 = internals[0];
    _1835.x = (r[0].z * sa[11].y) + sa[11].x;
    internals[0] = _1835;
    vec4 _1849 = internals[0];
    _1849.x = min(internals[0].x, sa[16].w);
    internals[0] = _1849;
    vec4 _1858 = internals[0];
    _1858.x = max(internals[0].x, 0.0);
    internals[0] = _1858;
    vec2 _1865 = vec2(internals[0].x, 0.5) * vec2(1.0);
    outs[8] = vec4(_1865.x, _1865.y, outs[8].z, outs[8].w);
    vec2 _1875 = vec2(outs[7].z, outs[7].w);
    outs[8] = vec4(outs[8].x, outs[8].y, _1875.x, _1875.y);
    internals[0] = vec4(r[0].x, r[0].y, r[0].z, 0.0) * vec4(1.0);
    vec2 _1895 = vec2(internals[0].x, internals[0].y);
    outs[1] = vec4(_1895.x, _1895.y, outs[1].z, outs[1].w);
    vec2 _1905 = vec2(internals[0].z, internals[0].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _1905.x, _1905.y);
    internals[0] = vec4(internals[2].x, internals[2].y, 0.0, 0.0) * vec4(1.0);
    vec2 _1924 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_1924.x, _1924.y, outs[3].z, outs[3].w);
    vec2 _1934 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _1934.x, _1934.y);
    vec2 _1960 = (vec2(r[1].x, r[1].y) * vec2(sa[10].w, sa[10].w)) + vec2(pa[0].y, pa[0].y);
    outs[4] = vec4(_1960.x, _1960.y, outs[4].z, outs[4].w);
    vec4 _1977 = pa[0];
    _1977.z = sa[17].y * sa[5].z;
    pa[0] = _1977;
    vec2 _1992 = vec2(pa[1].x, pa[1].y) * vec2(pa[0].z, pa[0].z);
    outs[4] = vec4(outs[4].x, outs[4].y, _1992.x, _1992.y);
    vec4 _2010 = internals[0];
    _2010.x = (0.0 - outs[5].x) * sa[10].z;
    internals[0] = _2010;
    vec2 _2024 = vec2(internals[0].x, 0.0) * vec2(sa[17].x, sa[17].x);
    pa[0] = vec4(_2024.x, _2024.y, pa[0].z, pa[0].w);
    vec2 _2044 = (vec2(r[1].x, r[1].y) * vec2(2.0)) + vec2(pa[0].x, pa[0].y);
    outs[5] = vec4(_2044.x, _2044.y, outs[5].z, outs[5].w);
    vec2 _2063 = (vec2(internals[1].x, internals[1].y) * vec2(pa[0].z, pa[0].z)) + vec2(0.0);
    outs[5] = vec4(outs[5].x, outs[5].y, _2063.x, _2063.y);
    vec2 _2082 = (vec2(internals[2].x, internals[2].y) * vec2(pa[0].z, pa[0].z)) + vec2(0.0);
    outs[5] = vec4(outs[5].x, outs[5].y, _2082.x, _2082.y);
    vec2 _2108 = (vec2(r[1].x, r[1].y) * vec2(sa[10].y, sa[10].y)) + vec2(outs[6].x, outs[6].x);
    outs[6] = vec4(_2108.x, _2108.y, outs[6].z, outs[6].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
    v_TexCoord7 = outs[8];
}

void main()
{
    int i = 0;
    while (i < 10)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[10] = vec4(0.0, 3.0, 0.2520000040531158447265625, 2.2999999523162841796875);
    sa[11] = vec4(0.0239062607288360595703125, 0.959999978542327880859375, 2.8250000476837158203125, -0.68506252765655517578125);
    sa[12] = vec4(-2.8250000476837158203125, 0.0500000007450580596923828125, 0.20000000298023223876953125, 0.20000000298023223876953125);
    sa[13] = vec4(0.17000000178813934326171875, 0.27777779102325439453125, 0.1319999992847442626953125, 0.01319999992847442626953125);
    sa[14] = vec4(13.0, 0.076923079788684844970703125, 0.0333333350718021392822265625, 8.0);
    sa[15] = vec4(0.125, 10.0, 0.100000001490116119384765625, 7.0);
    sa[16] = vec4(0.14285714924335479736328125, 4.9999998736893758177757263183594e-05, 5.0, 1.0);
    sa[17] = vec4(0.100000001490116119384765625, 2.5, 0.72483599185943603515625, -0.68892002105712890625);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:47:58.590] |E| [compile_program]: Vertex info
-----------
0(37) : warning C7050: "pa[2].x" might be used before being initialized
0(39) : warning C7050: "internals[0]" might be used before being initialized
0(39) : warning C7050: "internals[1]" might be used before being initialized
0(39) : warning C7050: "internals[2]" might be used before being initialized
0(40) : warning C7050: "r[0]" might be used before being initialized
0(40) : warning C7050: "r[1].zw" might be used before being initialized

Fragment info
-------------
0(39) : warning C7050: "pa[0].zw" might be used before being initialized
0(39) : warning C7050: "pa[1].zw" might be used before being initialized
0(39) : warning C7050: "pa[2].zw" might be used before being initialized
0(39) : warning C7050: "pa[3].zw" might be used before being initialized
0(42) : warning C7050: "r[0].zw" might be used before being initialized


[10:47:58.590] |I| [load_shader_generic]: Generating frag shader 9be22f13b64dc9e462a55a60e28f594f2f59ef29df0ad7a7e5c18817d4d1acfb
[10:47:58.594] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 9be22f13b64dc9e462a55a60e28f594f2f59ef29df0ad7a7e5c18817d4d1acfb

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 7) in vec4 v_TexCoord3;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 9) in vec4 v_TexCoord5;
layout(location = 10) in vec4 v_TexCoord6;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _193)
{
    return uintBitsToFloat(packHalf2x16(_193));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _299 = vec2(pack2xF16(vec2(vec4(1.0).x, vec4(1.0).y)), pack2xF16(vec2(vec4(1.0).z, vec4(1.0).w)));
    sa[3] = vec4(_299.x, _299.y, sa[3].z, sa[3].w);
}

vec2 unpack2xF16(float _121)
{
    return unpackHalf2x16(floatBitsToUint(_121));
}

void primary_program()
{
    vec2 _311 = unpack2xF16(pa[3].y);
    vec2 _314 = vec2(_311.x, _311.y);
    vec2 _322 = unpack2xF16(pa[0].y);
    vec2 _327 = vec2(pack2xF16(vec2(_314.x, _314.y)), pack2xF16(vec2(_322.x, _322.y)));
    pa[0] = vec4(_327.x, _327.y, pa[0].z, pa[0].w);
    vec2 _336 = unpack2xF16(pa[0].x);
    vec4 _341 = texture(fragTex_sampler2, vec2(_336.x, _336.y));
    vec2 _350 = vec2(pack2xF16(vec2(_341.x, _341.y)), pack2xF16(vec2(_341.z, _341.w)));
    pa[3] = vec4(_350.x, _350.y, pa[3].z, pa[3].w);
    vec2 _360 = vec2(pa[3].x, pa[3].y);
    vec2 _362 = unpack2xF16(_360.x);
    vec2 _364 = unpack2xF16(_360.y);
    vec2 _375 = unpack2xF16(sa[0].y);
    vec4 _381 = vec4(_362.x, _362.y, _364.x, _364.y) * vec4(_375.y, _375.y, _375.y, _375.y);
    vec2 _390 = vec2(pack2xF16(vec2(_381.x, _381.y)), pack2xF16(vec2(_381.z, _381.w)));
    r[0] = vec4(_390.x, _390.y, r[0].z, r[0].w);
    vec2 _399 = unpack2xF16(pa[0].y);
    vec2 _402 = vec2(_399.x, _399.y);
    vec2 _410 = unpack2xF16(pa[0].y);
    vec2 _415 = vec2(pack2xF16(vec2(_402.x, _402.y)), pack2xF16(vec2(_410.x, _410.y)));
    pa[0] = vec4(_415.x, _415.y, pa[0].z, pa[0].w);
    vec2 _424 = unpack2xF16(pa[0].x);
    vec4 _429 = texture(fragTex_sampler1, vec2(_424.x, _424.y));
    vec2 _438 = vec2(pack2xF16(vec2(_429.x, _429.y)), pack2xF16(vec2(_429.z, _429.w)));
    pa[0] = vec4(_438.x, _438.y, pa[0].z, pa[0].w);
    vec2 _467 = unpack2xF16(pa[0].y);
    vec2 _472 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_467.x, _467.y)));
    pa[0] = vec4(_472.x, _472.y, pa[0].z, pa[0].w);
    vec2 _481 = unpack2xF16(pa[1].y);
    vec2 _484 = vec2(_481.x, _481.y);
    vec2 _492 = unpack2xF16(pa[0].w);
    vec2 _497 = vec2(pack2xF16(vec2(_484.x, _484.y)), pack2xF16(vec2(_492.x, _492.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _497.x, _497.y);
    vec2 _506 = unpack2xF16(pa[0].z);
    vec4 _511 = texture(fragTex_sampler1, vec2(_506.x, _506.y));
    vec2 _520 = vec2(pack2xF16(vec2(_511.x, _511.y)), pack2xF16(vec2(_511.z, _511.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _520.x, _520.y);
    vec2 _549 = unpack2xF16(pa[0].y);
    vec2 _554 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].z).x)), pack2xF16(vec2(_549.x, _549.y)));
    pa[0] = vec4(_554.x, _554.y, pa[0].z, pa[0].w);
    vec2 _563 = unpack2xF16(pa[2].y);
    vec2 _566 = vec2(_563.x, _563.y);
    vec2 _574 = unpack2xF16(pa[0].w);
    vec2 _579 = vec2(pack2xF16(vec2(_566.x, _566.y)), pack2xF16(vec2(_574.x, _574.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _579.x, _579.y);
    vec2 _588 = unpack2xF16(pa[0].z);
    vec4 _593 = texture(fragTex_sampler1, vec2(_588.x, _588.y));
    vec2 _602 = vec2(pack2xF16(vec2(_593.x, _593.y)), pack2xF16(vec2(_593.z, _593.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _602.x, _602.y);
    vec2 _631 = unpack2xF16(pa[0].w);
    vec2 _636 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(pa[2].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_631.x, _631.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _636.x, _636.y);
    vec2 _665 = unpack2xF16(pa[0].w);
    vec2 _670 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].z).x * unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_665.x, _665.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _670.x, _670.y);
    vec2 _699 = unpack2xF16(pa[0].w);
    vec2 _704 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].z).x, unpack2xF16(sa[2].w).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_699.x, _699.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _704.x, _704.y);
    vec2 _713 = unpack2xF16(sa[2].z);
    vec2 _722 = unpack2xF16(pa[0].x);
    vec2 _726 = vec2(_713.x, _713.x) * vec2(_722.x, _722.y);
    vec2 _734 = unpack2xF16(pa[0].y);
    vec2 _739 = vec2(pack2xF16(vec2(_726.x, _726.y)), pack2xF16(vec2(_734.x, _734.y)));
    pa[0] = vec4(_739.x, _739.y, pa[0].z, pa[0].w);
    vec2 _768 = unpack2xF16(pa[0].y);
    vec2 _773 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_768.x, _768.y)));
    pa[0] = vec4(_773.x, _773.y, pa[0].z, pa[0].w);
    vec2 _795 = unpack2xF16(pa[0].y);
    vec2 _800 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_795.x, _795.y)));
    pa[0] = vec4(_800.x, _800.y, pa[0].z, pa[0].w);
    vec2 _829 = unpack2xF16(pa[0].w);
    vec2 _834 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x, min(unpack2xF16(pa[0].x).y, unpack2xF16(sa[2].w).x))), pack2xF16(vec2(_829.x, _829.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _834.x, _834.y);
    vec2 _843 = unpack2xF16(pa[0].z);
    vec2 _847 = max(vec2(_843.x, _843.y), vec2(0.0));
    vec2 _855 = unpack2xF16(pa[0].w);
    vec2 _860 = vec2(pack2xF16(vec2(_847.x, _847.y)), pack2xF16(vec2(_855.x, _855.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _860.x, _860.y);
    vec2 _889 = unpack2xF16(pa[0].y);
    vec2 _894 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(pa[0].z).y, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_889.x, _889.y)));
    pa[0] = vec4(_894.x, _894.y, pa[0].z, pa[0].w);
    vec2 _923 = unpack2xF16(pa[0].y);
    vec2 _928 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_923.x, _923.y)));
    pa[0] = vec4(_928.x, _928.y, pa[0].z, pa[0].w);
    vec2 _957 = unpack2xF16(pa[0].y);
    vec2 _962 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_957.x, _957.y)));
    pa[0] = vec4(_962.x, _962.y, pa[0].z, pa[0].w);
    vec2 _984 = unpack2xF16(pa[0].y);
    vec2 _989 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_984.x, _984.y)));
    pa[0] = vec4(_989.x, _989.y, pa[0].z, pa[0].w);
    vec2 _1018 = unpack2xF16(pa[0].y);
    vec2 _1023 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * unpack2xF16(sa[0].x).y, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1018.x, _1018.y)));
    pa[0] = vec4(_1023.x, _1023.y, pa[0].z, pa[0].w);
    vec2 _1033 = vec2(sa[3].x, sa[3].y);
    vec2 _1035 = unpack2xF16(_1033.x);
    vec2 _1037 = unpack2xF16(_1033.y);
    vec4 _1042 = vec4(_1035.x, _1035.y, _1037.x, _1037.y);
    vec2 _1051 = vec2(pack2xF16(vec2(_1042.x, _1042.y)), pack2xF16(vec2(_1042.z, _1042.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1051.x, _1051.y);
    vec4 _1079 = pa[0];
    _1079.w = pack2xF16(vec2(unpack2xF16(pa[0].w).x, max(unpack2xF16(r[0].y).y, unpack2xF16(pa[0].x).x)));
    pa[0] = _1079;
    vec2 _1086 = vec2(pa[3].x, pa[3].y);
    vec2 _1088 = unpack2xF16(_1086.x);
    vec2 _1090 = unpack2xF16(_1086.y);
    vec2 _1101 = unpack2xF16(sa[0].y);
    vec2 _1114 = vec2(pa[0].z, pa[0].w);
    vec2 _1116 = unpack2xF16(_1114.x);
    vec2 _1118 = unpack2xF16(_1114.y);
    vec4 _1125 = (vec4(_1088.x, _1088.y, _1090.x, _1090.y) * (vec4(0.0) - vec4(_1101.y, _1101.y, _1101.y, _1101.y))) + vec4(_1116.x, _1116.y, _1118.x, _1118.y);
    vec2 _1134 = vec2(pack2xF16(vec2(_1125.x, _1125.y)), pack2xF16(vec2(_1125.z, _1125.w)));
    pa[0] = vec4(_1134.x, _1134.y, pa[0].z, pa[0].w);
    vec2 _1144 = vec2(pa[0].x, pa[0].y);
    vec2 _1146 = unpack2xF16(_1144.x);
    vec2 _1148 = unpack2xF16(_1144.y);
    vec2 _1159 = unpack2xF16(pa[0].w);
    vec2 _1171 = vec2(r[0].x, r[0].y);
    vec2 _1173 = unpack2xF16(_1171.x);
    vec2 _1175 = unpack2xF16(_1171.y);
    vec4 _1182 = (vec4(_1146.x, _1146.y, _1148.x, _1148.y) * vec4(_1159.y, _1159.y, _1159.y, _1159.y)) + vec4(_1173.x, _1173.y, _1175.x, _1175.y);
    vec2 _1191 = vec2(pack2xF16(vec2(_1182.x, _1182.y)), pack2xF16(vec2(_1182.z, _1182.w)));
    pa[0] = vec4(_1191.x, _1191.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _151)
{
    uint _154 = floatBitsToUint(_151);
    return uvec2(bitfieldExtract(_154, 0, 16), bitfieldExtract(_154, 16, 16));
}

void frag_output_finalize()
{
    vec2 _117 = vec2(pa[0].x, pa[0].y);
    vec2 _128 = unpack2xF16(_117.x);
    vec2 _130 = unpack2xF16(_117.y);
    out_color = vec4(_128.x, _128.y, _130.x, _130.y);
    vec2 _147 = vec2(pa[0].x, pa[0].y);
    uvec2 _160 = unpack2xU16(_147.x);
    uvec2 _162 = unpack2xU16(_147.y);
    out_color_ui = uvec4(_160.x, _160.y, _162.x, _162.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec2(2.3676338853232109230327335039266e-41, 2.1523944412029190209388486399333e-41).x, vec2(2.3676338853232109230327335039266e-41, 2.1523944412029190209388486399333e-41).y);
    vec2 _205 = vec2(pack2xF16(vec2(v_TexCoord3.x, v_TexCoord3.y)), pack2xF16(vec2(v_TexCoord3.z, v_TexCoord3.w)));
    pa[0] = vec4(_205.x, _205.y, pa[0].z, pa[0].w);
    vec2 _218 = vec2(pack2xF16(vec2(v_TexCoord4.x, v_TexCoord4.y)), pack2xF16(vec2(v_TexCoord4.z, v_TexCoord4.w)));
    pa[1] = vec4(_218.x, _218.y, pa[1].z, pa[1].w);
    vec2 _231 = vec2(pack2xF16(vec2(v_TexCoord5.x, v_TexCoord5.y)), pack2xF16(vec2(v_TexCoord5.z, v_TexCoord5.w)));
    pa[2] = vec4(_231.x, _231.y, pa[2].z, pa[2].w);
    vec2 _244 = vec2(pack2xF16(vec2(v_TexCoord6.x, v_TexCoord6.y)), pack2xF16(vec2(v_TexCoord6.z, v_TexCoord6.w)));
    pa[3] = vec4(_244.x, _244.y, pa[3].z, pa[3].w);
    frag_init();
    vec4 _257 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _262 = vec2(pack2xF16(_257.xy), pack2xF16(_257.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _262.x, _262.y);
    vec4 _268 = texture(fragTex_sampler0, v_TexCoord4.xy);
    vec2 _273 = vec2(pack2xF16(_268.xy), pack2xF16(_268.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _273.x, _273.y);
    vec4 _279 = texture(fragTex_sampler0, v_TexCoord5.xy);
    vec2 _284 = vec2(pack2xF16(_279.xy), pack2xF16(_279.zw));
    pa[2] = vec4(pa[2].x, pa[2].y, _284.x, _284.y);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:47:58.645] |E| [compile_program]: Vertex info
-----------
0(37) : warning C7050: "pa[2].x" might be used before being initialized
0(39) : warning C7050: "internals[0]" might be used before being initialized
0(39) : warning C7050: "internals[1]" might be used before being initialized
0(39) : warning C7050: "internals[2]" might be used before being initialized
0(40) : warning C7050: "r[0]" might be used before being initialized
0(40) : warning C7050: "r[1].zw" might be used before being initialized

Fragment info
-------------
0(39) : warning C7050: "pa[0].zw" might be used before being initialized
0(39) : warning C7050: "pa[1].zw" might be used before being initialized
0(39) : warning C7050: "pa[2].zw" might be used before being initialized
0(39) : warning C7050: "pa[3].zw" might be used before being initialized
0(42) : warning C7050: "r[0].zw" might be used before being initialized


[10:48:50.118] |I| [load_shader_generic]: Generating frag shader 437862534996d1fc0e65eea7d0cf187d4c2433d0cab320eee13935907c644921
[10:48:50.119] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 437862534996d1fc0e65eea7d0cf187d4c2433d0cab320eee13935907c644921

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

float pack2xF16(vec2 _189)
{
    return uintBitsToFloat(packHalf2x16(_189));
}

vec2 unpack2xF16(float _110)
{
    return unpackHalf2x16(floatBitsToUint(_110));
}

void primary_program()
{
    vec2 _211 = vec2(pa[0].x, pa[0].y);
    vec2 _213 = unpack2xF16(_211.x);
    vec2 _215 = unpack2xF16(_211.y);
    vec2 _227 = vec2(sa[0].z, sa[0].w);
    vec2 _229 = unpack2xF16(_227.x);
    vec2 _231 = unpack2xF16(_227.y);
    vec2 _243 = vec2(sa[0].x, sa[0].y);
    vec2 _245 = unpack2xF16(_243.x);
    vec2 _247 = unpack2xF16(_243.y);
    vec4 _254 = (vec4(_213.x, _213.y, _215.x, _215.y) * vec4(_229.x, _229.y, _231.x, _231.y)) + vec4(_245.x, _245.y, _247.x, _247.y);
    vec2 _263 = vec2(pack2xF16(vec2(_254.x, _254.y)), pack2xF16(vec2(_254.z, _254.w)));
    pa[0] = vec4(_263.x, _263.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _140)
{
    uint _143 = floatBitsToUint(_140);
    return uvec2(bitfieldExtract(_143, 0, 16), bitfieldExtract(_143, 16, 16));
}

void frag_output_finalize()
{
    vec2 _106 = vec2(pa[0].x, pa[0].y);
    vec2 _117 = unpack2xF16(_106.x);
    vec2 _119 = unpack2xF16(_106.y);
    out_color = vec4(_117.x, _117.y, _119.x, _119.y);
    vec2 _136 = vec2(pa[0].x, pa[0].y);
    uvec2 _149 = unpack2xU16(_136.x);
    uvec2 _151 = unpack2xU16(_136.y);
    out_color_ui = uvec4(_149.x, _149.y, _151.x, _151.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    frag_init();
    vec4 _186 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _199 = vec2(pack2xF16(_186.xy), pack2xF16(_186.zw));
    pa[0] = vec4(_199.x, _199.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:48:50.131] |E| [compile_program]: Vertex info
-----------
0(31) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0].zw" might be used before being initialized


[10:49:09.223] |I| [do_trophy_callback]: Trophy unlocked, name: Viva La Résurrection, detail: Devenir luchador, id = 1
[10:51:02.943] |I| [load_shader_generic]: Generating frag shader 8c4a6cac054b83505a0a4e58f8e2932a8075342a72ebf0e5d4f2785525f04481
[10:51:02.943] |I| [make_frag_finalize_function]: Non zero pa offset: 2 at 8c4a6cac054b83505a0a4e58f8e2932a8075342a72ebf0e5d4f2785525f04481
[10:51:02.952] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 8c4a6cac054b83505a0a4e58f8e2932a8075342a72ebf0e5d4f2785525f04481

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 2) uniform sampler2D fragTex_sampler2;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 7) in vec4 v_TexCoord3;
layout(location = 12) in vec4 v_TexCoord8;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _256)
{
    return uintBitsToFloat(packHalf2x16(_256));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

vec2 unpack2xF16(float _185)
{
    return unpackHalf2x16(floatBitsToUint(_185));
}

void secondary_program()
{
    vec2 _310 = unpack2xF16(sa[5].x);
    vec2 _313 = vec2(_310.x, _310.y);
    sa[9] = vec4(_313.x, _313.y, sa[9].z, sa[9].w);
}

void primary_program()
{
    vec2 _326 = unpack2xF16(pa[0].z);
    vec2 _335 = unpack2xF16(sa[8].w);
    vec2 _344 = unpack2xF16(sa[7].y);
    vec2 _349 = (vec2(_326.x, _326.x) * vec2(_335.x, _335.x)) + vec2(_344.x, _344.x);
    vec2 _357 = unpack2xF16(pa[1].y);
    vec2 _362 = vec2(pack2xF16(vec2(_349.x, _349.y)), pack2xF16(vec2(_357.x, _357.y)));
    pa[1] = vec4(_362.x, _362.y, pa[1].z, pa[1].w);
    p[1] = (0.0 - unpack2xF16(pa[1].x).x) >= 0.0;
    if (!p[1])
    {
        discard;
    }
    vec4 _395 = internals[1];
    _395.x = log(abs(unpack2xF16(pa[1].x).x));
    internals[1] = _395;
    vec4 _411 = internals[0];
    _411.x = internals[1].x * unpack2xF16(sa[7].x).x;
    internals[0] = _411;
    vec4 _420 = internals[1];
    vec4 _433 = internals[0];
    _433.x = exp(internals[0].x);
    internals[0] = _433;
    vec2 _439 = unpack2xF16(pa[1].x);
    vec2 _444 = vec2(pack2xF16(vec2(_420.x * unpack2xF16(sa[6].w).x)), pack2xF16(vec2(_439.x, _439.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, pa[0].z, _444.x);
    pa[1] = vec4(_444.y, pa[1].y, pa[1].z, pa[1].w);
    vec2 _474 = unpack2xF16(pa[0].w);
    vec2 _479 = vec2(pack2xF16(vec2(internals[0].x + unpack2xF16(sa[3].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_474.x, _474.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _479.x, _479.y);
    vec2 _492 = vec2(unpack2xF16(pa[0].z).x, 0.5) * vec2(1.0);
    vec2 _500 = unpack2xF16(pa[0].w);
    vec2 _505 = vec2(pack2xF16(vec2(_492.x, _492.y)), pack2xF16(vec2(_500.x, _500.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _505.x, _505.y);
    vec2 _514 = unpack2xF16(pa[0].z);
    vec4 _519 = texture(fragTex_sampler2, vec2(_514.x, _514.y));
    vec2 _528 = vec2(pack2xF16(vec2(_519.x, _519.y)), pack2xF16(vec2(_519.z, _519.w)));
    r[0] = vec4(_528.x, _528.y, r[0].z, r[0].w);
    vec4 _549 = pa[0];
    _549.y = pack2xF16(vec2(exp(unpack2xF16(pa[0].w).x), unpack2xF16(pa[0].y).y));
    pa[0] = _549;
    vec2 _555 = unpack2xF16(pa[1].y);
    vec2 _558 = vec2(_555.x, _555.y);
    vec2 _566 = unpack2xF16(pa[0].w);
    vec2 _571 = vec2(pack2xF16(vec2(_558.x, _558.y)), pack2xF16(vec2(_566.x, _566.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _571.x, _571.y);
    vec2 _580 = unpack2xF16(pa[0].y);
    vec2 _589 = unpack2xF16(sa[8].z);
    vec2 _598 = unpack2xF16(pa[0].z);
    vec2 _603 = (vec2(_580.x, _580.x) * vec2(_589.x, _589.x)) + vec2(_598.x, _598.y);
    vec2 _611 = unpack2xF16(pa[0].w);
    vec2 _616 = vec2(pack2xF16(vec2(_603.x, _603.y)), pack2xF16(vec2(_611.x, _611.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _616.x, _616.y);
    vec2 _625 = unpack2xF16(pa[0].z);
    vec4 _630 = texture(fragTex_sampler1, vec2(_625.x, _625.y));
    vec2 _639 = vec2(pack2xF16(vec2(_630.x, _630.y)), pack2xF16(vec2(_630.z, _630.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _639.x, _639.y);
    vec2 _648 = unpack2xF16(pa[1].y);
    vec2 _657 = unpack2xF16(sa[6].z);
    vec2 _661 = vec2(_648.x, _648.y) + vec2(_657.x, _657.x);
    internals[0] = vec4(_661.x, _661.y, internals[0].z, internals[0].w);
    vec4 _682 = internals[1];
    _682.x = dot(vec3(internals[0].x, internals[0].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
    internals[1] = _682;
    vec4 _698 = pa[0];
    _698.y = pack2xF16(vec2(inversesqrt(internals[1].x), unpack2xF16(pa[0].y).y));
    pa[0] = _698;
    vec2 _704 = unpack2xF16(pa[0].y);
    vec2 _715 = vec2(_704.x, _704.x) * vec2(internals[0].x, internals[0].y);
    internals[0] = vec4(_715.x, _715.y, internals[0].z, internals[0].w);
    vec2 _745 = unpack2xF16(pa[0].w);
    vec2 _750 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[0].x).x) + unpack2xF16(sa[8].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_745.x, _745.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _750.x, _750.y);
    vec2 _767 = vec2(sa[3].z, sa[3].z);
    bvec2 _769 = lessThan(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _770 = vec2(_769.x ? vec2(0.0).x : _767.x, _769.y ? vec2(0.0).y : _767.y);
    vec2 _778 = unpack2xF16(r[0].w);
    vec2 _783 = vec2(pack2xF16(vec2(_770.x, _770.y)), pack2xF16(vec2(_778.x, _778.y)));
    r[0] = vec4(r[0].x, r[0].y, _783.x, _783.y);
    vec2 _812 = unpack2xF16(r[1].w);
    vec2 _817 = vec2(pack2xF16(vec2(unpack2xF16(sa[6].y).x * unpack2xF16(pa[0].w).y, unpack2xF16(r[1].z).y)), pack2xF16(vec2(_812.x, _812.y)));
    r[1] = vec4(r[1].x, r[1].y, _817.x, _817.y);
    vec2 _826 = unpack2xF16(pa[1].x);
    vec2 _835 = unpack2xF16(sa[6].x);
    vec2 _844 = unpack2xF16(sa[5].w);
    vec2 _849 = (vec2(_826.x, _826.x) * vec2(_835.x, _835.x)) + vec2(_844.x, _844.x);
    vec2 _857 = unpack2xF16(r[0].y);
    vec2 _862 = vec2(pack2xF16(vec2(_849.x, _849.y)), pack2xF16(vec2(_857.x, _857.y)));
    r[0] = vec4(_862.x, _862.y, r[0].z, r[0].w);
    vec4 _874 = pa[0];
    _874.w = sa[0].y;
    pa[0] = _874;
    vec2 _880 = unpack2xF16(r[1].z);
    vec2 _891 = vec2(sa[0].x, sa[0].y);
    vec2 _893 = unpack2xF16(_891.x);
    vec3 _900 = vec3(_880.x, _880.x, _880.x) + vec3(_893.x, _893.y, unpack2xF16(_891.y).x);
    vec2 _913 = vec2(pack2xF16(vec2(_900.x, _900.y)), pack2xF16(vec2(_900.z, unpack2xF16(pa[0].w).y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _913.x, _913.y);
    vec2 _922 = unpack2xF16(r[0].x);
    vec2 _934 = vec2(pa[0].z, pa[0].w);
    vec2 _936 = unpack2xF16(_934.x);
    vec2 _938 = unpack2xF16(_934.y);
    vec4 _944 = vec4(_922.x, _922.x, _922.x, _922.x) * vec4(_936.x, _936.y, _938.x, _938.y);
    vec2 _953 = vec2(pack2xF16(vec2(_944.x, _944.y)), pack2xF16(vec2(_944.z, _944.w)));
    r[1] = vec4(_953.x, _953.y, r[1].z, r[1].w);
    vec2 _962 = unpack2xF16(pa[0].y);
    vec2 _965 = vec2(_962.y, _962.y);
    vec2 _973 = unpack2xF16(pa[0].w);
    vec2 _978 = vec2(pack2xF16(vec2(_965.x, _965.y)), pack2xF16(vec2(_973.x, _973.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _978.x, _978.y);
    vec2 _995 = vec2(sa[3].z, sa[3].z);
    bvec2 _996 = lessThanEqual(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _997 = vec2(_996.x ? vec2(0.0).x : _995.x, _996.y ? vec2(0.0).y : _995.y);
    vec2 _1005 = unpack2xF16(r[0].y);
    vec2 _1010 = vec2(pack2xF16(vec2(_997.x, _997.y)), pack2xF16(vec2(_1005.x, _1005.y)));
    r[0] = vec4(_1010.x, _1010.y, r[0].z, r[0].w);
    vec2 _1019 = unpack2xF16(sa[3].z);
    vec2 _1022 = vec2(_1019.x, _1019.x);
    bvec2 _1030 = lessThan(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _1031 = vec2(_1030.x ? _1022.x : vec2(0.0).x, _1030.y ? _1022.y : vec2(0.0).y);
    vec2 _1039 = unpack2xF16(pa[0].w);
    vec2 _1044 = vec2(pack2xF16(vec2(_1031.x, _1031.y)), pack2xF16(vec2(_1039.x, _1039.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1044.x, _1044.y);
    vec4 _1066 = internals[1];
    _1066.x = (0.0 - unpack2xF16(pa[0].z).x) + unpack2xF16(r[0].x).x;
    internals[1] = _1066;
    vec4 _1083 = internals[1];
    _1083.x = dot(vec3(internals[1].x, 1.0, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
    internals[1] = _1083;
    vec2 _1089 = unpack2xF16(pa[1].x);
    vec2 _1098 = unpack2xF16(sa[8].w);
    vec2 _1110 = (vec2(_1089.x, _1089.x) * vec2(_1098.x, _1098.x)) + vec2(internals[1].x, internals[1].x);
    vec2 _1118 = unpack2xF16(pa[0].w);
    vec2 _1123 = vec2(pack2xF16(vec2(_1110.x, _1110.y)), pack2xF16(vec2(_1118.x, _1118.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1123.x, _1123.y);
    vec2 _1152 = unpack2xF16(pa[0].w);
    vec2 _1157 = vec2(pack2xF16(vec2(unpack2xF16(sa[8].x).x + unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1152.x, _1152.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1157.x, _1157.y);
    vec2 _1186 = unpack2xF16(pa[0].w);
    vec2 _1191 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].z).x, unpack2xF16(sa[3].z).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1186.x, _1186.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1191.x, _1191.y);
    vec2 _1213 = unpack2xF16(pa[0].w);
    vec2 _1218 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].z).x, 0.0), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1213.x, _1213.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1218.x, _1218.y);
    vec2 _1240 = unpack2xF16(r[0].y);
    vec2 _1245 = vec2(pack2xF16(vec2(log(unpack2xF16(pa[0].z).x), unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1240.x, _1240.y)));
    r[0] = vec4(_1245.x, _1245.y, r[0].z, r[0].w);
    vec2 _1274 = unpack2xF16(pa[0].w);
    vec2 _1279 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x * unpack2xF16(sa[5].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1274.x, _1274.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1279.x, _1279.y);
    vec4 _1300 = pa[0];
    _1300.y = pack2xF16(vec2(exp(unpack2xF16(pa[0].z).x), unpack2xF16(pa[0].y).y));
    pa[0] = _1300;
    vec2 _1327 = unpack2xF16(pa[0].w);
    vec2 _1332 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(sa[5].y).x) + unpack2xF16(pa[0].y).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1327.x, _1327.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1332.x, _1332.y);
    vec2 _1349 = vec2(sa[3].z, sa[3].z);
    bvec2 _1350 = lessThan(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _1351 = vec2(_1350.x ? vec2(0.0).x : _1349.x, _1350.y ? vec2(0.0).y : _1349.y);
    vec2 _1359 = unpack2xF16(pa[0].w);
    vec2 _1364 = vec2(pack2xF16(vec2(_1351.x, _1351.y)), pack2xF16(vec2(_1359.x, _1359.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1364.x, _1364.y);
    vec2 _1393 = unpack2xF16(pa[0].w);
    vec2 _1398 = vec2(pack2xF16(vec2(unpack2xF16(r[0].z).x * unpack2xF16(pa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1393.x, _1393.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1398.x, _1398.y);
    vec2 _1427 = unpack2xF16(r[0].y);
    vec2 _1432 = vec2(pack2xF16(vec2(unpack2xF16(sa[7].w).x * unpack2xF16(pa[0].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1427.x, _1427.y)));
    r[0] = vec4(_1432.x, _1432.y, r[0].z, r[0].w);
    vec4 _1453 = internals[2];
    _1453.x = dot(vec3(sa[9].x, sa[9].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
    internals[2] = _1453;
    vec2 _1459 = unpack2xF16(pa[1].x);
    vec2 _1468 = unpack2xF16(sa[8].w);
    vec2 _1480 = (vec2(_1459.x, _1459.x) * vec2(_1468.x, _1468.x)) + vec2(internals[2].x, internals[2].x);
    vec2 _1488 = unpack2xF16(pa[0].w);
    vec2 _1493 = vec2(pack2xF16(vec2(_1480.x, _1480.y)), pack2xF16(vec2(_1488.x, _1488.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1493.x, _1493.y);
    vec2 _1522 = unpack2xF16(pa[0].w);
    vec2 _1527 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x + unpack2xF16(sa[8].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1522.x, _1522.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1527.x, _1527.y);
    vec2 _1556 = unpack2xF16(pa[0].w);
    vec2 _1561 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].z).x, unpack2xF16(sa[3].z).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1556.x, _1556.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1561.x, _1561.y);
    vec2 _1583 = unpack2xF16(pa[0].w);
    vec2 _1588 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].z).x, 0.0), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1583.x, _1583.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1588.x, _1588.y);
    vec4 _1609 = r[0];
    _1609.y = pack2xF16(vec2(log(unpack2xF16(pa[0].z).x), unpack2xF16(r[0].y).y));
    r[0] = _1609;
    vec2 _1635 = unpack2xF16(pa[0].w);
    vec2 _1640 = vec2(pack2xF16(vec2(unpack2xF16(sa[4].w).x * unpack2xF16(r[0].y).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1635.x, _1635.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1640.x, _1640.y);
    vec2 _1662 = unpack2xF16(pa[0].w);
    vec2 _1667 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].z).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1662.x, _1662.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1667.x, _1667.y);
    vec2 _1696 = unpack2xF16(pa[0].w);
    vec2 _1701 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x * unpack2xF16(r[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1696.x, _1696.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1701.x, _1701.y);
    vec2 _1710 = unpack2xF16(pa[0].z);
    vec2 _1719 = unpack2xF16(sa[7].w);
    vec2 _1728 = unpack2xF16(r[0].x);
    vec2 _1733 = (vec2(_1710.x, _1710.x) * vec2(_1719.x, _1719.x)) + vec2(_1728.x, _1728.x);
    vec2 _1741 = unpack2xF16(pa[0].w);
    vec2 _1746 = vec2(pack2xF16(vec2(_1733.x, _1733.y)), pack2xF16(vec2(_1741.x, _1741.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1746.x, _1746.y);
    vec2 _1756 = vec2(r[1].x, r[1].y);
    vec2 _1758 = unpack2xF16(_1756.x);
    vec2 _1760 = unpack2xF16(_1756.y);
    vec2 _1771 = unpack2xF16(sa[7].z);
    vec2 _1782 = unpack2xF16(pa[0].z);
    vec4 _1789 = (vec4(_1758.x, _1758.y, _1760.x, _1760.y) * vec4(_1771.x, _1771.x, _1771.x, _1771.x)) + vec4(_1782.x, _1782.x, _1782.x, _1782.x);
    vec2 _1798 = vec2(pack2xF16(vec2(_1789.x, _1789.y)), pack2xF16(vec2(_1789.z, _1789.w)));
    r[0] = vec4(r[0].x, r[0].y, _1798.x, _1798.y);
    vec2 _1827 = unpack2xF16(pa[0].w);
    vec2 _1832 = vec2(pack2xF16(vec2(unpack2xF16(r[1].y).y * unpack2xF16(sa[7].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1827.x, _1827.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1832.x, _1832.y);
    vec2 _1841 = unpack2xF16(r[1].z);
    vec2 _1850 = unpack2xF16(sa[8].z);
    vec2 _1859 = unpack2xF16(pa[0].z);
    vec2 _1864 = (vec2(_1841.x, _1841.x) * vec2(_1850.x, _1850.x)) + vec2(_1859.x, _1859.x);
    vec2 _1872 = unpack2xF16(pa[0].w);
    vec2 _1877 = vec2(pack2xF16(vec2(_1864.x, _1864.y)), pack2xF16(vec2(_1872.x, _1872.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1877.x, _1877.y);
    vec4 _1890 = vec4(1.0, 1.0, 1.0, unpack2xF16(pa[0].z).x) * vec4(1.0);
    vec2 _1899 = vec2(pack2xF16(vec2(_1890.x, _1890.y)), pack2xF16(vec2(_1890.z, _1890.w)));
    r[0] = vec4(_1899.x, _1899.y, r[0].z, r[0].w);
    vec2 _1909 = vec2(r[0].z, r[0].w);
    vec2 _1911 = unpack2xF16(_1909.x);
    vec4 _1918 = vec4(_1911.x, _1911.y, unpack2xF16(_1909.y).x, 1.0) * vec4(1.0);
    vec2 _1927 = vec2(pack2xF16(vec2(_1918.x, _1918.y)), pack2xF16(vec2(_1918.z, _1918.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1927.x, _1927.y);
    vec2 _1937 = vec2(r[0].x, r[0].y);
    vec2 _1939 = unpack2xF16(_1937.x);
    vec2 _1941 = unpack2xF16(_1937.y);
    vec2 _1953 = vec2(pa[0].z, pa[0].w);
    vec2 _1955 = unpack2xF16(_1953.x);
    vec2 _1957 = unpack2xF16(_1953.y);
    vec2 _1969 = vec2(sa[0].z, sa[0].w);
    vec2 _1971 = unpack2xF16(_1969.x);
    vec2 _1973 = unpack2xF16(_1969.y);
    vec4 _1980 = (vec4(_1939.x, _1939.y, _1941.x, _1941.y) * vec4(_1955.x, _1955.y, _1957.x, _1957.y)) + vec4(_1971.x, _1971.y, _1973.x, _1973.y);
    vec2 _1989 = vec2(pack2xF16(vec2(_1980.x, _1980.y)), pack2xF16(vec2(_1980.z, _1980.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1989.x, _1989.y);
    vec2 _1999 = vec2(pa[0].z, pa[0].w);
    vec2 _2001 = unpack2xF16(_1999.x);
    vec2 _2003 = unpack2xF16(_1999.y);
    vec4 _2009 = min(vec4(_2001.x, _2001.y, _2003.x, _2003.y), vec4(1.0));
    vec2 _2018 = vec2(pack2xF16(vec2(_2009.x, _2009.y)), pack2xF16(vec2(_2009.z, _2009.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _2018.x, _2018.y);
    vec2 _2028 = vec2(pa[0].z, pa[0].w);
    vec2 _2030 = unpack2xF16(_2028.x);
    vec2 _2032 = unpack2xF16(_2028.y);
    vec4 _2038 = max(vec4(_2030.x, _2030.y, _2032.x, _2032.y), vec4(0.0));
    vec2 _2047 = vec2(pack2xF16(vec2(_2038.x, _2038.y)), pack2xF16(vec2(_2038.z, _2038.w)));
    pa[0] = vec4(pa[0].x, pa[0].y, _2047.x, _2047.y);
    vec2 _2064 = vec2(sa[3].z, sa[3].z);
    bvec2 _2065 = lessThanEqual(vec2(pa[0].x, pa[0].y), vec2(0.0));
    vec2 _2066 = vec2(_2065.x ? vec2(0.0).x : _2064.x, _2065.y ? vec2(0.0).y : _2064.y);
    vec2 _2074 = unpack2xF16(r[0].w);
    vec2 _2079 = vec2(pack2xF16(vec2(_2066.x, _2066.y)), pack2xF16(vec2(_2074.x, _2074.y)));
    r[0] = vec4(r[0].x, r[0].y, _2079.x, _2079.y);
    vec2 _2088 = unpack2xF16(sa[3].z);
    vec2 _2091 = vec2(_2088.x, _2088.x);
    bvec2 _2099 = lessThan(vec2(pa[0].x, pa[0].y), vec2(0.0));
    vec2 _2100 = vec2(_2099.x ? _2091.x : vec2(0.0).x, _2099.y ? _2091.y : vec2(0.0).y);
    vec2 _2108 = unpack2xF16(r[0].y);
    vec2 _2113 = vec2(pack2xF16(vec2(_2100.x, _2100.y)), pack2xF16(vec2(_2108.x, _2108.y)));
    r[0] = vec4(_2113.x, _2113.y, r[0].z, r[0].w);
    vec2 _2143 = unpack2xF16(r[0].w);
    vec2 _2148 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(r[0].x).x) + unpack2xF16(r[0].z).x, unpack2xF16(r[0].z).y)), pack2xF16(vec2(_2143.x, _2143.y)));
    r[0] = vec4(r[0].x, r[0].y, _2148.x, _2148.y);
    vec2 _2177 = unpack2xF16(r[0].y);
    vec2 _2182 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].y).x + unpack2xF16(sa[4].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_2177.x, _2177.y)));
    r[0] = vec4(_2182.x, _2182.y, r[0].z, r[0].w);
    vec2 _2191 = unpack2xF16(r[0].x);
    vec2 _2200 = unpack2xF16(r[0].z);
    vec2 _2209 = unpack2xF16(sa[8].y);
    vec2 _2214 = (vec2(_2191.x, _2191.x) * vec2(_2200.x, _2200.x)) + vec2(_2209.x, _2209.x);
    vec2 _2222 = unpack2xF16(r[0].y);
    vec2 _2227 = vec2(pack2xF16(vec2(_2214.x, _2214.y)), pack2xF16(vec2(_2222.x, _2222.y)));
    r[0] = vec4(_2227.x, _2227.y, r[0].z, r[0].w);
    vec2 _2251 = unpack2xF16(r[0].w);
    vec2 _2256 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(r[0].x).x)), unpack2xF16(r[0].z).y)), pack2xF16(vec2(_2251.x, _2251.y)));
    r[0] = vec4(r[0].x, r[0].y, _2256.x, _2256.y);
    vec4 _2277 = internals[1];
    _2277.x = unpack2xF16(sa[4].y).x * unpack2xF16(r[0].z).x;
    internals[1] = _2277;
    vec4 _2286 = internals[0];
    vec4 _2299 = internals[1];
    _2299.x = exp(internals[1].x);
    internals[1] = _2299;
    vec2 _2305 = unpack2xF16(pa[0].z);
    vec2 _2310 = vec2(pack2xF16(vec2(_2286.x * unpack2xF16(sa[3].w).x)), pack2xF16(vec2(_2305.x, _2305.y)));
    pa[0] = vec4(pa[0].x, _2310.x, _2310.y, pa[0].w);
    vec2 _2340 = unpack2xF16(pa[1].y);
    vec2 _2345 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].x).x) * unpack2xF16(sa[4].x).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_2340.x, _2340.y)));
    pa[1] = vec4(_2345.x, _2345.y, pa[1].z, pa[1].w);
    vec2 _2374 = unpack2xF16(pa[1].y);
    vec2 _2379 = vec2(pack2xF16(vec2(min(unpack2xF16(sa[3].z).x, unpack2xF16(pa[1].x).x), unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_2374.x, _2374.y)));
    pa[1] = vec4(_2379.x, _2379.y, pa[1].z, pa[1].w);
    vec2 _2388 = unpack2xF16(pa[0].x);
    vec2 _2397 = unpack2xF16(pa[0].y);
    vec2 _2406 = unpack2xF16(sa[8].y);
    vec2 _2411 = (vec2(_2388.x, _2388.x) * vec2(_2397.x, _2397.x)) + vec2(_2406.x, _2406.x);
    vec2 _2419 = unpack2xF16(pa[0].y);
    vec2 _2424 = vec2(pack2xF16(vec2(_2411.x, _2411.y)), pack2xF16(vec2(_2419.x, _2419.y)));
    pa[0] = vec4(_2424.x, _2424.y, pa[0].z, pa[0].w);
    vec2 _2445 = unpack2xF16(pa[1].y);
    vec2 _2450 = vec2(pack2xF16(vec2(unpack2xF16(pa[1].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2445.x, _2445.y)));
    pa[1] = vec4(_2450.x, _2450.y, pa[1].z, pa[1].w);
    vec2 _2459 = unpack2xF16(pa[1].x);
    vec2 _2463 = max(vec2(_2459.x, _2459.y), vec2(0.0));
    internals[0] = vec4(_2463.x, _2463.y, internals[0].z, internals[0].w);
    vec2 _2491 = unpack2xF16(pa[0].y);
    vec2 _2496 = vec2(pack2xF16(vec2((0.0 - internals[0].x) + unpack2xF16(sa[3].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2491.x, _2491.y)));
    pa[0] = vec4(_2496.x, _2496.y, pa[0].z, pa[0].w);
    vec4 _2518 = internals[2];
    _2518.x = (0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(pa[0].w).y;
    internals[2] = _2518;
    vec4 _2536 = internals[2];
    vec4 _2541 = internals[1];
    vec4 _2547 = internals[1];
    _2547.x = internals[0].y + abs(unpack2xF16(sa[8].y).x);
    internals[1] = _2547;
    vec2 _2553 = unpack2xF16(pa[0].y);
    vec2 _2558 = vec2(pack2xF16(vec2(_2536.x * _2541.x)), pack2xF16(vec2(_2553.x, _2553.y)));
    pa[0] = vec4(_2558.x, _2558.y, pa[0].z, pa[0].w);
    vec2 _2585 = unpack2xF16(pa[0].y);
    vec2 _2590 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x * internals[1].x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_2585.x, _2585.y)));
    pa[0] = vec4(_2590.x, _2590.y, pa[0].z, pa[0].w);
    vec4 _2618 = pa[0];
    _2618.w = pack2xF16(vec2(unpack2xF16(pa[0].w).x, unpack2xF16(pa[0].x).x * unpack2xF16(sa[1].y).x));
    pa[0] = _2618;
}

uvec2 unpack2xU16(float _215)
{
    uint _218 = floatBitsToUint(_215);
    return uvec2(bitfieldExtract(_218, 0, 16), bitfieldExtract(_218, 16, 16));
}

void frag_output_finalize()
{
    vec2 _181 = vec2(pa[0].z, pa[0].w);
    vec2 _192 = unpack2xF16(_181.x);
    vec2 _194 = unpack2xF16(_181.y);
    out_color = vec4(_192.x, _192.y, _194.x, _194.y);
    vec2 _211 = vec2(pa[0].z, pa[0].w);
    uvec2 _224 = unpack2xU16(_211.x);
    uvec2 _226 = unpack2xU16(_211.y);
    out_color_ui = uvec4(_224.x, _224.y, _226.x, _226.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(vec2(8.0356059138242310115050349224177e-41, 2.58287332944350282512661836792e-41).x, vec2(8.0356059138242310115050349224177e-41, 2.58287332944350282512661836792e-41).y, sa[1].z, sa[1].w);
    sa[3] = vec4(sa[3].x, sa[3].y, vec4(2.1523944412029190209388486399333e-41, 3.0569732189178466796875e-05, 3.1389085600875902388691542665694e-41, 2.4393803666966415570640284585911e-41).x, vec4(2.1523944412029190209388486399333e-41, 3.0569732189178466796875e-05, 3.1389085600875902388691542665694e-41, 2.4393803666966415570640284585911e-41).y);
    sa[4] = vec4(vec4(2.1523944412029190209388486399333e-41, 3.0569732189178466796875e-05, 3.1389085600875902388691542665694e-41, 2.4393803666966415570640284585911e-41).z, vec4(2.1523944412029190209388486399333e-41, 3.0569732189178466796875e-05, 3.1389085600875902388691542665694e-41, 2.4393803666966415570640284585911e-41).w, sa[4].z, sa[4].w);
    sa[4] = vec4(sa[4].x, sa[4].y, vec4(6.6006762863556183308791358291288e-41, 3.1501189478021887754365441032357e-41, 0.00785732269287109375, 1.8079552786718789849057959083606e-41).x, vec4(6.6006762863556183308791358291288e-41, 3.1501189478021887754365441032357e-41, 0.00785732269287109375, 1.8079552786718789849057959083606e-41).y);
    sa[5] = vec4(vec4(6.6006762863556183308791358291288e-41, 3.1501189478021887754365441032357e-41, 0.00785732269287109375, 1.8079552786718789849057959083606e-41).z, vec4(6.6006762863556183308791358291288e-41, 3.1501189478021887754365441032357e-41, 0.00785732269287109375, 1.8079552786718789849057959083606e-41).w, sa[5].z, sa[5].w);
    sa[5] = vec4(sa[5].x, sa[5].y, vec4(2.8070810837354735564744151012464e-41, 1.88264448682039173478603069515e-41, 2.0663547154933752527841316435193e-41, 2.3513788231370430450100182407605e-42).x, vec4(2.8070810837354735564744151012464e-41, 1.88264448682039173478603069515e-41, 2.0663547154933752527841316435193e-41, 2.3513788231370430450100182407605e-42).y);
    sa[6] = vec4(vec4(2.8070810837354735564744151012464e-41, 1.88264448682039173478603069515e-41, 2.0663547154933752527841316435193e-41, 2.3513788231370430450100182407605e-42).z, vec4(2.8070810837354735564744151012464e-41, 1.88264448682039173478603069515e-41, 2.0663547154933752527841316435193e-41, 2.3513788231370430450100182407605e-42).w, sa[6].z, sa[6].w);
    sa[6] = vec4(sa[6].x, sa[6].y, vec4(-3.0688941478729248046875e-05, 1.894135134227855234767605277733e-41, 1.7563874951847257166958026596956e-41, 6.6151096605381639467096502438367e-41).x, vec4(-3.0688941478729248046875e-05, 1.894135134227855234767605277733e-41, 1.7563874951847257166958026596956e-41, 6.6151096605381639467096502438367e-41).y);
    sa[7] = vec4(vec4(-3.0688941478729248046875e-05, 1.894135134227855234767605277733e-41, 1.7563874951847257166958026596956e-41, 6.6151096605381639467096502438367e-41).z, vec4(-3.0688941478729248046875e-05, 1.894135134227855234767605277733e-41, 1.7563874951847257166958026596956e-41, 6.6151096605381639467096502438367e-41).w, sa[7].z, sa[7].w);
    sa[7] = vec4(sa[7].x, sa[7].y, vec4(4104.6875, 2.7891444633921158979665913625802e-41, 6.5432230493183008309712629162139e-41, 2.0089014784560577528762587306044e-41).x, vec4(4104.6875, 2.7891444633921158979665913625802e-41, 6.5432230493183008309712629162139e-41, 2.0089014784560577528762587306044e-41).y);
    sa[8] = vec4(vec4(4104.6875, 2.7891444633921158979665913625802e-41, 6.5432230493183008309712629162139e-41, 2.0089014784560577528762587306044e-41).z, vec4(4104.6875, 2.7891444633921158979665913625802e-41, 6.5432230493183008309712629162139e-41, 2.0089014784560577528762587306044e-41).w, sa[8].z, sa[8].w);
    sa[8] = vec4(sa[8].x, sa[8].y, vec2(1.6644623159250177168432059990318e-41, 2.2958874039497802890014385492622e-41).x, vec2(1.6644623159250177168432059990318e-41, 2.2958874039497802890014385492622e-41).y);
    vec2 _268 = vec2(pack2xF16(vec2(v_TexCoord3.x, v_TexCoord3.y)), pack2xF16(vec2(v_TexCoord3.z, v_TexCoord3.w)));
    pa[0] = vec4(_268.x, _268.y, pa[0].z, pa[0].w);
    vec2 _281 = vec2(pack2xF16(vec2(v_TexCoord8.x, v_TexCoord8.y)), pack2xF16(vec2(v_TexCoord8.z, v_TexCoord8.w)));
    pa[1] = vec4(_281.x, _281.y, pa[1].z, pa[1].w);
    frag_init();
    vec4 _294 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _299 = vec2(pack2xF16(_294.xy), pack2xF16(_294.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _299.x, _299.y);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:51:02.957] |I| [load_shader_generic]: Generating vert shader cb9fe8b94bb3fe147a5953a80b15841920cf7fd459a1f010060a1de3ba7efae3
[10:51:02.962] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: cb9fe8b94bb3fe147a5953a80b15841920cf7fd459a1f010060a1de3ba7efae3

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[11];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_colour0;
layout(location = 2) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
layout(location = 11) out vec4 v_TexCoord7;
layout(location = 12) out vec4 v_TexCoord8;
layout(location = 13) out vec4 v_TexCoord9;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _239 = sa[4];
    _239.z = (sa[9].x * (0.0 - sa[15].x)) + sa[15].x;
    sa[4] = _239;
    vec4 _254 = internals[0];
    _254.x = (0.0 - sa[9].x) + sa[4].z;
    internals[0] = _254;
    vec4 _274 = internals[0];
    _274.x = (internals[0].x * sa[14].w) + sa[14].w;
    internals[0] = _274;
    vec4 _289 = sa[15];
    _289.z = (0.0 - sa[9].x) + sa[13].z;
    sa[15] = _289;
    vec4 _303 = sa[7];
    _303.w = internals[0].x + sa[13].y;
    sa[7] = _303;
    vec4 _312 = sa[6];
    _312.w = 1.0 / sa[10].x;
    sa[6] = _312;
    vec4 _321 = sa[5];
    _321.w = 1.0 / sa[10].y;
    sa[5] = _321;
    vec4 _342 = internals[0];
    _342.x = (sa[9].x * (0.0 - sa[15].y)) + sa[15].y;
    internals[0] = _342;
    vec2 _349 = vec2(sa[9].w, sa[9].w);
    sa[16] = vec4(_349.x, _349.y, sa[16].z, sa[16].w);
    vec4 _367 = sa[15];
    _367.x = internals[0].x + sa[15].y;
    sa[15] = _367;
    vec4 _385 = sa[13];
    _385.z = fract(abs(sa[8].x));
    sa[13] = _385;
    vec4 _399 = internals[0];
    _399.x = sa[8].x * sa[14].x;
    internals[0] = _399;
    vec4 _417 = internals[0];
    _417.x = fract(abs(internals[0].x));
    internals[0] = _417;
    vec4 _432 = sa[9];
    _432.x = (internals[0].x * sa[13].w) + 0.0;
    sa[9] = _432;
    vec4 _441 = sa[8];
    _441.z = sa[6].w;
    sa[8] = _441;
    vec4 _450 = sa[8];
    _450.w = 1.0 / sa[10].y;
    sa[8] = _450;
    vec4 _458 = sa[7];
    _458.z = sa[15].z;
    sa[7] = _458;
    vec4 _468 = sa[6];
    _468.z = (0.0 - sa[9].x) * 1.0;
    sa[6] = _468;
    vec4 _478 = sa[5];
    _478.z = (0.0 - sa[13].z) * 1.0;
    sa[5] = _478;
    vec2 _486 = vec2(sa[13].x, 0.0) * vec2(1.0);
    sa[4] = vec4(sa[4].x, sa[4].y, _486.x, _486.y);
}

void primary_program()
{
    vec2 _507 = vec2(sa[8].z, sa[8].w) + vec2(pa[2].x, pa[2].y);
    outs[1] = vec4(_507.x, _507.y, outs[1].z, outs[1].w);
    vec2 _521 = vec2(pa[0].x, pa[0].y);
    vec2 _528 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_521.x, _521.y, _528.x, _528.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[1] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _617 = internals[0];
    _617.x = sa[8].x;
    internals[0] = _617;
    vec4 _638 = outs[3];
    _638.x = (internals[0].x < 0.0) ? sa[6].z : sa[9].x;
    outs[3] = _638;
    vec4 _658 = outs[2];
    _658.x = (internals[0].x < 0.0) ? sa[5].z : sa[13].z;
    outs[2] = _658;
    vec4 _667 = outs[0];
    _667.x = 1.0 / internals[1].w;
    outs[0] = _667;
    vec2 _674 = vec2(pa[2].z, pa[2].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _674.x, _674.y);
    vec4 _691 = internals[0];
    _691.x = outs[1].x * sa[10].x;
    internals[0] = _691;
    vec2 _706 = vec2(pa[1].x, pa[1].y) * vec2(sa[14].z, sa[14].z);
    pa[1] = vec4(pa[1].x, pa[1].y, _706.x, _706.y);
    vec4 _730 = pa[2];
    _730.x = (pa[1].y * (0.0 - sa[14].y)) + pa[1].z;
    pa[2] = _730;
    vec4 _750 = pa[2];
    _750.y = (pa[1].x * sa[14].y) + pa[1].w;
    pa[2] = _750;
    vec4 _764 = internals[2];
    _764.x = sa[10].y * outs[1].y;
    internals[2] = _764;
    vec4 _784 = outs[10];
    _784.x = (internals[0].x * sa[6].w) + sa[6].w;
    outs[10] = _784;
    vec4 _799 = outs[5];
    _799.x = (internals[0].x * sa[6].w) + 0.0;
    outs[5] = _799;
    vec2 _814 = vec2(sa[4].x, sa[4].y) * vec2(pa[0].x, pa[0].x);
    pa[1] = vec4(pa[1].x, pa[1].y, _814.x, _814.y);
    vec2 _840 = (vec2(pa[0].y, pa[0].y) * vec2(sa[5].x, sa[5].y)) + vec2(pa[1].z, pa[1].w);
    pa[0] = vec4(_840.x, _840.y, pa[0].z, pa[0].w);
    vec2 _866 = (vec2(pa[0].z, pa[0].z) * vec2(sa[6].x, sa[6].y)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_866.x, _866.y, pa[0].z, pa[0].w);
    vec2 _892 = (vec2(pa[0].w, pa[0].w) * vec2(sa[7].x, sa[7].y)) + vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_892.x, _892.y, pa[0].z, pa[0].w);
    vec4 _915 = outs[5];
    _915.y = (internals[2].x * sa[5].w) + sa[5].w;
    outs[5] = _915;
    vec2 _939 = vec2(vec2(outs[5].x, outs[5].y).x, vec2(outs[5].x, outs[5].y).y);
    outs[9] = vec4(_939.x, _939.y, outs[9].z, outs[9].w);
    vec4 _957 = outs[5];
    _957.y = (internals[2].x * sa[5].w) + 0.0;
    outs[5] = _957;
    vec2 _973 = (vec2(internals[1].x, internals[1].y) * vec2(outs[0].x, outs[0].x)) + vec2(0.0);
    internals[1] = vec4(_973.x, _973.y, internals[1].z, internals[1].w);
    internals[1] = vec4(internals[1].x, internals[1].y, internals[1].z, 1.0) * vec4(1.0);
    vec2 _994 = vec2(internals[1].x, internals[1].y);
    outs[0] = vec4(_994.x, _994.y, outs[0].z, outs[0].w);
    vec2 _1004 = vec2(internals[1].z, internals[1].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _1004.x, _1004.y);
    vec4 _1015 = outs[2];
    _1015.z = sa[15].x;
    outs[2] = _1015;
    vec4 _1023 = outs[2];
    _1023.w = outs[2].x;
    outs[2] = _1023;
    vec2 _1030 = vec2(sa[10].x, sa[10].y);
    outs[5] = vec4(outs[5].x, outs[5].y, _1030.x, _1030.y);
    vec4 _1041 = outs[10];
    _1041.y = outs[5].y;
    outs[10] = _1041;
    vec2 _1065 = vec2(vec2(outs[10].x, outs[10].y).x, vec2(outs[10].x, outs[10].y).y);
    outs[6] = vec4(_1065.x, _1065.y, outs[6].z, outs[6].w);
    vec2 _1083 = vec2(sa[10].x, sa[10].y) * vec2(outs[1].x, outs[1].y);
    outs[6] = vec4(outs[6].x, outs[6].y, _1083.x, _1083.y);
    vec2 _1093 = vec2(pa[1].x, pa[1].y);
    outs[9] = vec4(outs[9].x, outs[9].y, _1093.x, _1093.y);
    vec4 _1104 = outs[10];
    _1104.y = outs[9].y;
    outs[10] = _1104;
    vec4 _1118 = outs[10];
    _1118.z = sa[10].z * pa[1].x;
    outs[10] = _1118;
    vec4 _1139 = outs[10];
    _1139.w = (pa[1].y * (0.0 - sa[10].z)) + sa[10].z;
    outs[10] = _1139;
    vec2 _1163 = vec2(vec2(sa[9].x, sa[9].y).y, vec2(sa[9].z, sa[9].w).x);
    outs[4] = vec4(_1163.x, _1163.y, outs[4].z, outs[4].w);
    vec2 _1173 = vec2(sa[9].w, sa[9].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _1173.x, _1173.y);
    vec2 _1191 = vec2(sa[12].w, sa[12].w) * vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(pa[0].x, pa[0].y, _1191.x, _1191.y);
    vec2 _1209 = vec2(sa[12].z, sa[12].z) * vec2(pa[0].x, pa[0].y);
    pa[1] = vec4(_1209.x, _1209.y, pa[1].z, pa[1].w);
    vec2 _1219 = vec2(sa[7].z, sa[7].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _1219.x, _1219.y);
    vec2 _1229 = vec2(outs[3].x, 0.0) * vec2(1.0);
    pa[0] = vec4(_1229.x, _1229.y, pa[0].z, pa[0].w);
    vec2 _1256 = (vec2(pa[0].x, pa[0].y) * (vec2(0.0) - vec2(sa[4].z, sa[4].w))) + vec2(pa[2].x, pa[2].y);
    pa[0] = vec4(_1256.x, _1256.y, pa[0].z, pa[0].w);
    vec2 _1274 = vec2(sa[12].x, sa[12].y) * vec2(pa[0].x, pa[0].y);
    outs[3] = vec4(_1274.x, _1274.y, outs[3].z, outs[3].w);
    vec2 _1284 = vec2(sa[11].z, sa[11].w);
    pa[0] = vec4(_1284.x, _1284.y, pa[0].z, pa[0].w);
    vec2 _1310 = (vec2(pa[0].x, pa[0].y) * vec2(outs[3].x, outs[3].x)) + vec2(pa[0].z, pa[0].w);
    pa[0] = vec4(_1310.x, _1310.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _1329 = vec2(internals[0].x, internals[0].y);
    outs[7] = vec4(_1329.x, _1329.y, outs[7].z, outs[7].w);
    vec2 _1339 = vec2(internals[0].z, internals[0].w);
    outs[7] = vec4(outs[7].x, outs[7].y, _1339.x, _1339.y);
    vec2 _1349 = vec2(sa[11].x, sa[11].y);
    pa[0] = vec4(_1349.x, _1349.y, pa[0].z, pa[0].w);
    vec2 _1376 = (vec2(pa[0].x, pa[0].y) * (vec2(0.0) - vec2(outs[3].x, outs[3].x))) + vec2(pa[1].x, pa[1].y);
    pa[0] = vec4(_1376.x, _1376.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _1395 = vec2(internals[0].x, internals[0].y);
    outs[8] = vec4(_1395.x, _1395.y, outs[8].z, outs[8].w);
    vec2 _1405 = vec2(internals[0].z, internals[0].w);
    outs[8] = vec4(outs[8].x, outs[8].y, _1405.x, _1405.y);
    vec2 _1415 = vec2(sa[16].x, sa[16].y);
    outs[2] = vec4(_1415.x, _1415.y, outs[2].z, outs[2].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
    v_TexCoord7 = outs[8];
    v_TexCoord8 = outs[9];
    v_TexCoord9 = outs[10];
}

void main()
{
    int i = 0;
    while (i < 11)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[11] = vec4(0.20000000298023223876953125, 0.680000007152557373046875, 0.1500000059604644775390625, 0.510000050067901611328125);
    sa[12] = vec4(0.4000000059604644775390625, 0.5, 0.02999999932944774627685546875, 0.0500000007450580596923828125);
    sa[13] = vec4(1.2400000095367431640625, -0.10999999940395355224609375, 1.0, 2.0);
    sa[14] = vec4(0.5, 0.72483599185943603515625, -0.68892002105712890625, 0.10999999940395355224609375);
    sa[15] = vec4(vec2(0.20000000298023223876953125, 0.449999988079071044921875).x, vec2(0.20000000298023223876953125, 0.449999988079071044921875).y, sa[15].z, sa[15].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_colour0;
    pa[2] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:51:03.045] |E| [compile_program]: Vertex info
-----------
0(42) : warning C7050: "internals[0]" might be used before being initialized
0(42) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(38) : warning C7050: "pa[0].zw" might be used before being initialized
0(38) : warning C7050: "pa[1].zw" might be used before being initialized
0(40) : warning C7050: "internals[0]" might be used before being initialized
0(40) : warning C7050: "internals[1]" might be used before being initialized
0(40) : warning C7050: "internals[2]" might be used before being initialized
0(41) : warning C7050: "r[0].zw" might be used before being initialized
0(41) : warning C7050: "r[1]" might be used before being initialized


[10:51:39.796] |I| [do_trophy_callback]: Trophy unlocked, name: Un héros est né, detail: Sauvetage de Pueblucho, id = 16
[10:52:34.115] |I| [load_shader_generic]: Generating frag shader d06c2ab965e752130818cd2e10ae6946e64a8f1aec8aa5a73c27bc7be2e8786f
[10:52:34.122] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: d06c2ab965e752130818cd2e10ae6946e64a8f1aec8aa5a73c27bc7be2e8786f

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[3];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 1) uniform sampler2D fragTex_sampler1;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _230)
{
    return uintBitsToFloat(packHalf2x16(_230));
}

vec2 unpack2xF16(float _156)
{
    return unpackHalf2x16(floatBitsToUint(_156));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _276 = vec2(sa[0].z, sa[0].w);
    vec2 _278 = unpack2xF16(_276.x);
    vec2 _280 = unpack2xF16(_276.y);
    vec2 _292 = vec2(sa[0].x, sa[0].y);
    vec2 _294 = unpack2xF16(_292.x);
    vec2 _296 = unpack2xF16(_292.y);
    vec4 _302 = vec4(_278.x, _278.y, _280.x, _280.y) + vec4(_294.x, _294.y, _296.x, _296.y);
    vec2 _311 = vec2(pack2xF16(vec2(_302.x, _302.y)), pack2xF16(vec2(_302.z, _302.w)));
    sa[7] = vec4(sa[7].x, sa[7].y, _311.x, _311.y);
    vec2 _335 = unpack2xF16(sa[0].y);
    vec2 _340 = vec2(pack2xF16(vec2(abs(unpack2xF16(sa[1].x).x) * 1.0, unpack2xF16(sa[0].x).y)), pack2xF16(vec2(_335.x, _335.y)));
    sa[0] = vec4(_340.x, _340.y, sa[0].z, sa[0].w);
    vec4 _353 = internals[2];
    _353.x = unpack2xF16(sa[0].x).x;
    internals[2] = _353;
    vec4 _373 = internals[0];
    _373.x = (internals[2].x * sa[5].x) + sa[7].y;
    internals[0] = _373;
    vec4 _384 = internals[1];
    _384.x = log(abs(internals[0].x));
    internals[1] = _384;
    vec4 _399 = internals[0];
    _399.x = (internals[2].x * sa[4].w) + 0.0;
    internals[0] = _399;
    vec4 _416 = internals[0];
    _416.x = (internals[1].x * abs(internals[0].x)) + 0.0;
    internals[0] = _416;
    vec4 _425 = internals[1];
    _425.x = exp(internals[0].x);
    internals[1] = _425;
    vec2 _449 = unpack2xF16(sa[1].y);
    vec2 _454 = vec2(pack2xF16(vec2(unpack2xF16(sa[4].z).x + internals[1].x, unpack2xF16(sa[1].x).y)), pack2xF16(vec2(_449.x, _449.y)));
    sa[1] = vec4(_454.x, _454.y, sa[1].z, sa[1].w);
    vec4 _472 = internals[0];
    _472.x = (internals[2].x * sa[4].x) + 0.0;
    internals[0] = _472;
    vec4 _486 = internals[0];
    _486.x = max(internals[0].x, sa[7].y);
    internals[0] = _486;
    vec4 _495 = internals[0];
    _495.x = 1.0 / internals[0].x;
    internals[0] = _495;
    vec4 _512 = internals[0];
    _512.x = (abs(internals[0].x) * sa[3].w) + 0.0;
    internals[0] = _512;
    vec4 _521 = sa[0];
    _521.w = exp(internals[0].x);
    sa[0] = _521;
    vec2 _547 = unpack2xF16(sa[0].w);
    vec2 _552 = vec2(pack2xF16(vec2(unpack2xF16(sa[3].z).x * unpack2xF16(sa[1].z).x, unpack2xF16(sa[0].z).y)), pack2xF16(vec2(_547.x, _547.y)));
    sa[0] = vec4(sa[0].x, sa[0].y, _552.x, _552.y);
    vec4 _564 = sa[0];
    _564.x = sa[6].w;
    sa[0] = _564;
    vec2 _570 = unpack2xF16(sa[6].z);
    vec2 _573 = vec2(_570.x, _570.y);
    vec2 _590 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].x).x, _573.x)), pack2xF16(vec2(_573.y, unpack2xF16(sa[0].y).y)));
    sa[0] = vec4(_590.x, _590.y, sa[0].z, sa[0].w);
}

void primary_program()
{
    vec2 _602 = unpack2xF16(pa[0].z);
    vec2 _614 = vec2(sa[0].x, sa[0].y);
    vec2 _616 = unpack2xF16(_614.x);
    vec4 _624 = vec4(_602.x, _602.y, _602.x, _602.y) + vec4(_616.x, _616.x, _616.y, unpack2xF16(_614.y).x);
    vec2 _633 = vec2(pack2xF16(vec2(_624.x, _624.y)), pack2xF16(vec2(_624.z, _624.w)));
    r[0] = vec4(_633.x, _633.y, r[0].z, r[0].w);
    vec2 _643 = vec2(r[0].x, r[0].y);
    vec2 _645 = unpack2xF16(_643.x);
    vec2 _647 = unpack2xF16(_643.y);
    vec4 _654 = min(vec4(_645.x, _645.y, _647.x, _647.y), vec4(1.0));
    vec2 _663 = vec2(pack2xF16(vec2(_654.x, _654.y)), pack2xF16(vec2(_654.z, _654.w)));
    r[0] = vec4(_663.x, _663.y, r[0].z, r[0].w);
    vec2 _672 = unpack2xF16(r[0].x);
    vec2 _676 = max(vec2(_672.x, _672.y), vec2(0.0));
    vec2 _684 = unpack2xF16(r[0].y);
    vec2 _689 = vec2(pack2xF16(vec2(_676.x, _676.y)), pack2xF16(vec2(_684.x, _684.y)));
    r[0] = vec4(_689.x, _689.y, r[0].z, r[0].w);
    vec2 _698 = unpack2xF16(r[0].x);
    vec4 _703 = texture(fragTex_sampler1, vec2(_698.x, _698.y));
    vec2 _712 = vec2(pack2xF16(vec2(_703.x, _703.y)), pack2xF16(vec2(_703.z, _703.w)));
    r[0] = vec4(r[0].x, r[0].y, _712.x, _712.y);
    vec2 _721 = unpack2xF16(r[0].y);
    vec2 _725 = max(vec2(_721.x, _721.y), vec2(0.0));
    vec2 _733 = unpack2xF16(r[0].y);
    vec2 _738 = vec2(pack2xF16(vec2(_725.x, _725.y)), pack2xF16(vec2(_733.x, _733.y)));
    r[0] = vec4(_738.x, _738.y, r[0].z, r[0].w);
    vec2 _747 = unpack2xF16(r[0].x);
    vec4 _752 = texture(fragTex_sampler1, vec2(_747.x, _747.y));
    vec2 _761 = vec2(pack2xF16(vec2(_752.x, _752.y)), pack2xF16(vec2(_752.z, _752.w)));
    r[0] = vec4(_761.x, _761.y, r[0].z, r[0].w);
    vec2 _790 = unpack2xF16(pa[0].y);
    vec2 _795 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(r[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_790.x, _790.y)));
    pa[0] = vec4(_795.x, _795.y, pa[0].z, pa[0].w);
    vec2 _824 = unpack2xF16(r[0].y);
    vec2 _829 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(r[0].z).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_824.x, _824.y)));
    r[0] = vec4(_829.x, _829.y, r[0].z, r[0].w);
    vec2 _838 = unpack2xF16(pa[0].z);
    vec2 _847 = unpack2xF16(sa[6].y);
    vec2 _851 = vec2(_838.x, _838.y) + vec2(_847.x, _847.y);
    vec2 _859 = unpack2xF16(pa[0].y);
    vec2 _864 = vec2(pack2xF16(vec2(_851.x, _851.y)), pack2xF16(vec2(_859.x, _859.y)));
    pa[0] = vec4(_864.x, _864.y, pa[0].z, pa[0].w);
    vec2 _873 = unpack2xF16(pa[0].x);
    vec2 _878 = min(vec2(_873.x, _873.y), vec2(1.0));
    vec2 _886 = unpack2xF16(pa[0].y);
    vec2 _891 = vec2(pack2xF16(vec2(_878.x, _878.y)), pack2xF16(vec2(_886.x, _886.y)));
    pa[0] = vec4(_891.x, _891.y, pa[0].z, pa[0].w);
    vec2 _900 = unpack2xF16(pa[0].x);
    vec2 _904 = max(vec2(_900.x, _900.y), vec2(0.0));
    vec2 _912 = unpack2xF16(pa[0].y);
    vec2 _917 = vec2(pack2xF16(vec2(_904.x, _904.y)), pack2xF16(vec2(_912.x, _912.y)));
    pa[0] = vec4(_917.x, _917.y, pa[0].z, pa[0].w);
    vec2 _926 = unpack2xF16(pa[0].x);
    vec4 _931 = texture(fragTex_sampler1, vec2(_926.x, _926.y));
    vec2 _940 = vec2(pack2xF16(vec2(_931.x, _931.y)), pack2xF16(vec2(_931.z, _931.w)));
    pa[0] = vec4(_940.x, _940.y, pa[0].z, pa[0].w);
    vec2 _969 = unpack2xF16(r[0].y);
    vec2 _974 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_969.x, _969.y)));
    r[0] = vec4(_974.x, _974.y, r[0].z, r[0].w);
    vec2 _983 = unpack2xF16(pa[0].z);
    vec2 _992 = unpack2xF16(sa[6].x);
    vec2 _996 = vec2(_983.x, _983.y) + vec2(_992.x, _992.y);
    vec2 _1004 = unpack2xF16(pa[0].y);
    vec2 _1009 = vec2(pack2xF16(vec2(_996.x, _996.y)), pack2xF16(vec2(_1004.x, _1004.y)));
    pa[0] = vec4(_1009.x, _1009.y, pa[0].z, pa[0].w);
    vec2 _1018 = unpack2xF16(pa[0].x);
    vec2 _1022 = min(vec2(_1018.x, _1018.y), vec2(1.0));
    vec2 _1030 = unpack2xF16(pa[0].y);
    vec2 _1035 = vec2(pack2xF16(vec2(_1022.x, _1022.y)), pack2xF16(vec2(_1030.x, _1030.y)));
    pa[0] = vec4(_1035.x, _1035.y, pa[0].z, pa[0].w);
    vec2 _1044 = unpack2xF16(pa[0].x);
    vec2 _1048 = max(vec2(_1044.x, _1044.y), vec2(0.0));
    vec2 _1056 = unpack2xF16(pa[0].y);
    vec2 _1061 = vec2(pack2xF16(vec2(_1048.x, _1048.y)), pack2xF16(vec2(_1056.x, _1056.y)));
    pa[0] = vec4(_1061.x, _1061.y, pa[0].z, pa[0].w);
    vec2 _1070 = unpack2xF16(pa[0].x);
    vec4 _1075 = texture(fragTex_sampler1, vec2(_1070.x, _1070.y));
    vec2 _1084 = vec2(pack2xF16(vec2(_1075.x, _1075.y)), pack2xF16(vec2(_1075.z, _1075.w)));
    pa[0] = vec4(_1084.x, _1084.y, pa[0].z, pa[0].w);
    vec2 _1113 = unpack2xF16(r[0].y);
    vec2 _1118 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1113.x, _1113.y)));
    r[0] = vec4(_1118.x, _1118.y, r[0].z, r[0].w);
    vec2 _1127 = unpack2xF16(pa[0].z);
    vec2 _1136 = unpack2xF16(sa[5].w);
    vec2 _1140 = vec2(_1127.x, _1127.y) + vec2(_1136.x, _1136.x);
    vec2 _1148 = unpack2xF16(pa[0].y);
    vec2 _1153 = vec2(pack2xF16(vec2(_1140.x, _1140.y)), pack2xF16(vec2(_1148.x, _1148.y)));
    pa[0] = vec4(_1153.x, _1153.y, pa[0].z, pa[0].w);
    vec2 _1162 = unpack2xF16(pa[0].x);
    vec2 _1166 = min(vec2(_1162.x, _1162.y), vec2(1.0));
    vec2 _1174 = unpack2xF16(pa[0].y);
    vec2 _1179 = vec2(pack2xF16(vec2(_1166.x, _1166.y)), pack2xF16(vec2(_1174.x, _1174.y)));
    pa[0] = vec4(_1179.x, _1179.y, pa[0].z, pa[0].w);
    vec2 _1188 = unpack2xF16(pa[0].x);
    vec2 _1192 = max(vec2(_1188.x, _1188.y), vec2(0.0));
    vec2 _1200 = unpack2xF16(pa[0].y);
    vec2 _1205 = vec2(pack2xF16(vec2(_1192.x, _1192.y)), pack2xF16(vec2(_1200.x, _1200.y)));
    pa[0] = vec4(_1205.x, _1205.y, pa[0].z, pa[0].w);
    vec2 _1214 = unpack2xF16(pa[0].x);
    vec4 _1219 = texture(fragTex_sampler1, vec2(_1214.x, _1214.y));
    vec2 _1228 = vec2(pack2xF16(vec2(_1219.x, _1219.y)), pack2xF16(vec2(_1219.z, _1219.w)));
    pa[0] = vec4(_1228.x, _1228.y, pa[0].z, pa[0].w);
    vec2 _1257 = unpack2xF16(r[0].y);
    vec2 _1262 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1257.x, _1257.y)));
    r[0] = vec4(_1262.x, _1262.y, r[0].z, r[0].w);
    vec2 _1271 = unpack2xF16(pa[0].z);
    vec2 _1280 = unpack2xF16(sa[5].z);
    vec2 _1284 = vec2(_1271.x, _1271.y) + vec2(_1280.x, _1280.y);
    vec2 _1292 = unpack2xF16(pa[0].y);
    vec2 _1297 = vec2(pack2xF16(vec2(_1284.x, _1284.y)), pack2xF16(vec2(_1292.x, _1292.y)));
    pa[0] = vec4(_1297.x, _1297.y, pa[0].z, pa[0].w);
    vec2 _1306 = unpack2xF16(pa[0].x);
    vec2 _1310 = min(vec2(_1306.x, _1306.y), vec2(1.0));
    vec2 _1318 = unpack2xF16(pa[0].y);
    vec2 _1323 = vec2(pack2xF16(vec2(_1310.x, _1310.y)), pack2xF16(vec2(_1318.x, _1318.y)));
    pa[0] = vec4(_1323.x, _1323.y, pa[0].z, pa[0].w);
    vec2 _1332 = unpack2xF16(pa[0].x);
    vec2 _1336 = max(vec2(_1332.x, _1332.y), vec2(0.0));
    vec2 _1344 = unpack2xF16(pa[0].y);
    vec2 _1349 = vec2(pack2xF16(vec2(_1336.x, _1336.y)), pack2xF16(vec2(_1344.x, _1344.y)));
    pa[0] = vec4(_1349.x, _1349.y, pa[0].z, pa[0].w);
    vec2 _1358 = unpack2xF16(pa[0].x);
    vec4 _1363 = texture(fragTex_sampler1, vec2(_1358.x, _1358.y));
    vec2 _1372 = vec2(pack2xF16(vec2(_1363.x, _1363.y)), pack2xF16(vec2(_1363.z, _1363.w)));
    pa[0] = vec4(_1372.x, _1372.y, pa[0].z, pa[0].w);
    vec2 _1401 = unpack2xF16(r[0].y);
    vec2 _1406 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_1401.x, _1401.y)));
    r[0] = vec4(_1406.x, _1406.y, r[0].z, r[0].w);
    vec2 _1415 = unpack2xF16(pa[0].z);
    vec2 _1424 = unpack2xF16(sa[5].y);
    vec2 _1428 = vec2(_1415.x, _1415.y) + vec2(_1424.x, _1424.y);
    vec2 _1436 = unpack2xF16(pa[0].y);
    vec2 _1441 = vec2(pack2xF16(vec2(_1428.x, _1428.y)), pack2xF16(vec2(_1436.x, _1436.y)));
    pa[0] = vec4(_1441.x, _1441.y, pa[0].z, pa[0].w);
    vec2 _1450 = unpack2xF16(pa[0].x);
    vec2 _1454 = min(vec2(_1450.x, _1450.y), vec2(1.0));
    vec2 _1462 = unpack2xF16(pa[0].y);
    vec2 _1467 = vec2(pack2xF16(vec2(_1454.x, _1454.y)), pack2xF16(vec2(_1462.x, _1462.y)));
    pa[0] = vec4(_1467.x, _1467.y, pa[0].z, pa[0].w);
    vec2 _1476 = unpack2xF16(pa[0].x);
    vec2 _1480 = max(vec2(_1476.x, _1476.y), vec2(0.0));
    vec2 _1488 = unpack2xF16(pa[0].y);
    vec2 _1493 = vec2(pack2xF16(vec2(_1480.x, _1480.y)), pack2xF16(vec2(_1488.x, _1488.y)));
    pa[0] = vec4(_1493.x, _1493.y, pa[0].z, pa[0].w);
    vec2 _1502 = unpack2xF16(pa[0].x);
    vec4 _1507 = texture(fragTex_sampler1, vec2(_1502.x, _1502.y));
    vec2 _1516 = vec2(pack2xF16(vec2(_1507.x, _1507.y)), pack2xF16(vec2(_1507.z, _1507.w)));
    pa[0] = vec4(_1516.x, _1516.y, pa[0].z, pa[0].w);
    vec2 _1545 = unpack2xF16(pa[0].y);
    vec2 _1550 = vec2(pack2xF16(vec2(unpack2xF16(r[0].x).x + unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1545.x, _1545.y)));
    pa[0] = vec4(_1550.x, _1550.y, pa[0].z, pa[0].w);
    vec2 _1579 = unpack2xF16(pa[0].y);
    vec2 _1584 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(r[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1579.x, _1579.y)));
    pa[0] = vec4(_1584.x, _1584.y, pa[0].z, pa[0].w);
    vec4 _1613 = internals[0];
    _1613.x = (unpack2xF16(pa[0].x).x * unpack2xF16(sa[4].y).x) + unpack2xF16(sa[1].x).x;
    internals[0] = _1613;
    vec4 _1628 = internals[0];
    _1628.x = (internals[0].x * sa[0].w) + 0.0;
    internals[0] = _1628;
    vec2 _1647 = unpack2xF16(pa[0].y);
    vec2 _1652 = vec2(pack2xF16(vec2(log(abs(internals[0].x)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1647.x, _1647.y)));
    pa[0] = vec4(_1652.x, _1652.y, pa[0].z, pa[0].w);
    vec2 _1681 = unpack2xF16(pa[0].y);
    vec2 _1686 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].z).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1681.x, _1681.y)));
    pa[0] = vec4(_1686.x, _1686.y, pa[0].z, pa[0].w);
    vec2 _1708 = unpack2xF16(pa[0].y);
    vec2 _1713 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1708.x, _1708.y)));
    pa[0] = vec4(_1713.x, _1713.y, pa[0].z, pa[0].w);
    vec2 _1742 = unpack2xF16(pa[0].y);
    vec2 _1747 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[7].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1742.x, _1742.y)));
    pa[0] = vec4(_1747.x, _1747.y, pa[0].z, pa[0].w);
    vec2 _1769 = unpack2xF16(pa[0].y);
    vec2 _1774 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1769.x, _1769.y)));
    pa[0] = vec4(_1774.x, _1774.y, pa[0].z, pa[0].w);
    vec2 _1783 = unpack2xF16(pa[0].x);
    vec2 _1795 = vec2(sa[7].z, sa[7].w);
    vec2 _1797 = unpack2xF16(_1795.x);
    vec3 _1804 = vec3(_1783.x, _1783.x, _1783.x) * vec3(_1797.x, _1797.y, unpack2xF16(_1795.y).x);
    vec2 _1817 = vec2(pack2xF16(vec2(_1804.x, _1804.y)), pack2xF16(vec2(_1804.z, unpack2xF16(r[0].y).y)));
    r[0] = vec4(_1817.x, _1817.y, r[0].z, r[0].w);
    vec2 _1847 = unpack2xF16(pa[0].y);
    vec2 _1852 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[7].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_1847.x, _1847.y)));
    pa[0] = vec4(_1852.x, _1852.y, pa[0].z, pa[0].w);
    vec2 _1861 = unpack2xF16(pa[0].x);
    vec2 _1873 = vec2(sa[2].x, sa[2].y);
    vec2 _1875 = unpack2xF16(_1873.x);
    vec2 _1877 = unpack2xF16(_1873.y);
    vec2 _1889 = vec2(r[0].x, r[0].y);
    vec2 _1891 = unpack2xF16(_1889.x);
    vec2 _1893 = unpack2xF16(_1889.y);
    vec4 _1900 = (vec4(_1861.x, _1861.x, _1861.x, _1861.x) * vec4(_1875.x, _1875.y, _1877.x, _1877.y)) + vec4(_1891.x, _1891.y, _1893.x, _1893.y);
    vec2 _1909 = vec2(pack2xF16(vec2(_1900.x, _1900.y)), pack2xF16(vec2(_1900.z, _1900.w)));
    pa[0] = vec4(_1909.x, _1909.y, pa[0].z, pa[0].w);
    vec2 _1927 = vec2(pa[0].x, pa[0].y);
    vec2 _1929 = unpack2xF16(_1927.x);
    vec4 _1936 = vec4(1.0, 1.0, 1.0, unpack2xF16(sa[7].w).y) * vec4(_1929.x, _1929.y, unpack2xF16(_1927.y).x, 1.0);
    vec2 _1945 = vec2(pack2xF16(vec2(_1936.x, _1936.y)), pack2xF16(vec2(_1936.z, _1936.w)));
    pa[0] = vec4(_1945.x, _1945.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _186)
{
    uint _189 = floatBitsToUint(_186);
    return uvec2(bitfieldExtract(_189, 0, 16), bitfieldExtract(_189, 16, 16));
}

void frag_output_finalize()
{
    vec2 _152 = vec2(pa[0].x, pa[0].y);
    vec2 _163 = unpack2xF16(_152.x);
    vec2 _165 = unpack2xF16(_152.y);
    out_color = vec4(_163.x, _163.y, _165.x, _165.y);
    vec2 _182 = vec2(pa[0].x, pa[0].y);
    uvec2 _195 = unpack2xU16(_182.x);
    uvec2 _197 = unpack2xU16(_182.y);
    out_color_ui = uvec4(_195.x, _195.y, _197.x, _197.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 3)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[3] = vec4(sa[3].x, sa[3].y, vec4(1.8958166923850450152527137532329e-41, 3.45943164825439453125, 0.066666670143604278564453125, 1.6899659479757293875340178774476e-41).x, vec4(1.8958166923850450152527137532329e-41, 3.45943164825439453125, 0.066666670143604278564453125, 1.6899659479757293875340178774476e-41).y);
    sa[4] = vec4(vec4(1.8958166923850450152527137532329e-41, 3.45943164825439453125, 0.066666670143604278564453125, 1.6899659479757293875340178774476e-41).z, vec4(1.8958166923850450152527137532329e-41, 3.45943164825439453125, 0.066666670143604278564453125, 1.6899659479757293875340178774476e-41).w, sa[4].z, sa[4].w);
    sa[4] = vec4(sa[4].x, sa[4].y, vec4(6.744309378948912080648818111416e-41, 0.000666666659526526927947998046875, 0.00999999977648258209228515625, 7.1418565505965148076938930898905e-15).x, vec4(6.744309378948912080648818111416e-41, 0.000666666659526526927947998046875, 0.00999999977648258209228515625, 7.1418565505965148076938930898905e-15).y);
    sa[5] = vec4(vec4(6.744309378948912080648818111416e-41, 0.000666666659526526927947998046875, 0.00999999977648258209228515625, 7.1418565505965148076938930898905e-15).z, vec4(6.744309378948912080648818111416e-41, 0.000666666659526526927947998046875, 0.00999999977648258209228515625, 7.1418565505965148076938930898905e-15).w, sa[5].z, sa[5].w);
    sa[5] = vec4(sa[5].x, sa[5].y, vec4(-7.1054273576010018587112426757812e-15, -7.1418565505965148076938930898905e-15, 6.0267044353681732586287761918133e-41, 7.1054273576010018587112426757812e-15).x, vec4(-7.1054273576010018587112426757812e-15, -7.1418565505965148076938930898905e-15, 6.0267044353681732586287761918133e-41, 7.1054273576010018587112426757812e-15).y);
    sa[6] = vec4(vec4(-7.1054273576010018587112426757812e-15, -7.1418565505965148076938930898905e-15, 6.0267044353681732586287761918133e-41, 7.1054273576010018587112426757812e-15).z, vec4(-7.1054273576010018587112426757812e-15, -7.1418565505965148076938930898905e-15, 6.0267044353681732586287761918133e-41, 7.1054273576010018587112426757812e-15).w, sa[6].z, sa[6].w);
    sa[6] = vec4(sa[6].x, sa[6].y, vec4(1.4349296274686126806258990932889e-41, 7.1141009749808858941833022981882e-15, 2.1523944412029190209388486399333e-41, 1.0).x, vec4(1.4349296274686126806258990932889e-41, 7.1141009749808858941833022981882e-15, 2.1523944412029190209388486399333e-41, 1.0).y);
    sa[7] = vec4(vec4(1.4349296274686126806258990932889e-41, 7.1141009749808858941833022981882e-15, 2.1523944412029190209388486399333e-41, 1.0).z, vec4(1.4349296274686126806258990932889e-41, 7.1141009749808858941833022981882e-15, 2.1523944412029190209388486399333e-41, 1.0).w, sa[7].z, sa[7].w);
    vec2 _225 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _241 = unpack2xF16(pa[0].w);
    vec2 _246 = vec2(pack2xF16(vec2(_225.x, _225.y)), pack2xF16(vec2(_241.x, _241.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _246.x, _246.y);
    frag_init();
    vec4 _259 = texture(fragTex_sampler1, v_TexCoord0.xy);
    vec2 _264 = vec2(pack2xF16(_259.xy), pack2xF16(_259.zw));
    pa[0] = vec4(_264.x, _264.y, pa[0].z, pa[0].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:52:34.128] |I| [load_shader_generic]: Generating vert shader aafb497477cb38dd3abe6ab55042108fa2ae59ffcb41679b34aa259753f2b669
[10:52:34.129] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: aafb497477cb38dd3abe6ab55042108fa2ae59ffcb41679b34aa259753f2b669

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[6];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 4) out vec4 v_TexCoord0;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _142 = sa[4];
    _142.y = 1.0 / sa[5].w;
    sa[4] = _142;
    vec4 _151 = internals[0];
    _151.x = 1.0 / sa[5].z;
    internals[0] = _151;
    vec4 _167 = sa[4];
    _167.z = (internals[0].x * (0.0 - sa[5].x)) + 0.0;
    sa[4] = _167;
    vec4 _182 = sa[4];
    _182.y = (0.0 - sa[5].y) * sa[4].y;
    sa[4] = _182;
}

void primary_program()
{
    vec2 _196 = vec2(pa[0].x, pa[0].y);
    vec2 _203 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_196.x, _196.y, _203.x, _203.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[1] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec4 _293 = internals[0];
    vec4 _304 = internals[2];
    _304.x = 1.0 / internals[1].w;
    internals[2] = _304;
    vec4 _307 = pa[0];
    _307.x = _293.x + sa[4].z;
    pa[0] = _307;
    vec4 _323 = pa[0];
    _323.y = (1.0 * sa[4].y) + (0.0 - internals[0].y);
    pa[0] = _323;
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _348 = vec2(internals[1].x, internals[1].y) * vec2(internals[2].x, internals[2].x);
    vec4 _351 = internals[0];
    vec2 _355 = vec2(_351.x, _351.y);
    internals[2] = vec4(_348.x, _348.y, internals[2].z, internals[2].w);
    outs[1] = vec4(_355.x, _355.y, outs[1].z, outs[1].w);
    vec2 _368 = vec2(internals[0].z, internals[0].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _368.x, _368.y);
    vec4 _386 = internals[2];
    _386.z = (1.0 * sa[4].x) + internals[1].z;
    internals[2] = _386;
    internals[0] = vec4(internals[2].x, internals[2].y, internals[2].z, 1.0) * vec4(1.0);
    vec2 _403 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_403.x, _403.y, outs[0].z, outs[0].w);
    vec2 _413 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _413.x, _413.y);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
}

void main()
{
    int i = 0;
    while (i < 6)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    pa[0] = IN_in_position0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:52:34.185] |E| [compile_program]: Vertex info
-----------
0(31) : warning C7050: "internals[0]" might be used before being initialized
0(31) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0].xyw" might be used before being initialized
0(36) : warning C7050: "internals[0]" might be used before being initialized
0(36) : warning C7050: "internals[1]" might be used before being initialized
0(36) : warning C7050: "internals[2]" might be used before being initialized
0(37) : warning C7050: "r[0].zw" might be used before being initialized


[10:52:34.401] |I| [load_shader_generic]: Generating frag shader d044d02e05c4ecaf0eda2690fbcd472ea33b48f0b6bafc526733bd5d3d56d232
[10:52:34.404] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: d044d02e05c4ecaf0eda2690fbcd472ea33b48f0b6bafc526733bd5d3d56d232

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _202)
{
    return uintBitsToFloat(packHalf2x16(_202));
}

vec2 unpack2xF16(float _127)
{
    return unpackHalf2x16(floatBitsToUint(_127));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    p[0] = unpack2xF16(sa[1].x).x > unpack2xF16(sa[2].z).x;
    if (!p[0])
    {
        vec2 _258 = unpack2xF16(pa[0].x);
        vec2 _261 = vec2(_258.x, _258.y);
        pa[0] = vec4(_261.x, _261.y, pa[0].z, pa[0].w);
        vec2 _279 = vec2(pa[0].x, pa[0].y) + vec2(sa[3].w, sa[3].w);
        internals[0] = vec4(_279.x, _279.y, internals[0].z, internals[0].w);
        vec4 _300 = internals[0];
        _300.x = dot(vec3(internals[0].x, internals[0].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
        internals[0] = _300;
        vec4 _309 = internals[0];
        _309.x = inversesqrt(internals[0].x);
        internals[0] = _309;
        vec4 _318 = internals[0];
        _318.x = 1.0 / internals[0].x;
        internals[0] = _318;
        vec2 _342 = unpack2xF16(pa[0].y);
        vec2 _347 = vec2(pack2xF16(vec2(internals[0].x * unpack2xF16(sa[3].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_342.x, _342.y)));
        pa[0] = vec4(_347.x, _347.y, pa[0].z, pa[0].w);
        vec2 _376 = unpack2xF16(pa[0].y);
        vec2 _381 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[3].y).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_376.x, _376.y)));
        pa[0] = vec4(_381.x, _381.y, pa[0].z, pa[0].w);
        vec2 _403 = unpack2xF16(pa[0].y);
        vec2 _408 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_403.x, _403.y)));
        pa[0] = vec4(_408.x, _408.y, pa[0].z, pa[0].w);
        vec2 _437 = unpack2xF16(pa[0].y);
        vec2 _442 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[3].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_437.x, _437.y)));
        pa[0] = vec4(_442.x, _442.y, pa[0].z, pa[0].w);
        vec2 _471 = unpack2xF16(pa[0].y);
        vec2 _476 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, unpack2xF16(sa[2].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_471.x, _471.y)));
        pa[0] = vec4(_476.x, _476.y, pa[0].z, pa[0].w);
    }
    else
    {
        vec2 _486 = unpack2xF16(pa[0].x);
        vec2 _489 = vec2(_486.x, _486.y);
        internals[0] = vec4(_489.x, _489.y, internals[0].z, internals[0].w);
        vec4 _510 = internals[0];
        _510.x = dot(vec3(internals[0].x, internals[0].y, 0.0), vec3(internals[0].x, internals[0].y, 1.0));
        internals[0] = _510;
        vec2 _527 = unpack2xF16(pa[0].y);
        vec2 _532 = vec2(pack2xF16(vec2(inversesqrt(internals[0].x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_527.x, _527.y)));
        pa[0] = vec4(_532.x, _532.y, pa[0].z, pa[0].w);
        vec2 _554 = unpack2xF16(r[0].y);
        vec2 _559 = vec2(pack2xF16(vec2(1.0 / unpack2xF16(pa[0].x).x, unpack2xF16(r[0].x).y)), pack2xF16(vec2(_554.x, _554.y)));
        r[0] = vec4(_559.x, _559.y, r[0].z, r[0].w);
        vec2 _592 = unpack2xF16(pa[0].w);
        vec2 _597 = vec2(pack2xF16(vec2(fract(abs(unpack2xF16(r[0].x).x)), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_592.x, _592.y)));
        pa[0] = vec4(pa[0].x, pa[0].y, _597.x, _597.y);
        vec2 _620 = unpack2xF16(pa[0].y);
        vec2 _625 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].z).x) * 1.0, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_620.x, _620.y)));
        pa[0] = vec4(_625.x, _625.y, pa[0].z, pa[0].w);
        vec2 _634 = unpack2xF16(pa[0].x);
        vec2 _637 = vec2(_634.x, _634.x);
        vec2 _651 = vec2(pa[0].z, pa[0].z);
        bvec2 _653 = lessThan(vec2(r[0].x, r[0].y), vec2(0.0));
        vec2 _654 = vec2(_653.x ? _637.x : _651.x, _653.y ? _637.y : _651.y);
        vec2 _662 = unpack2xF16(pa[0].y);
        vec2 _667 = vec2(pack2xF16(vec2(_654.x, _654.y)), pack2xF16(vec2(_662.x, _662.y)));
        pa[0] = vec4(_667.x, _667.y, pa[0].z, pa[0].w);
    }
    vec2 _680 = vec2(unpack2xF16(pa[0].x).x, 0.5) * vec2(1.0);
    vec2 _688 = unpack2xF16(pa[0].y);
    vec2 _693 = vec2(pack2xF16(vec2(_680.x, _680.y)), pack2xF16(vec2(_688.x, _688.y)));
    pa[0] = vec4(_693.x, _693.y, pa[0].z, pa[0].w);
    vec2 _702 = unpack2xF16(pa[0].x);
    vec4 _707 = texture(fragTex_sampler0, vec2(_702.x, _702.y));
    vec2 _716 = vec2(pack2xF16(vec2(_707.x, _707.y)), pack2xF16(vec2(_707.z, _707.w)));
    pa[0] = vec4(_716.x, _716.y, pa[0].z, pa[0].w);
    vec2 _726 = vec2(pa[0].x, pa[0].y);
    vec2 _728 = unpack2xF16(_726.x);
    vec2 _730 = unpack2xF16(_726.y);
    vec2 _742 = vec2(sa[0].z, sa[0].w);
    vec2 _744 = unpack2xF16(_742.x);
    vec2 _746 = unpack2xF16(_742.y);
    vec2 _758 = vec2(sa[0].x, sa[0].y);
    vec2 _760 = unpack2xF16(_758.x);
    vec2 _762 = unpack2xF16(_758.y);
    vec4 _769 = (vec4(_728.x, _728.y, _730.x, _730.y) * vec4(_744.x, _744.y, _746.x, _746.y)) + vec4(_760.x, _760.y, _762.x, _762.y);
    vec2 _778 = vec2(pack2xF16(vec2(_769.x, _769.y)), pack2xF16(vec2(_769.z, _769.w)));
    pa[0] = vec4(_778.x, _778.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _157)
{
    uint _160 = floatBitsToUint(_157);
    return uvec2(bitfieldExtract(_160, 0, 16), bitfieldExtract(_160, 16, 16));
}

void frag_output_finalize()
{
    vec2 _123 = vec2(pa[0].x, pa[0].y);
    vec2 _134 = unpack2xF16(_123.x);
    vec2 _136 = unpack2xF16(_123.y);
    out_color = vec4(_134.x, _134.y, _136.x, _136.y);
    vec2 _153 = vec2(pa[0].x, pa[0].y);
    uvec2 _166 = unpack2xU16(_153.x);
    uvec2 _168 = unpack2xU16(_153.y);
    out_color_ui = uvec4(_166.x, _166.y, _168.x, _168.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[2] = vec4(sa[2].x, sa[2].y, vec4(2.0089014784560577528762587306044e-41, 1.1881609679010123944362303136715e-41, 2.1495918442742693867970011807667e-41, 2.1523944412029190209388486399333e-41).x, vec4(2.0089014784560577528762587306044e-41, 1.1881609679010123944362303136715e-41, 2.1495918442742693867970011807667e-41, 2.1523944412029190209388486399333e-41).y);
    sa[3] = vec4(vec4(2.0089014784560577528762587306044e-41, 1.1881609679010123944362303136715e-41, 2.1495918442742693867970011807667e-41, 2.1523944412029190209388486399333e-41).z, vec4(2.0089014784560577528762587306044e-41, 1.1881609679010123944362303136715e-41, 2.1495918442742693867970011807667e-41, 2.1523944412029190209388486399333e-41).w, sa[3].z, sa[3].w);
    sa[3] = vec4(sa[3].x, sa[3].y, vec2(2.2958874039497802890014385492622e-41, -0.5).x, vec2(2.2958874039497802890014385492622e-41, -0.5).y);
    vec2 _197 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _213 = unpack2xF16(pa[0].y);
    vec2 _218 = vec2(pack2xF16(vec2(_197.x, _197.y)), pack2xF16(vec2(_213.x, _213.y)));
    pa[0] = vec4(_218.x, _218.y, pa[0].z, pa[0].w);
    frag_init();
    primary_program();
    frag_output_finalize();
}


[10:52:34.430] |E| [compile_program]: Vertex info
-----------
0(31) : warning C7050: "internals[2]" might be used before being initialized

Fragment info
-------------
0(34) : warning C7050: "pa[0].yzw" might be used before being initialized
0(36) : warning C7050: "internals[0].zw" might be used before being initialized
0(37) : warning C7050: "r[0]" might be used before being initialized


[10:53:29.872] |I| [load_shader_generic]: Generating frag shader 4ea4696ecfa9a9470142338e53cbfbe4105524c670192983785fbb7f8b6a9376
[10:53:29.877] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 4ea4696ecfa9a9470142338e53cbfbe4105524c670192983785fbb7f8b6a9376

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _219)
{
    return uintBitsToFloat(packHalf2x16(_219));
}

vec2 unpack2xF16(float _149)
{
    return unpackHalf2x16(floatBitsToUint(_149));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec4 _294 = internals[0];
    _294.z = unpack2xF16(pa[0].y).x;
    internals[0] = _294;
    vec4 _308 = internals[0];
    _308.x = internals[0].z * sa[5].y;
    internals[0] = _308;
    vec4 _328 = internals[0];
    _328.x = (internals[0].x * sa[5].x) + sa[6].x;
    internals[0] = _328;
    vec4 _342 = internals[0];
    _342.x = fract(internals[0].x);
    internals[0] = _342;
    vec4 _362 = internals[0];
    _362.x = (internals[0].x * sa[4].w) + sa[4].z;
    internals[0] = _362;
    vec4 _377 = pa[0];
    _377.x = (internals[0].x * internals[0].x) + 0.0;
    pa[0] = _377;
    vec4 _397 = internals[1];
    _397.x = (pa[0].x * sa[4].y) + sa[4].x;
    internals[1] = _397;
    vec4 _418 = internals[1];
    _418.x = (internals[1].x * pa[0].x) + (0.0 - sa[3].w);
    internals[1] = _418;
    vec4 _438 = internals[2];
    _438.x = (internals[1].x * pa[0].x) + sa[6].x;
    internals[2] = _438;
    vec4 _458 = internals[1];
    _458.x = (pa[0].x * sa[3].z) + sa[3].y;
    internals[1] = _458;
    vec4 _479 = internals[1];
    _479.x = (pa[0].x * internals[1].x) + (0.0 - sa[3].x);
    internals[1] = _479;
    vec4 _499 = pa[0];
    _499.x = (pa[0].x * internals[1].x) + sa[2].w;
    pa[0] = _499;
    vec4 _517 = internals[1];
    _517.x = unpack2xF16(pa[1].x).x * unpack2xF16(pa[0].z).x;
    internals[1] = _517;
    vec4 _531 = internals[1];
    vec4 _537 = internals[2];
    _537.x = internals[2].x * internals[0].x;
    internals[2] = _537;
    vec4 _540 = pa[0];
    _540.z = 1.0 / _531.x;
    pa[0] = _540;
    vec4 _555 = internals[0];
    _555.x = (internals[2].x * pa[0].x) + 0.0;
    internals[0] = _555;
    vec4 _575 = internals[0];
    _575.x = (internals[2].x * pa[0].x) + internals[0].x;
    internals[0] = _575;
    vec2 _599 = unpack2xF16(pa[0].y);
    vec2 _604 = vec2(pack2xF16(vec2(internals[0].x + unpack2xF16(sa[2].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_599.x, _599.y)));
    pa[0] = vec4(_604.x, _604.y, pa[0].z, pa[0].w);
    vec2 _633 = unpack2xF16(pa[0].y);
    vec2 _638 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[5].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_633.x, _633.y)));
    pa[0] = vec4(_638.x, _638.y, pa[0].z, pa[0].w);
    vec2 _660 = unpack2xF16(pa[0].y);
    vec2 _665 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_660.x, _660.y)));
    pa[0] = vec4(_665.x, _665.y, pa[0].z, pa[0].w);
    vec4 _686 = internals[0];
    _686.x = min(unpack2xF16(pa[0].y).x, unpack2xF16(pa[0].x).x);
    internals[0] = _686;
    vec4 _701 = internals[0];
    _701.x = (internals[0].x * pa[0].z) + 0.0;
    internals[0] = _701;
    vec2 _725 = unpack2xF16(pa[0].y);
    vec2 _730 = vec2(pack2xF16(vec2(min(internals[0].x, unpack2xF16(sa[5].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_725.x, _725.y)));
    pa[0] = vec4(_730.x, _730.y, pa[0].z, pa[0].w);
    vec4 _744 = internals[0];
    _744.x = max(unpack2xF16(pa[0].x).x, 0.0);
    internals[0] = _744;
    vec4 _757 = internals[0];
    vec4 _762 = internals[0];
    vec4 _768 = internals[1];
    _768.x = log(abs(unpack2xF16(pa[1].z).y));
    internals[1] = _768;
    vec2 _774 = unpack2xF16(pa[0].y);
    vec2 _779 = vec2(pack2xF16(vec2(_757.x * _762.x)), pack2xF16(vec2(_774.x, _774.y)));
    pa[0] = vec4(_779.x, _779.y, pa[0].z, pa[0].w);
    vec2 _806 = unpack2xF16(pa[0].w);
    vec2 _811 = vec2(pack2xF16(vec2(internals[0].x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_806.x, _806.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _811.x, _811.y);
    vec2 _840 = unpack2xF16(pa[0].y);
    vec2 _845 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].y).x * unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_840.x, _840.y)));
    pa[0] = vec4(_845.x, _845.y, pa[0].z, pa[0].w);
    vec4 _875 = internals[0];
    _875.x = (unpack2xF16(pa[0].z).x * (0.0 - unpack2xF16(sa[6].y).x)) + unpack2xF16(pa[0].x).x;
    internals[0] = _875;
    vec4 _891 = internals[1];
    _891.x = unpack2xF16(sa[2].x).x * internals[1].x;
    internals[1] = _891;
    vec2 _898 = vec2(sa[0].x, sa[0].y);
    vec2 _900 = unpack2xF16(_898.x);
    vec2 _902 = unpack2xF16(_898.y);
    vec4 _920 = internals[1];
    internals[1] = vec4(_900.x, _900.y, _902.x, _902.y) * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    vec2 _930 = unpack2xF16(pa[0].y);
    vec2 _935 = vec2(pack2xF16(vec2(exp(_920.x))), pack2xF16(vec2(_930.x, _930.y)));
    pa[0] = vec4(_935.x, _935.y, pa[0].z, pa[0].w);
    vec2 _944 = unpack2xF16(pa[0].x);
    vec2 _953 = unpack2xF16(sa[1].w);
    vec2 _963 = unpack2xF16(sa[1].z);
    vec2 _968 = (vec2(_944.x, _944.x) * (vec2(0.0) - vec2(_953.x, _953.x))) + vec2(_963.x, _963.x);
    vec2 _976 = unpack2xF16(pa[0].w);
    vec2 _981 = vec2(pack2xF16(vec2(_968.x, _968.y)), pack2xF16(vec2(_976.x, _976.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _981.x, _981.y);
    vec2 _1000 = vec2(sa[0].z, sa[0].w);
    vec2 _1002 = unpack2xF16(_1000.x);
    vec2 _1004 = unpack2xF16(_1000.y);
    vec2 _1017 = vec2(sa[0].z, sa[0].w);
    vec2 _1019 = unpack2xF16(_1017.x);
    vec2 _1021 = unpack2xF16(_1017.y);
    vec4 _1028 = (vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x) * (vec4(0.0) - vec4(_1002.x, _1002.y, _1004.x, _1004.y))) + vec4(_1019.x, _1019.y, _1021.x, _1021.y);
    vec2 _1037 = vec2(pack2xF16(vec2(_1028.x, _1028.y)), pack2xF16(vec2(_1028.z, _1028.w)));
    pa[0] = vec4(_1037.x, _1037.y, pa[0].z, pa[0].w);
    vec2 _1050 = unpack2xF16(pa[0].z);
    vec2 _1062 = vec2(pa[0].x, pa[0].y);
    vec2 _1064 = unpack2xF16(_1062.x);
    vec2 _1066 = unpack2xF16(_1062.y);
    vec4 _1073 = (internals[1] * vec4(_1050.x, _1050.x, _1050.x, _1050.x)) + vec4(_1064.x, _1064.y, _1066.x, _1066.y);
    vec2 _1082 = vec2(pack2xF16(vec2(_1073.x, _1073.y)), pack2xF16(vec2(_1073.z, _1073.w)));
    pa[0] = vec4(_1082.x, _1082.y, pa[0].z, pa[0].w);
    vec2 _1092 = vec2(pa[0].x, pa[0].y);
    vec2 _1094 = unpack2xF16(_1092.x);
    vec2 _1096 = unpack2xF16(_1092.y);
    vec4 _1103 = min(vec4(_1094.x, _1094.y, _1096.x, _1096.y), vec4(1.0));
    vec2 _1112 = vec2(pack2xF16(vec2(_1103.x, _1103.y)), pack2xF16(vec2(_1103.z, _1103.w)));
    pa[0] = vec4(_1112.x, _1112.y, pa[0].z, pa[0].w);
    vec2 _1122 = vec2(pa[0].x, pa[0].y);
    vec2 _1124 = unpack2xF16(_1122.x);
    vec2 _1126 = unpack2xF16(_1122.y);
    vec4 _1132 = max(vec4(_1124.x, _1124.y, _1126.x, _1126.y), vec4(0.0));
    vec2 _1141 = vec2(pack2xF16(vec2(_1132.x, _1132.y)), pack2xF16(vec2(_1132.z, _1132.w)));
    pa[0] = vec4(_1141.x, _1141.y, pa[0].z, pa[0].w);
    vec2 _1150 = unpack2xF16(pa[1].z);
    vec2 _1159 = unpack2xF16(sa[5].z);
    vec2 _1163 = vec2(_1150.x, _1150.y) + vec2(_1159.x, _1159.x);
    vec2 _1171 = unpack2xF16(pa[0].w);
    vec2 _1176 = vec2(pack2xF16(vec2(_1163.x, _1163.y)), pack2xF16(vec2(_1171.x, _1171.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1176.x, _1176.y);
    vec2 _1185 = unpack2xF16(sa[6].y);
    vec2 _1194 = unpack2xF16(pa[0].z);
    vec2 _1200 = vec2(_1185.x, _1185.x) * abs(vec2(_1194.x, _1194.y));
    vec2 _1208 = unpack2xF16(pa[0].w);
    vec2 _1213 = vec2(pack2xF16(vec2(_1200.x, _1200.y)), pack2xF16(vec2(_1208.x, _1208.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1213.x, _1213.y);
    vec2 _1237 = unpack2xF16(pa[0].w);
    vec2 _1242 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(pa[0].z).x)), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1237.x, _1237.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1242.x, _1242.y);
    vec4 _1263 = internals[0];
    _1263.x = unpack2xF16(sa[1].y).x * unpack2xF16(pa[0].z).x;
    internals[0] = _1263;
    vec4 _1276 = internals[1];
    _1276.x = log(abs(unpack2xF16(pa[0].z).y));
    internals[1] = _1276;
    vec4 _1285 = internals[1];
    vec4 _1298 = internals[2];
    _1298.x = exp(internals[0].x);
    internals[2] = _1298;
    vec2 _1304 = unpack2xF16(pa[0].w);
    vec2 _1309 = vec2(pack2xF16(vec2(_1285.x * unpack2xF16(sa[1].x).x)), pack2xF16(vec2(_1304.x, _1304.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1309.x, _1309.y);
    vec2 _1331 = unpack2xF16(pa[0].w);
    vec2 _1336 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].z).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1331.x, _1331.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1336.x, _1336.y);
    vec2 _1363 = unpack2xF16(pa[0].w);
    vec2 _1368 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].z).x, internals[2].x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_1363.x, _1363.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _1368.x, _1368.y);
    vec4 _1397 = pa[0];
    _1397.y = pack2xF16(vec2(unpack2xF16(pa[0].y).x, (0.0 - unpack2xF16(pa[0].z).x) + unpack2xF16(pa[0].y).y));
    pa[0] = _1397;
}

uvec2 unpack2xU16(float _179)
{
    uint _182 = floatBitsToUint(_179);
    return uvec2(bitfieldExtract(_182, 0, 16), bitfieldExtract(_182, 16, 16));
}

void frag_output_finalize()
{
    vec2 _145 = vec2(pa[0].x, pa[0].y);
    vec2 _156 = unpack2xF16(_145.x);
    vec2 _158 = unpack2xF16(_145.y);
    out_color = vec4(_156.x, _156.y, _158.x, _158.y);
    vec2 _175 = vec2(pa[0].x, pa[0].y);
    uvec2 _188 = unpack2xU16(_175.x);
    uvec2 _190 = unpack2xU16(_175.y);
    out_color_ui = uvec4(_188.x, _188.y, _190.x, _190.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(2.90573249562394067826744566391e-41, 2.5111268480700721910953234132555e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41);
    sa[2] = vec4(2.4752536073833568740796759359233e-41, 2.3676338853232109230327335039266e-41, 2.1495918442742693867970011807667e-41, 1.0);
    sa[3] = vec4(0.125, 0.00260416674427688121795654296875, -2.1701389414374716579914093017578e-05, 0.02083333395421504974365234375);
    sa[4] = vec4(0.00026041668024845421314239501953125, -1.5500992276429315097630023956299e-06, -3.1415927410125732421875, 6.283185482025146484375);
    sa[5] = vec4(0.15915493667125701904296875, 2.0, 6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41);
    sa[6] = vec4(vec2(0.5, 2.2958874039497802890014385492622e-41).x, vec2(0.5, 2.2958874039497802890014385492622e-41).y, sa[6].z, sa[6].w);
    vec2 _231 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_231.x, _231.y, pa[0].z, pa[0].w);
    vec2 _238 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _246 = unpack2xF16(pa[1].w);
    vec2 _251 = vec2(pack2xF16(vec2(_238.x, _238.y)), pack2xF16(vec2(_246.x, _246.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _251.x, _251.y);
    frag_init();
    vec4 _263 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _268 = vec2(pack2xF16(_263.xy), pack2xF16(_263.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _268.x, _268.y);
    vec4 _274 = texture(fragTex_sampler0, v_TexCoord2.xy);
    vec2 _279 = vec2(pack2xF16(_274.xy), pack2xF16(_274.zw));
    pa[1] = vec4(_279.x, _279.y, pa[1].z, pa[1].w);
    primary_program();
    frag_output_finalize();
}


[10:53:29.879] |I| [load_shader_generic]: Generating vert shader 5ba29f4628361526f5532e555473e77aeb199aa2998b1b0e749144fe94b13d4a
[10:53:29.881] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 5ba29f4628361526f5532e555473e77aeb199aa2998b1b0e749144fe94b13d4a

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _171 = sa[4];
    _171.x = sa[4].x * sa[4].z;
    sa[4] = _171;
    vec4 _185 = internals[0];
    _185.x = sa[4].x * sa[6].y;
    internals[0] = _185;
    vec4 _199 = sa[4];
    _199.z = fract(internals[0].x);
    sa[4] = _199;
    vec4 _213 = sa[4];
    _213.x = sa[6].x * sa[4].y;
    sa[4] = _213;
}

void primary_program()
{
    vec2 _223 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _223.x, _223.y);
    vec4 _235 = pa[1];
    _235.z = pa[1].x;
    pa[1] = _235;
    vec4 _250 = pa[1];
    _250.w = sa[6].z * pa[1].y;
    pa[1] = _250;
    vec2 _265 = vec2(pa[1].z, pa[1].w) * vec2(sa[5].x, sa[5].y);
    outs[3] = vec4(_265.x, _265.y, outs[3].z, outs[3].w);
    vec2 _279 = vec2(pa[0].x, pa[0].y);
    vec2 _286 = vec2(pa[0].z, pa[0].w);
    internals[1] = vec4(_279.x, _279.y, _286.x, _286.y);
    internals[2] = sa[0] * vec4(internals[1].x, internals[1].x, internals[1].x, internals[1].x);
    internals[2] = (vec4(internals[1].y, internals[1].y, internals[1].y, internals[1].y) * sa[1]) + internals[2];
    internals[2] = (vec4(internals[1].z, internals[1].z, internals[1].z, internals[1].z) * sa[2]) + internals[2];
    internals[1] = (vec4(internals[1].w, internals[1].w, internals[1].w, internals[1].w) * sa[3]) + internals[2];
    vec4 _382 = outs[3];
    _382.y = (0.0 - sa[4].z) + outs[3].y;
    outs[3] = _382;
    vec4 _391 = internals[0];
    _391.x = 1.0 / internals[1].w;
    internals[0] = _391;
    vec2 _407 = (vec2(internals[0].x, internals[0].x) * vec2(internals[1].x, internals[1].y)) + vec2(0.0);
    internals[1] = vec4(_407.x, _407.y, internals[1].z, internals[1].w);
    internals[1] = vec4(internals[1].x, internals[1].y, internals[1].z, 1.0) * vec4(1.0);
    vec2 _428 = vec2(internals[1].x, internals[1].y);
    outs[0] = vec4(_428.x, _428.y, outs[0].z, outs[0].w);
    vec2 _438 = vec2(internals[1].z, internals[1].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _438.x, _438.y);
    vec4 _461 = outs[3];
    _461.z = (pa[1].y * sa[5].w) + sa[4].x;
    outs[3] = _461;
    internals[1] = vec4(outs[3].x, outs[3].y, outs[3].z, 0.0) * vec4(1.0);
    vec2 _478 = vec2(internals[1].x, internals[1].y);
    outs[2] = vec4(_478.x, _478.y, outs[2].z, outs[2].w);
    vec2 _488 = vec2(internals[1].z, internals[1].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _488.x, _488.y);
    vec2 _506 = vec2(sa[5].z, sa[5].z) * vec2(outs[3].x, outs[3].y);
    pa[0] = vec4(_506.x, _506.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _525 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_525.x, _525.y, outs[3].z, outs[3].w);
    vec2 _535 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _535.x, _535.y);
    vec2 _545 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_545.x, _545.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(0.00609756074845790863037109375, 0.0500000007450580596923828125, 5.0, 6.0);
    sa[6] = vec4(vec3(2.0, 0.0500000007450580596923828125, 3.0).x, vec3(2.0, 0.0500000007450580596923828125, 3.0).y, vec3(2.0, 0.0500000007450580596923828125, 3.0).z, sa[6].w);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:53:29.916] |E| [compile_program]: Vertex info
-----------
0(34) : warning C7050: "internals[0]" might be used before being initialized

Fragment info
-------------
0(36) : warning C7050: "pa[0].zw" might be used before being initialized
0(36) : warning C7050: "pa[1].xyw" might be used before being initialized
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[1]" might be used before being initialized
0(38) : warning C7050: "internals[2]" might be used before being initialized


[10:53:29.916] |I| [load_shader_generic]: Generating frag shader 71809ae07dfb6925b415f0bf5665f240464ab9dfe5ccf23ef170bc549fcc5ea9
[10:53:29.919] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 71809ae07dfb6925b415f0bf5665f240464ab9dfe5ccf23ef170bc549fcc5ea9

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _206)
{
    return uintBitsToFloat(packHalf2x16(_206));
}

vec2 unpack2xF16(float _134)
{
    return unpackHalf2x16(floatBitsToUint(_134));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _298 = unpack2xF16(sa[3].y);
    vec2 _303 = vec2(pack2xF16(vec2(unpack2xF16(sa[2].y).x * unpack2xF16(sa[0].y).y, unpack2xF16(sa[3].x).y)), pack2xF16(vec2(_298.x, _298.y)));
    sa[3] = vec4(_303.x, _303.y, sa[3].z, sa[3].w);
    vec2 _332 = unpack2xF16(sa[2].w);
    vec2 _337 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].y).y * unpack2xF16(sa[2].y).x, unpack2xF16(sa[2].z).y)), pack2xF16(vec2(_332.x, _332.y)));
    sa[2] = vec4(sa[2].x, sa[2].y, _337.x, _337.y);
}

void primary_program()
{
    vec2 _349 = unpack2xF16(pa[0].z);
    vec2 _358 = unpack2xF16(pa[1].x);
    vec2 _367 = unpack2xF16(sa[1].y);
    vec2 _372 = (vec2(_349.x, _349.x) * vec2(_358.x, _358.x)) + vec2(_367.x, _367.x);
    vec2 _380 = unpack2xF16(pa[0].y);
    vec2 _385 = vec2(pack2xF16(vec2(_372.x, _372.y)), pack2xF16(vec2(_380.x, _380.y)));
    pa[0] = vec4(_385.x, _385.y, pa[0].z, pa[0].w);
    vec4 _399 = internals[0];
    _399.x = 1.0 / unpack2xF16(pa[0].x).x;
    internals[0] = _399;
    vec2 _426 = unpack2xF16(pa[0].y);
    vec2 _431 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[1].z).x) + unpack2xF16(sa[2].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_426.x, _426.y)));
    pa[0] = vec4(_431.x, _431.y, pa[0].z, pa[0].w);
    vec4 _462 = internals[1];
    _462.x = (abs(unpack2xF16(pa[0].x).x) * unpack2xF16(sa[2].x).x) + unpack2xF16(pa[0].y).y;
    internals[1] = _462;
    vec4 _477 = internals[0];
    _477.x = (internals[1].x * internals[0].x) + 0.0;
    internals[0] = _477;
    vec2 _501 = unpack2xF16(pa[0].y);
    vec2 _506 = vec2(pack2xF16(vec2(min(internals[0].x, unpack2xF16(sa[1].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_501.x, _501.y)));
    pa[0] = vec4(_506.x, _506.y, pa[0].z, pa[0].w);
    vec4 _520 = internals[0];
    _520.x = max(unpack2xF16(pa[0].x).x, 0.0);
    internals[0] = _520;
    vec4 _535 = internals[1];
    _535.x = (internals[0].x * internals[0].x) + 0.0;
    internals[1] = _535;
    vec2 _541 = unpack2xF16(pa[1].z);
    vec2 _550 = unpack2xF16(sa[1].z);
    vec2 _554 = vec2(_541.x, _541.y) + vec2(_550.x, _550.x);
    vec2 _562 = unpack2xF16(pa[0].w);
    vec2 _567 = vec2(pack2xF16(vec2(_554.x, _554.y)), pack2xF16(vec2(_562.x, _562.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _567.x, _567.y);
    vec4 _584 = internals[1];
    vec4 _599 = internals[0];
    _599.x = internals[0].x * internals[1].x;
    internals[0] = _599;
    vec2 _605 = unpack2xF16(pa[0].y);
    vec2 _610 = vec2(pack2xF16(vec2(_584.x * abs(unpack2xF16(sa[0].z).x))), pack2xF16(vec2(_605.x, _605.y)));
    pa[0] = vec4(_610.x, _610.y, pa[0].z, pa[0].w);
    vec2 _626 = unpack2xF16(sa[2].y);
    vec2 _636 = unpack2xF16(pa[0].x);
    vec2 _641 = (vec2(internals[0].x, internals[0].x) * (vec2(0.0) - vec2(_626.x, _626.x))) + vec2(_636.x, _636.x);
    vec2 _649 = unpack2xF16(pa[0].y);
    vec2 _654 = vec2(pack2xF16(vec2(_641.x, _641.y)), pack2xF16(vec2(_649.x, _649.y)));
    pa[0] = vec4(_654.x, _654.y, pa[0].z, pa[0].w);
    vec2 _663 = unpack2xF16(pa[0].x);
    vec2 _672 = unpack2xF16(sa[3].x);
    vec2 _682 = unpack2xF16(sa[2].z);
    vec2 _687 = (vec2(_663.x, _663.x) * (vec2(0.0) - vec2(_672.x, _672.x))) + vec2(_682.x, _682.x);
    vec2 _695 = unpack2xF16(pa[0].y);
    vec2 _700 = vec2(pack2xF16(vec2(_687.x, _687.y)), pack2xF16(vec2(_695.x, _695.y)));
    pa[0] = vec4(_700.x, _700.y, pa[0].z, pa[0].w);
    vec2 _729 = unpack2xF16(pa[0].y);
    vec2 _734 = vec2(pack2xF16(vec2(min(unpack2xF16(pa[0].x).x, unpack2xF16(sa[1].w).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_729.x, _729.y)));
    pa[0] = vec4(_734.x, _734.y, pa[0].z, pa[0].w);
    vec2 _756 = unpack2xF16(pa[1].y);
    vec2 _761 = vec2(pack2xF16(vec2(max(unpack2xF16(pa[0].x).x, 0.0), unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_756.x, _756.y)));
    pa[1] = vec4(_761.x, _761.y, pa[1].z, pa[1].w);
    vec2 _770 = unpack2xF16(pa[0].z);
    vec2 _781 = unpack2xF16(sa[2].y);
    vec2 _785 = abs(vec2(_770.x, _770.y)) * vec2(_781.x, _781.x);
    vec2 _793 = unpack2xF16(pa[0].y);
    vec2 _798 = vec2(pack2xF16(vec2(_785.x, _785.y)), pack2xF16(vec2(_793.x, _793.y)));
    pa[0] = vec4(_798.x, _798.y, pa[0].z, pa[0].w);
    vec2 _822 = unpack2xF16(pa[0].y);
    vec2 _827 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(pa[0].x).x)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_822.x, _822.y)));
    pa[0] = vec4(_827.x, _827.y, pa[0].z, pa[0].w);
    vec4 _848 = internals[0];
    _848.x = unpack2xF16(pa[0].x).x * unpack2xF16(sa[1].x).x;
    internals[0] = _848;
    vec4 _861 = internals[1];
    _861.x = log(abs(unpack2xF16(pa[0].x).y));
    internals[1] = _861;
    vec4 _877 = internals[1];
    vec4 _883 = internals[2];
    _883.x = exp(internals[0].x);
    internals[2] = _883;
    vec2 _889 = unpack2xF16(pa[0].y);
    vec2 _894 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].w).x * _877.x)), pack2xF16(vec2(_889.x, _889.y)));
    pa[0] = vec4(_894.x, _894.y, pa[0].z, pa[0].w);
    vec2 _916 = unpack2xF16(pa[0].y);
    vec2 _921 = vec2(pack2xF16(vec2(exp(unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_916.x, _916.y)));
    pa[0] = vec4(_921.x, _921.y, pa[0].z, pa[0].w);
    vec2 _948 = unpack2xF16(pa[0].w);
    vec2 _953 = vec2(pack2xF16(vec2(max(internals[2].x, unpack2xF16(pa[0].x).x), unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_948.x, _948.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _953.x, _953.y);
    vec2 _963 = vec2(sa[0].x, sa[0].y);
    vec2 _965 = unpack2xF16(_963.x);
    vec2 _967 = unpack2xF16(_963.y);
    vec4 _972 = vec4(_965.x, _965.y, _967.x, _967.y);
    vec2 _981 = vec2(pack2xF16(vec2(_972.x, _972.y)), pack2xF16(vec2(_972.z, _972.w)));
    pa[0] = vec4(_981.x, _981.y, pa[0].z, pa[0].w);
    vec4 _1010 = pa[0];
    _1010.y = pack2xF16(vec2(unpack2xF16(pa[0].y).x, (0.0 - unpack2xF16(pa[0].z).x) + unpack2xF16(pa[1].x).x));
    pa[0] = _1010;
}

uvec2 unpack2xU16(float _164)
{
    uint _167 = floatBitsToUint(_164);
    return uvec2(bitfieldExtract(_167, 0, 16), bitfieldExtract(_167, 16, 16));
}

void frag_output_finalize()
{
    vec2 _130 = vec2(pa[0].x, pa[0].y);
    vec2 _141 = unpack2xF16(_130.x);
    vec2 _143 = unpack2xF16(_130.y);
    out_color = vec4(_141.x, _141.y, _143.x, _143.y);
    vec2 _160 = vec2(pa[0].x, pa[0].y);
    uvec2 _173 = unpack2xU16(_160.x);
    uvec2 _175 = unpack2xU16(_160.y);
    out_color_ui = uvec4(_173.x, _173.y, _175.x, _175.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[0] = vec4(sa[0].x, sa[0].y, vec4(2.3676338853232109230327335039266e-41, 2.7622395328770794102048557545811e-41, 2.5111268480700721910953234132555e-41, 1.8079552786718789849057959083606e-41).x, vec4(2.3676338853232109230327335039266e-41, 2.7622395328770794102048557545811e-41, 2.5111268480700721910953234132555e-41, 1.8079552786718789849057959083606e-41).y);
    sa[1] = vec4(vec4(2.3676338853232109230327335039266e-41, 2.7622395328770794102048557545811e-41, 2.5111268480700721910953234132555e-41, 1.8079552786718789849057959083606e-41).z, vec4(2.3676338853232109230327335039266e-41, 2.7622395328770794102048557545811e-41, 2.5111268480700721910953234132555e-41, 1.8079552786718789849057959083606e-41).w, sa[1].z, sa[1].w);
    sa[1] = vec4(sa[1].x, sa[1].y, vec4(6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41, 2.0089014784560577528762587306044e-41, 2.2958874039497802890014385492622e-41).x, vec4(6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41, 2.0089014784560577528762587306044e-41, 2.2958874039497802890014385492622e-41).y);
    sa[2] = vec4(vec4(6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41, 2.0089014784560577528762587306044e-41, 2.2958874039497802890014385492622e-41).z, vec4(6.6006762863556183308791358291288e-41, 2.1523944412029190209388486399333e-41, 2.0089014784560577528762587306044e-41, 2.2958874039497802890014385492622e-41).w, sa[2].z, sa[2].w);
    vec2 _218 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_218.x, _218.y, pa[0].z, pa[0].w);
    vec2 _225 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _233 = unpack2xF16(pa[1].w);
    vec2 _238 = vec2(pack2xF16(vec2(_225.x, _225.y)), pack2xF16(vec2(_233.x, _233.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _238.x, _238.y);
    frag_init();
    vec4 _251 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _256 = vec2(pack2xF16(_251.xy), pack2xF16(_251.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _256.x, _256.y);
    vec4 _262 = texture(fragTex_sampler0, v_TexCoord4.xy);
    vec2 _267 = vec2(pack2xF16(_262.xy), pack2xF16(_262.zw));
    pa[1] = vec4(_267.x, _267.y, pa[1].z, pa[1].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:53:29.921] |I| [load_shader_generic]: Generating vert shader 27727727faec8f08aee1c067950ce8a7caa46587f154ea93d68d54bf54d30541
[10:53:29.924] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 27727727faec8f08aee1c067950ce8a7caa46587f154ea93d68d54bf54d30541

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _190 = sa[4];
    _190.x = sa[4].x * sa[4].z;
    sa[4] = _190;
    vec4 _210 = internals[0];
    _210.x = (sa[4].x * sa[6].z) + sa[4].w;
    internals[0] = _210;
    vec4 _224 = sa[4];
    _224.x = fract(internals[0].x);
    sa[4] = _224;
    vec2 _231 = vec2(sa[6].x, sa[6].y);
    sa[7] = vec4(_231.x, _231.y, sa[7].z, sa[7].w);
    vec2 _241 = vec2(sa[5].z, sa[5].w);
    sa[7] = vec4(sa[7].x, sa[7].y, _241.x, _241.y);
}

void primary_program()
{
    vec2 _254 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _254.x, _254.y);
    vec2 _268 = vec2(pa[0].x, pa[0].y);
    vec2 _275 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_268.x, _268.y, _275.x, _275.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    vec2 _351 = vec2(pa[1].x, pa[1].y) * vec2(sa[5].x, sa[5].y);
    pa[0] = vec4(_351.x, _351.y, pa[0].z, pa[0].w);
    vec4 _369 = pa[0];
    _369.y = (0.0 - sa[4].x) + pa[0].y;
    pa[0] = _369;
    vec3 _378 = vec3(pa[0].x, pa[0].y, 0.0) * vec3(1.0);
    internals[2] = vec4(_378.x, _378.y, _378.z, internals[2].w);
    vec4 _403 = internals[2];
    vec2 _407 = vec2(_403.x, _403.y);
    internals[0] = (sa[3] * vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w)) + internals[1];
    outs[2] = vec4(_407.x, _407.y, outs[2].z, outs[2].w);
    vec4 _419 = outs[2];
    _419.z = internals[2].z;
    outs[2] = _419;
    vec4 _427 = outs[2];
    _427.w = sa[4].y;
    outs[2] = _427;
    internals[1] = sa[7] + vec4(pa[0].x, pa[0].y, pa[0].x, pa[0].y);
    vec4 _451 = internals[2];
    _451.x = 1.0 / internals[0].w;
    internals[2] = _451;
    vec2 _467 = (vec2(internals[0].x, internals[0].y) * vec2(internals[2].x, internals[2].x)) + vec2(0.0);
    internals[0] = vec4(_467.x, _467.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _488 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_488.x, _488.y, outs[0].z, outs[0].w);
    vec2 _498 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _498.x, _498.y);
    internals[0] = vec4(internals[1].x, internals[1].y, 0.0, 0.0) * vec4(1.0);
    vec2 _517 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_517.x, _517.y, outs[3].z, outs[3].w);
    vec2 _527 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _527.x, _527.y);
    internals[0] = vec4(internals[1].z, internals[1].w, 0.0, 0.0) * vec4(1.0);
    vec2 _546 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_546.x, _546.y, outs[4].z, outs[4].w);
    vec2 _556 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _556.x, _556.y);
    vec2 _574 = vec2(sa[6].w, sa[6].w) * vec2(outs[2].x, outs[2].y);
    outs[5] = vec4(_574.x, _574.y, outs[5].z, outs[5].w);
    vec2 _592 = vec2(sa[6].w, sa[6].w) * vec2(outs[2].z, outs[2].w);
    outs[5] = vec4(outs[5].x, outs[5].y, _592.x, _592.y);
    vec2 _611 = (vec2(internals[1].x, internals[1].y) * vec2(sa[6].w, sa[6].w)) + vec2(0.0);
    outs[6] = vec4(_611.x, _611.y, outs[6].z, outs[6].w);
    vec2 _622 = vec2(0.0) * vec2(sa[6].w, sa[6].w);
    outs[6] = vec4(outs[6].x, outs[6].y, _622.x, _622.y);
    vec2 _640 = vec2(internals[1].z, internals[1].w) * vec2(sa[6].w, sa[6].w);
    outs[7] = vec4(_640.x, _640.y, outs[7].z, outs[7].w);
    vec2 _651 = vec2(0.0) * vec2(sa[6].w, sa[6].w);
    outs[7] = vec4(outs[7].x, outs[7].y, _651.x, _651.y);
    vec2 _661 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_661.x, _661.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(0.00115740741603076457977294921875, 0.0500000007450580596923828125, 0.0, -9.9999997473787516355514526367188e-05);
    sa[6] = vec4(0.0, 9.9999997473787516355514526367188e-05, 0.0500000007450580596923828125, 5.0);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:53:29.956] |E| [compile_program]: Vertex info
-----------
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[2].w" might be used before being initialized

Fragment info
-------------
0(36) : warning C7050: "pa[0].zw" might be used before being initialized
0(36) : warning C7050: "pa[1].xyw" might be used before being initialized
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[1]" might be used before being initialized
0(38) : warning C7050: "internals[2]" might be used before being initialized


[10:53:48.398] |I| [load_shader_generic]: Generating frag shader e612baed4ff3a5aebd43ec3055f88632fcc3766aac58ca53d3aff2c40452b27a
[10:53:48.400] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: e612baed4ff3a5aebd43ec3055f88632fcc3766aac58ca53d3aff2c40452b27a

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _190)
{
    return uintBitsToFloat(packHalf2x16(_190));
}

vec2 unpack2xF16(float _118)
{
    return unpackHalf2x16(floatBitsToUint(_118));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec2 _262 = unpack2xF16(pa[0].z);
    vec2 _271 = unpack2xF16(pa[1].x);
    vec2 _281 = unpack2xF16(pa[0].y);
    vec2 _286 = (vec2(_262.x, _262.x) * (vec2(0.0) - vec2(_271.x, _271.x))) + vec2(_281.x, _281.x);
    vec2 _294 = unpack2xF16(pa[0].y);
    vec2 _299 = vec2(pack2xF16(vec2(_286.x, _286.y)), pack2xF16(vec2(_294.x, _294.y)));
    pa[0] = vec4(_299.x, _299.y, pa[0].z, pa[0].w);
    vec4 _318 = internals[0];
    _318.x = (pa[0].x < 0.0) ? 0.0 : sa[1].x;
    internals[0] = _318;
    vec2 _339 = unpack2xF16(pa[0].y);
    vec2 _344 = vec2(pack2xF16(vec2(log(abs(unpack2xF16(pa[1].z).y)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_339.x, _339.y)));
    pa[0] = vec4(_344.x, _344.y, pa[0].z, pa[0].w);
    vec4 _365 = internals[1];
    _365.x = unpack2xF16(pa[0].x).x * unpack2xF16(sa[1].w).x;
    internals[1] = _365;
    vec2 _372 = vec2(sa[0].x, sa[0].y);
    vec2 _374 = unpack2xF16(_372.x);
    vec2 _376 = unpack2xF16(_372.y);
    vec4 _394 = internals[1];
    internals[1] = vec4(_374.x, _374.y, _376.x, _376.y) * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    vec2 _404 = unpack2xF16(pa[0].y);
    vec2 _409 = vec2(pack2xF16(vec2(exp(_394.x))), pack2xF16(vec2(_404.x, _404.y)));
    pa[0] = vec4(_409.x, _409.y, pa[0].z, pa[0].w);
    vec2 _418 = unpack2xF16(pa[0].x);
    vec2 _427 = unpack2xF16(sa[1].z);
    vec2 _437 = unpack2xF16(sa[1].y);
    vec2 _442 = (vec2(_418.x, _418.x) * (vec2(0.0) - vec2(_427.x, _427.x))) + vec2(_437.x, _437.x);
    vec2 _450 = unpack2xF16(pa[0].w);
    vec2 _455 = vec2(pack2xF16(vec2(_442.x, _442.y)), pack2xF16(vec2(_450.x, _450.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _455.x, _455.y);
    vec2 _474 = vec2(sa[0].z, sa[0].w);
    vec2 _476 = unpack2xF16(_474.x);
    vec2 _478 = unpack2xF16(_474.y);
    vec2 _491 = vec2(sa[0].z, sa[0].w);
    vec2 _493 = unpack2xF16(_491.x);
    vec2 _495 = unpack2xF16(_491.y);
    vec4 _502 = (vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x) * (vec4(0.0) - vec4(_476.x, _476.y, _478.x, _478.y))) + vec4(_493.x, _493.y, _495.x, _495.y);
    vec2 _511 = vec2(pack2xF16(vec2(_502.x, _502.y)), pack2xF16(vec2(_502.z, _502.w)));
    pa[0] = vec4(_511.x, _511.y, pa[0].z, pa[0].w);
    vec2 _524 = unpack2xF16(pa[0].z);
    vec2 _536 = vec2(pa[0].x, pa[0].y);
    vec2 _538 = unpack2xF16(_536.x);
    vec2 _540 = unpack2xF16(_536.y);
    vec4 _547 = (internals[1] * vec4(_524.x, _524.x, _524.x, _524.x)) + vec4(_538.x, _538.y, _540.x, _540.y);
    vec2 _556 = vec2(pack2xF16(vec2(_547.x, _547.y)), pack2xF16(vec2(_547.z, _547.w)));
    pa[0] = vec4(_556.x, _556.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _148)
{
    uint _151 = floatBitsToUint(_148);
    return uvec2(bitfieldExtract(_151, 0, 16), bitfieldExtract(_151, 16, 16));
}

void frag_output_finalize()
{
    vec2 _114 = vec2(pa[0].x, pa[0].y);
    vec2 _125 = unpack2xF16(_114.x);
    vec2 _127 = unpack2xF16(_114.y);
    out_color = vec4(_125.x, _125.y, _127.x, _127.y);
    vec2 _144 = vec2(pa[0].x, pa[0].y);
    uvec2 _157 = unpack2xU16(_144.x);
    uvec2 _159 = unpack2xU16(_144.y);
    out_color_ui = uvec4(_157.x, _157.y, _159.x, _159.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[1] = vec4(2.1523944412029190209388486399333e-41, 2.1811210597215777708927850963908e-41, 1.9514482414187402529683858176895e-41, 2.4752536073833568740796759359233e-41);
    vec2 _202 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_202.x, _202.y, pa[0].z, pa[0].w);
    vec2 _209 = vec2(v_TexCoord0.x, v_TexCoord0.y);
    vec2 _217 = unpack2xF16(pa[1].w);
    vec2 _222 = vec2(pack2xF16(vec2(_209.x, _209.y)), pack2xF16(vec2(_217.x, _217.y)));
    pa[1] = vec4(pa[1].x, pa[1].y, _222.x, _222.y);
    frag_init();
    vec4 _235 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _240 = vec2(pack2xF16(_235.xy), pack2xF16(_235.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _240.x, _240.y);
    vec4 _246 = texture(fragTex_sampler0, v_TexCoord2.xy);
    vec2 _251 = vec2(pack2xF16(_246.xy), pack2xF16(_246.zw));
    pa[1] = vec4(_251.x, _251.y, pa[1].z, pa[1].w);
    primary_program();
    frag_output_finalize();
}


[10:53:48.402] |I| [load_shader_generic]: Generating vert shader 83ac27e091a87d77b77245da09a719cde2419301451f01e029e8fc13bc64b3d8
[10:53:48.403] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 83ac27e091a87d77b77245da09a719cde2419301451f01e029e8fc13bc64b3d8

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _164 = sa[4];
    _164.x = sa[4].x * sa[4].z;
    sa[4] = _164;
    vec4 _179 = internals[0];
    _179.x = sa[4].x * sa[5].w;
    internals[0] = _179;
    vec4 _193 = sa[4];
    _193.x = fract(internals[0].x);
    sa[4] = _193;
}

void primary_program()
{
    vec2 _203 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _203.x, _203.y);
    vec2 _217 = vec2(pa[0].x, pa[0].y);
    vec2 _224 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_217.x, _217.y, _224.x, _224.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    internals[0] = (vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w) * sa[3]) + internals[1];
    vec2 _320 = vec2(pa[1].x, pa[1].y) * vec2(sa[5].x, sa[5].y);
    pa[0] = vec4(_320.x, _320.y, pa[0].z, pa[0].w);
    vec4 _338 = pa[0];
    _338.y = (0.0 - sa[4].x) + pa[0].y;
    pa[0] = _338;
    vec4 _347 = internals[1];
    _347.x = 1.0 / internals[0].w;
    internals[1] = _347;
    vec2 _363 = (vec2(internals[0].x, internals[0].y) * vec2(internals[1].x, internals[1].x)) + vec2(0.0);
    internals[0] = vec4(_363.x, _363.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _384 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_384.x, _384.y, outs[0].z, outs[0].w);
    vec2 _394 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _394.x, _394.y);
    vec4 _411 = pa[0];
    _411.z = sa[4].y + pa[1].y;
    pa[0] = _411;
    internals[0] = vec4(pa[0].x, pa[0].y, pa[0].z, 0.0) * vec4(1.0);
    vec2 _428 = vec2(internals[0].x, internals[0].y);
    outs[2] = vec4(_428.x, _428.y, outs[2].z, outs[2].w);
    vec2 _438 = vec2(internals[0].z, internals[0].w);
    outs[2] = vec4(outs[2].x, outs[2].y, _438.x, _438.y);
    vec2 _456 = vec2(sa[5].z, sa[5].z) * vec2(pa[0].x, pa[0].y);
    pa[0] = vec4(_456.x, _456.y, pa[0].z, pa[0].w);
    internals[0] = vec4(pa[0].x, pa[0].y, 0.0, 0.0) * vec4(1.0);
    vec2 _475 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_475.x, _475.y, outs[3].z, outs[3].w);
    vec2 _485 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _485.x, _485.y);
    vec2 _495 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_495.x, _495.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(0.00609756074845790863037109375, 0.0500000007450580596923828125, 5.0, 0.0500000007450580596923828125);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:53:48.425] |E| [compile_program]: Vertex info
-----------
0(34) : warning C7050: "internals[0]" might be used before being initialized

Fragment info
-------------
0(36) : warning C7050: "pa[0].zw" might be used before being initialized
0(36) : warning C7050: "pa[1].xyw" might be used before being initialized
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[1]" might be used before being initialized


[10:53:48.425] |I| [load_shader_generic]: Generating frag shader e28e67896dc12f7b80b421594925b47761f2876a559bbfdcb2c4b43b1437d248
[10:53:48.428] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: e28e67896dc12f7b80b421594925b47761f2876a559bbfdcb2c4b43b1437d248

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[1];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 7) in vec4 v_TexCoord3;
layout(location = 10) in vec4 v_TexCoord6;
layout(location = 6) in vec4 v_TexCoord2;
layout(location = 9) in vec4 v_TexCoord5;
layout(location = 8) in vec4 v_TexCoord4;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

float pack2xF16(vec2 _199)
{
    return uintBitsToFloat(packHalf2x16(_199));
}

vec2 unpack2xF16(float _127)
{
    return unpackHalf2x16(floatBitsToUint(_127));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void secondary_program()
{
    vec2 _336 = unpack2xF16(sa[1].w);
    vec2 _341 = vec2(pack2xF16(vec2(unpack2xF16(sa[0].w).x * unpack2xF16(sa[0].y).y, unpack2xF16(sa[1].z).y)), pack2xF16(vec2(_336.x, _336.y)));
    sa[1] = vec4(sa[1].x, sa[1].y, _341.x, _341.y);
}

void primary_program()
{
    vec2 _374 = unpack2xF16(pa[0].y);
    vec2 _379 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[3].z).x) + unpack2xF16(sa[1].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_374.x, _374.y)));
    pa[0] = vec4(_379.x, _379.y, pa[0].z, pa[0].w);
    vec4 _410 = internals[1];
    _410.x = (abs(unpack2xF16(pa[0].x).x) * unpack2xF16(sa[1].x).x) + unpack2xF16(pa[0].y).y;
    internals[1] = _410;
    vec4 _436 = internals[2];
    _436.x = (unpack2xF16(pa[0].z).x * unpack2xF16(pa[1].x).x) + unpack2xF16(sa[1].y).x;
    internals[2] = _436;
    vec4 _462 = internals[0];
    _462.y = (unpack2xF16(pa[1].z).x * unpack2xF16(pa[2].x).x) + unpack2xF16(sa[1].y).x;
    internals[0] = _462;
    vec2 _468 = unpack2xF16(pa[2].z);
    vec2 _477 = unpack2xF16(pa[3].x);
    vec2 _486 = unpack2xF16(sa[1].y);
    vec2 _491 = (vec2(_468.x, _468.x) * vec2(_477.x, _477.x)) + vec2(_486.x, _486.x);
    vec2 _499 = unpack2xF16(pa[0].y);
    vec2 _504 = vec2(pack2xF16(vec2(_491.x, _491.y)), pack2xF16(vec2(_499.x, _499.y)));
    pa[0] = vec4(_504.x, _504.y, pa[0].z, pa[0].w);
    vec4 _523 = internals[1];
    vec4 _529 = internals[2];
    _529.y = internals[0].y;
    internals[2] = _529;
    vec2 _535 = unpack2xF16(pa[0].y);
    vec2 _540 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + _523.x)), pack2xF16(vec2(_535.x, _535.y)));
    pa[0] = vec4(_540.x, _540.y, pa[0].z, pa[0].w);
    vec2 _557 = vec2(sa[0].z, sa[0].z);
    bvec2 _559 = lessThan(vec2(pa[0].x, pa[0].y), vec2(0.0));
    vec2 _560 = vec2(_559.x ? vec2(0.0).x : _557.x, _559.y ? vec2(0.0).y : _557.y);
    vec2 _568 = unpack2xF16(pa[0].y);
    vec2 _573 = vec2(pack2xF16(vec2(_560.x, _560.y)), pack2xF16(vec2(_568.x, _568.y)));
    pa[0] = vec4(_573.x, _573.y, pa[0].z, pa[0].w);
    vec2 _603 = unpack2xF16(pa[1].y);
    vec2 _608 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[0].z).x, unpack2xF16(pa[1].x).y)), pack2xF16(vec2(_603.x, _603.y)));
    pa[1] = vec4(_608.x, _608.y, pa[1].z, pa[1].w);
    vec2 _627 = (vec2(0.0) - vec2(internals[2].x, internals[2].y)) + vec2(internals[1].x, internals[1].x);
    vec2 _635 = unpack2xF16(pa[0].w);
    vec2 _640 = vec2(pack2xF16(vec2(_627.x, _627.y)), pack2xF16(vec2(_635.x, _635.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _640.x, _640.y);
    vec2 _657 = vec2(sa[0].z, sa[0].z);
    bvec2 _658 = lessThan(vec2(pa[0].z, pa[0].w), vec2(0.0));
    vec2 _659 = vec2(_658.x ? vec2(0.0).x : _657.x, _658.y ? vec2(0.0).y : _657.y);
    vec2 _667 = unpack2xF16(pa[0].y);
    vec2 _672 = vec2(pack2xF16(vec2(_659.x, _659.y)), pack2xF16(vec2(_667.x, _667.y)));
    pa[0] = vec4(_672.x, _672.y, pa[0].z, pa[0].w);
    vec2 _702 = unpack2xF16(pa[0].w);
    vec2 _707 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[0].z).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_702.x, _702.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _707.x, _707.y);
    vec2 _716 = unpack2xF16(pa[0].z);
    vec2 _719 = vec2(_716.y, _716.y);
    vec2 _727 = unpack2xF16(pa[0].y);
    vec2 _732 = vec2(pack2xF16(vec2(_719.x, _719.y)), pack2xF16(vec2(_727.x, _727.y)));
    pa[0] = vec4(_732.x, _732.y, pa[0].z, pa[0].w);
    vec2 _749 = vec2(sa[0].z, sa[0].z);
    bvec2 _750 = lessThan(vec2(pa[0].x, pa[0].y), vec2(0.0));
    vec2 _751 = vec2(_750.x ? vec2(0.0).x : _749.x, _750.y ? vec2(0.0).y : _749.y);
    vec2 _759 = unpack2xF16(pa[0].y);
    vec2 _764 = vec2(pack2xF16(vec2(_751.x, _751.y)), pack2xF16(vec2(_759.x, _759.y)));
    pa[0] = vec4(_764.x, _764.y, pa[0].z, pa[0].w);
    vec2 _794 = unpack2xF16(pa[0].y);
    vec2 _799 = vec2(pack2xF16(vec2((0.0 - unpack2xF16(pa[0].x).x) + unpack2xF16(sa[0].z).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_794.x, _794.y)));
    pa[0] = vec4(_799.x, _799.y, pa[0].z, pa[0].w);
    vec2 _828 = unpack2xF16(pa[0].y);
    vec2 _833 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].z).x + unpack2xF16(pa[0].x).x, unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_828.x, _828.y)));
    pa[0] = vec4(_833.x, _833.y, pa[0].z, pa[0].w);
    vec2 _862 = unpack2xF16(pa[0].w);
    vec2 _867 = vec2(pack2xF16(vec2(unpack2xF16(pa[0].x).x + unpack2xF16(pa[1].x).x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_862.x, _862.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _867.x, _867.y);
    vec2 _877 = vec2(sa[0].x, sa[0].y);
    vec2 _879 = unpack2xF16(_877.x);
    vec2 _881 = unpack2xF16(_877.y);
    vec4 _886 = vec4(_879.x, _879.y, _881.x, _881.y);
    vec2 _895 = vec2(pack2xF16(vec2(_886.x, _886.y)), pack2xF16(vec2(_886.z, _886.w)));
    pa[0] = vec4(_895.x, _895.y, pa[0].z, pa[0].w);
    vec4 _923 = pa[0];
    _923.y = pack2xF16(vec2(unpack2xF16(pa[0].y).x, unpack2xF16(sa[1].z).x * unpack2xF16(pa[0].z).x));
    pa[0] = _923;
}

uvec2 unpack2xU16(float _157)
{
    uint _160 = floatBitsToUint(_157);
    return uvec2(bitfieldExtract(_160, 0, 16), bitfieldExtract(_160, 16, 16));
}

void frag_output_finalize()
{
    vec2 _123 = vec2(pa[0].x, pa[0].y);
    vec2 _134 = unpack2xF16(_123.x);
    vec2 _136 = unpack2xF16(_123.y);
    out_color = vec4(_134.x, _134.y, _136.x, _136.y);
    vec2 _153 = vec2(pa[0].x, pa[0].y);
    uvec2 _166 = unpack2xU16(_153.x);
    uvec2 _168 = unpack2xU16(_153.y);
    out_color_ui = uvec4(_166.x, _166.y, _168.x, _168.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 1)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    sa[0] = vec4(sa[0].x, sa[0].y, vec4(2.1523944412029190209388486399333e-41, 1.9131927933426727469321680000657e-41, 2.0089014784560577528762587306044e-41, 1.8079552786718789849057959083606e-41).x, vec4(2.1523944412029190209388486399333e-41, 1.9131927933426727469321680000657e-41, 2.0089014784560577528762587306044e-41, 1.8079552786718789849057959083606e-41).y);
    sa[1] = vec4(vec4(2.1523944412029190209388486399333e-41, 1.9131927933426727469321680000657e-41, 2.0089014784560577528762587306044e-41, 1.8079552786718789849057959083606e-41).z, vec4(2.1523944412029190209388486399333e-41, 1.9131927933426727469321680000657e-41, 2.0089014784560577528762587306044e-41, 1.8079552786718789849057959083606e-41).w, sa[1].z, sa[1].w);
    vec2 _211 = vec2(pack2xF16(vec2(v_TexCoord1.x, v_TexCoord1.y)), pack2xF16(vec2(v_TexCoord1.z, v_TexCoord1.w)));
    pa[0] = vec4(_211.x, _211.y, pa[0].z, pa[0].w);
    vec2 _227 = unpack2xF16(pa[3].w);
    vec2 _232 = vec2(pack2xF16(vec2(v_TexCoord0.x, unpack2xF16(pa[3].z).y)), pack2xF16(vec2(_227.x, _227.y)));
    pa[3] = vec4(pa[3].x, pa[3].y, _232.x, _232.y);
    frag_init();
    vec4 _245 = texture(fragTex_sampler0, v_TexCoord3.xy);
    vec2 _250 = vec2(pack2xF16(_245.xy), pack2xF16(_245.zw));
    pa[0] = vec4(pa[0].x, pa[0].y, _250.x, _250.y);
    vec4 _256 = texture(fragTex_sampler0, v_TexCoord6.xy);
    vec2 _261 = vec2(pack2xF16(_256.xy), pack2xF16(_256.zw));
    pa[1] = vec4(_261.x, _261.y, pa[1].z, pa[1].w);
    vec4 _267 = texture(fragTex_sampler0, v_TexCoord2.xy);
    vec2 _272 = vec2(pack2xF16(_267.xy), pack2xF16(_267.zw));
    pa[1] = vec4(pa[1].x, pa[1].y, _272.x, _272.y);
    vec4 _278 = texture(fragTex_sampler0, v_TexCoord5.xy);
    vec2 _283 = vec2(pack2xF16(_278.xy), pack2xF16(_278.zw));
    pa[2] = vec4(_283.x, _283.y, pa[2].z, pa[2].w);
    vec4 _289 = texture(fragTex_sampler0, v_TexCoord1.xy);
    vec2 _294 = vec2(pack2xF16(_289.xy), pack2xF16(_289.zw));
    pa[2] = vec4(pa[2].x, pa[2].y, _294.x, _294.y);
    vec4 _300 = texture(fragTex_sampler0, v_TexCoord4.xy);
    vec2 _305 = vec2(pack2xF16(_300.xy), pack2xF16(_300.zw));
    pa[3] = vec4(_305.x, _305.y, pa[3].z, pa[3].w);
    secondary_program();
    primary_program();
    frag_output_finalize();
}


[10:53:48.430] |I| [load_shader_generic]: Generating vert shader 50d3b4b46a9a827af8a35511240f6225cd06d96932a62942134f371555a4c930
[10:53:48.433] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: 50d3b4b46a9a827af8a35511240f6225cd06d96932a62942134f371555a4c930

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
layout(location = 6) out vec4 v_TexCoord2;
layout(location = 7) out vec4 v_TexCoord3;
layout(location = 8) out vec4 v_TexCoord4;
layout(location = 9) out vec4 v_TexCoord5;
layout(location = 10) out vec4 v_TexCoord6;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _190 = sa[4];
    _190.x = sa[4].x * sa[4].z;
    sa[4] = _190;
    vec4 _210 = internals[0];
    _210.x = (sa[4].x * sa[6].z) + sa[4].w;
    internals[0] = _210;
    vec4 _224 = sa[4];
    _224.x = fract(internals[0].x);
    sa[4] = _224;
    vec2 _231 = vec2(sa[6].x, sa[6].y);
    sa[7] = vec4(_231.x, _231.y, sa[7].z, sa[7].w);
    vec2 _241 = vec2(sa[5].z, sa[5].w);
    sa[7] = vec4(sa[7].x, sa[7].y, _241.x, _241.y);
}

void primary_program()
{
    vec2 _254 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _254.x, _254.y);
    vec2 _268 = vec2(pa[0].x, pa[0].y);
    vec2 _275 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_268.x, _268.y, _275.x, _275.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, internals[0].y) * sa[1]) + internals[1];
    internals[1] = (vec4(internals[0].z, internals[0].z, internals[0].z, internals[0].z) * sa[2]) + internals[1];
    vec2 _351 = vec2(pa[1].x, pa[1].y) * vec2(sa[5].x, sa[5].y);
    pa[0] = vec4(_351.x, _351.y, pa[0].z, pa[0].w);
    vec4 _369 = pa[0];
    _369.y = (0.0 - sa[4].x) + pa[0].y;
    pa[0] = _369;
    vec3 _378 = vec3(pa[0].x, pa[0].y, 0.0) * vec3(1.0);
    internals[2] = vec4(_378.x, _378.y, _378.z, internals[2].w);
    vec4 _403 = internals[2];
    vec2 _407 = vec2(_403.x, _403.y);
    internals[0] = (sa[3] * vec4(internals[0].w, internals[0].w, internals[0].w, internals[0].w)) + internals[1];
    outs[2] = vec4(_407.x, _407.y, outs[2].z, outs[2].w);
    vec4 _419 = outs[2];
    _419.z = internals[2].z;
    outs[2] = _419;
    vec4 _427 = outs[2];
    _427.w = sa[4].y;
    outs[2] = _427;
    internals[1] = sa[7] + vec4(pa[0].x, pa[0].y, pa[0].x, pa[0].y);
    vec4 _451 = internals[2];
    _451.x = 1.0 / internals[0].w;
    internals[2] = _451;
    vec2 _467 = (vec2(internals[0].x, internals[0].y) * vec2(internals[2].x, internals[2].x)) + vec2(0.0);
    internals[0] = vec4(_467.x, _467.y, internals[0].z, internals[0].w);
    internals[0] = vec4(internals[0].x, internals[0].y, internals[0].z, 1.0) * vec4(1.0);
    vec2 _488 = vec2(internals[0].x, internals[0].y);
    outs[0] = vec4(_488.x, _488.y, outs[0].z, outs[0].w);
    vec2 _498 = vec2(internals[0].z, internals[0].w);
    outs[0] = vec4(outs[0].x, outs[0].y, _498.x, _498.y);
    internals[0] = vec4(internals[1].x, internals[1].y, 0.0, 0.0) * vec4(1.0);
    vec2 _517 = vec2(internals[0].x, internals[0].y);
    outs[3] = vec4(_517.x, _517.y, outs[3].z, outs[3].w);
    vec2 _527 = vec2(internals[0].z, internals[0].w);
    outs[3] = vec4(outs[3].x, outs[3].y, _527.x, _527.y);
    internals[0] = vec4(internals[1].z, internals[1].w, 0.0, 0.0) * vec4(1.0);
    vec2 _546 = vec2(internals[0].x, internals[0].y);
    outs[4] = vec4(_546.x, _546.y, outs[4].z, outs[4].w);
    vec2 _556 = vec2(internals[0].z, internals[0].w);
    outs[4] = vec4(outs[4].x, outs[4].y, _556.x, _556.y);
    vec2 _574 = vec2(sa[6].w, sa[6].w) * vec2(outs[2].x, outs[2].y);
    outs[5] = vec4(_574.x, _574.y, outs[5].z, outs[5].w);
    vec2 _592 = vec2(sa[6].w, sa[6].w) * vec2(outs[2].z, outs[2].w);
    outs[5] = vec4(outs[5].x, outs[5].y, _592.x, _592.y);
    vec2 _611 = (vec2(internals[1].x, internals[1].y) * vec2(sa[6].w, sa[6].w)) + vec2(0.0);
    outs[6] = vec4(_611.x, _611.y, outs[6].z, outs[6].w);
    vec2 _622 = vec2(0.0) * vec2(sa[6].w, sa[6].w);
    outs[6] = vec4(outs[6].x, outs[6].y, _622.x, _622.y);
    vec2 _640 = vec2(internals[1].z, internals[1].w) * vec2(sa[6].w, sa[6].w);
    outs[7] = vec4(_640.x, _640.y, outs[7].z, outs[7].w);
    vec2 _651 = vec2(0.0) * vec2(sa[6].w, sa[6].w);
    outs[7] = vec4(outs[7].x, outs[7].y, _651.x, _651.y);
    vec2 _661 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_661.x, _661.y, outs[1].z, outs[1].w);
}

void vert_output_finalize()
{
    if (renderVertInfo.viewport_flag < 0.5)
    {
        gl_Position = ((outs[0] * vec4(2.0 / renderVertInfo.screen_width, (-2.0) / renderVertInfo.screen_height, 1.0, 1.0)) + vec4(-1.0, 1.0, 0.0, 0.0)) * renderVertInfo.viewport_flip;
        gl_Position.z = gl_Position.w;
    }
    else
    {
        gl_Position = outs[0] * renderVertInfo.viewport_flip;
    }
    v_TexCoord0 = outs[1];
    v_TexCoord1 = outs[2];
    v_TexCoord2 = outs[3];
    v_TexCoord3 = outs[4];
    v_TexCoord4 = outs[5];
    v_TexCoord5 = outs[6];
    v_TexCoord6 = outs[7];
}

void main()
{
    int i = 0;
    while (i < 5)
    {
        sa[i + 0] = vertexData.buffer14[i];
        i++;
    }
    sa[5] = vec4(0.00115740741603076457977294921875, 0.0500000007450580596923828125, 0.0, -9.9999997473787516355514526367188e-05);
    sa[6] = vec4(0.0, 9.9999997473787516355514526367188e-05, 0.0500000007450580596923828125, 5.0);
    pa[0] = IN_in_position0;
    pa[1] = IN_in_texcoord0;
    int i_1 = 0;
    while (i_1 < 20)
    {
        outs[i_1] = vec4(0.0);
        i_1++;
    }
    secondary_program();
    primary_program();
    vert_output_finalize();
}


[10:53:48.466] |E| [compile_program]: Vertex info
-----------
0(38) : warning C7050: "internals[0]" might be used before being initialized
0(38) : warning C7050: "internals[2].w" might be used before being initialized

Fragment info
-------------
0(40) : warning C7050: "pa[0].zw" might be used before being initialized
0(40) : warning C7050: "pa[1].zw" might be used before being initialized
0(40) : warning C7050: "pa[2].zw" might be used before being initialized
0(40) : warning C7050: "pa[3]" might be used before being initialized
0(42) : warning C7050: "internals[0]" might be used before being initialized
0(42) : warning C7050: "internals[1]" might be used before being initialized
0(42) : warning C7050: "internals[2]" might be used before being initialized


[10:54:15.869] |I| [load_shader_generic]: Generating frag shader ebd60db2d2368da38096170ed9acf29e1fb3b3c9503252bdc565871c2726906b
[10:54:15.871] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: ebd60db2d2368da38096170ed9acf29e1fb3b3c9503252bdc565871c2726906b

layout(binding = 1, std430) buffer fragmentDataType
{
    vec4 buffer14[2];
} fragmentData;

layout(binding = 3, std140) uniform GxmRenderFragBufferBlock
{
    float back_disabled;
    float front_disabled;
    float writing_mask;
    float use_raw_image;
    vec4 integral_query_formats[4];
    int res_multiplier;
} renderFragInfo;

layout(binding = 0) uniform sampler2D fragTex_sampler0;
layout(binding = 1, rgba8) uniform readonly image2D f_mask;

layout(location = 5) in vec4 v_TexCoord1;
layout(location = 4) in vec4 v_TexCoord0;
layout(location = 0) out vec4 out_color;
layout(location = 1) out uvec4 out_color_ui;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

vec2 unpack2xF16(float _115)
{
    return unpackHalf2x16(floatBitsToUint(_115));
}

float pack2xF16(vec2 _191)
{
    return uintBitsToFloat(packHalf2x16(_191));
}

void frag_init()
{
    if ((renderFragInfo.front_disabled != 0.0) && gl_FrontFacing)
    {
        discard;
    }
    if ((renderFragInfo.back_disabled != 0.0) && (!gl_FrontFacing))
    {
        discard;
    }
}

void primary_program()
{
    vec2 _237 = vec2(pa[0].x, pa[0].y);
    vec2 _239 = unpack2xF16(_237.x);
    vec2 _241 = unpack2xF16(_237.y);
    vec2 _253 = vec2(sa[0].x, sa[0].y);
    vec2 _255 = unpack2xF16(_253.x);
    vec2 _257 = unpack2xF16(_253.y);
    vec2 _269 = vec2(sa[0].z, sa[0].w);
    vec2 _271 = unpack2xF16(_269.x);
    vec2 _273 = unpack2xF16(_269.y);
    internals[0] = (vec4(_239.x, _239.y, _241.x, _241.y) * vec4(_255.x, _255.y, _257.x, _257.y)) + vec4(_271.x, _271.y, _273.x, _273.y);
    vec2 _288 = vec2(sa[1].x, sa[1].y);
    vec2 _290 = unpack2xF16(_288.x);
    vec2 _292 = unpack2xF16(_288.y);
    vec4 _297 = vec4(_290.x, _290.y, _292.x, _292.y);
    vec2 _306 = vec2(pack2xF16(vec2(_297.x, _297.y)), pack2xF16(vec2(_297.z, _297.w)));
    r[0] = vec4(_306.x, _306.y, r[0].z, r[0].w);
    vec4 _332 = r[0];
    _332.y = pack2xF16(vec2(unpack2xF16(r[0].y).x, internals[0].w * unpack2xF16(pa[0].z).x));
    r[0] = _332;
    vec2 _351 = unpack2xF16(pa[0].y);
    vec2 _356 = vec2(pack2xF16(vec2(log(abs(internals[0].w)), unpack2xF16(pa[0].x).y)), pack2xF16(vec2(_351.x, _351.y)));
    pa[0] = vec4(_356.x, _356.y, pa[0].z, pa[0].w);
    vec4 _377 = internals[1];
    _377.x = unpack2xF16(sa[1].z).x * unpack2xF16(pa[0].x).x;
    internals[1] = _377;
    vec2 _384 = vec2(r[0].x, r[0].y);
    vec2 _386 = unpack2xF16(_384.x);
    vec2 _388 = unpack2xF16(_384.y);
    vec4 _402 = internals[1];
    internals[1] = (vec4(0.0) - vec4(_386.x, _386.y, _388.x, _388.y)) + internals[0];
    vec2 _412 = unpack2xF16(pa[0].y);
    vec2 _417 = vec2(pack2xF16(vec2(exp(_402.x))), pack2xF16(vec2(_412.x, _412.y)));
    pa[0] = vec4(_417.x, _417.y, pa[0].z, pa[0].w);
    vec2 _426 = unpack2xF16(pa[0].x);
    vec2 _442 = vec2(r[0].x, r[0].y);
    vec2 _444 = unpack2xF16(_442.x);
    vec2 _446 = unpack2xF16(_442.y);
    vec4 _453 = (vec4(_426.x, _426.x, _426.x, _426.x) * internals[1]) + vec4(_444.x, _444.y, _446.x, _446.y);
    vec2 _462 = vec2(pack2xF16(vec2(_453.x, _453.y)), pack2xF16(vec2(_453.z, _453.w)));
    pa[0] = vec4(_462.x, _462.y, pa[0].z, pa[0].w);
}

uvec2 unpack2xU16(float _145)
{
    uint _148 = floatBitsToUint(_145);
    return uvec2(bitfieldExtract(_148, 0, 16), bitfieldExtract(_148, 16, 16));
}

void frag_output_finalize()
{
    vec2 _111 = vec2(pa[0].x, pa[0].y);
    vec2 _122 = unpack2xF16(_111.x);
    vec2 _124 = unpack2xF16(_111.y);
    out_color = vec4(_122.x, _122.y, _124.x, _124.y);
    vec2 _141 = vec2(pa[0].x, pa[0].y);
    uvec2 _154 = unpack2xU16(_141.x);
    uvec2 _156 = unpack2xU16(_141.y);
    out_color_ui = uvec4(_154.x, _154.y, _156.x, _156.y);
    if (all(lessThan(imageLoad(f_mask, ivec4(gl_FragCoord).xy / ivec2(renderFragInfo.res_multiplier)), vec4(0.5))))
    {
        discard;
    }
}

void main()
{
    int i = 0;
    while (i < 2)
    {
        sa[i + 0] = fragmentData.buffer14[i];
        i++;
    }
    vec4 _66 = sa[1];
    _66.z = 2.6546198108169334591579133225844e-41;
    sa[1] = _66;
    vec2 _202 = unpack2xF16(pa[0].w);
    vec2 _207 = vec2(pack2xF16(vec2(v_TexCoord1.x, unpack2xF16(pa[0].z).y)), pack2xF16(vec2(_202.x, _202.y)));
    pa[0] = vec4(pa[0].x, pa[0].y, _207.x, _207.y);
    frag_init();
    vec4 _220 = texture(fragTex_sampler0, v_TexCoord0.xy);
    vec2 _225 = vec2(pack2xF16(_220.xy), pack2xF16(_220.zw));
    pa[0] = vec4(_225.x, _225.y, pa[0].z, pa[0].w);
    primary_program();
    frag_output_finalize();
}


[10:54:15.872] |I| [load_shader_generic]: Generating vert shader c8af7e512a77c420de1b7260ae7a3d43254e15f86305c7e88b547db7b6589ef4
[10:54:15.875] |I| [convert_gxp_to_glsl]: Generated GLSL:
#version 430
#ifdef GL_ARB_fragment_shader_interlock
#extension GL_ARB_fragment_shader_interlock : enable
#define SPIRV_Cross_beginInvocationInterlock() beginInvocationInterlockARB()
#define SPIRV_Cross_endInvocationInterlock() endInvocationInterlockARB()
#elif defined(GL_INTEL_fragment_shader_ordering)
#extension GL_INTEL_fragment_shader_ordering : enable
#define SPIRV_Cross_beginInvocationInterlock() beginFragmentShaderOrderingINTEL()
#define SPIRV_Cross_endInvocationInterlock()
#endif
// Shader Name: c8af7e512a77c420de1b7260ae7a3d43254e15f86305c7e88b547db7b6589ef4

layout(binding = 0, std430) buffer vertexDataType
{
    vec4 buffer14[5];
} vertexData;

layout(binding = 2, std140) uniform GxmRenderVertBufferBlock
{
    vec4 viewport_flip;
    float viewport_flag;
    float screen_width;
    float screen_height;
    vec4 integral_query_formats[4];
} renderVertInfo;

layout(location = 0) in vec4 IN_in_position0;
layout(location = 1) in vec4 IN_in_texcoord0;
layout(location = 4) out vec4 v_TexCoord0;
layout(location = 5) out vec4 v_TexCoord1;
vec4 pa[32];
vec4 sa[32];
vec4 internals[3];
vec4 r[20];
bool p[4];
int idx[2];
vec4 outs[20];

void secondary_program()
{
    vec4 _173 = sa[4];
    _173.x = sa[4].x * sa[4].y;
    sa[4] = _173;
    vec4 _194 = internals[0];
    _194.x = (sa[4].x * sa[7].x) + sa[7].z;
    internals[0] = _194;
    vec4 _208 = internals[0];
    _208.x = fract(internals[0].x);
    internals[0] = _208;
    vec4 _228 = internals[1];
    _228.x = (internals[0].x * sa[6].w) + sa[6].z;
    internals[1] = _228;
    vec4 _243 = sa[4];
    _243.x = (internals[1].x * internals[1].x) + 0.0;
    sa[4] = _243;
    vec4 _263 = internals[0];
    _263.x = (sa[4].x * sa[6].y) + sa[6].x;
    internals[0] = _263;
    vec4 _284 = internals[0];
    _284.x = (internals[0].x * sa[4].x) + (0.0 - sa[5].w);
    internals[0] = _284;
    vec4 _304 = internals[0];
    _304.x = (internals[0].x * sa[4].x) + sa[7].z;
    internals[0] = _304;
    vec4 _319 = internals[2];
    _319.x = (internals[1].x * internals[0].x) + 0.0;
    internals[2] = _319;
    vec4 _339 = internals[0];
    _339.x = (sa[4].x * sa[5].z) + sa[5].y;
    internals[0] = _339;
    vec4 _360 = internals[0];
    _360.x = (internals[0].x * sa[4].x) + (0.0 - sa[5].x);
    internals[0] = _360;
    vec4 _380 = internals[1];
    _380.x = (internals[0].x * sa[4].x) + sa[7].y;
    internals[1] = _380;
    vec4 _395 = internals[0];
    _395.x = (internals[2].x * internals[1].x) + 0.0;
    internals[0] = _395;
    vec4 _415 = internals[0];
    _415.x = (internals[2].x * internals[1].x) + internals[0].x;
    internals[0] = _415;
    vec4 _433 = internals[0];
    _433.x = (1.0 * sa[7].y) + (0.0 - abs(internals[0].x));
    internals[0] = _433;
    vec4 _448 = sa[4];
    _448.z = (internals[0].x * sa[4].z) + 0.0;
    sa[4] = _448;
    vec2 _456 = vec2(sa[4].z, 0.0) * vec2(1.0);
    sa[5] = vec4(_456.x, _456.y, sa[5].z, sa[5].w);
    vec2 _461 = vec2(0.0) * vec2(1.0);
    sa[4] = vec4(_461.x, _461.y, sa[4].z, sa[4].w);
}

void primary_program()
{
    vec2 _474 = vec2(pa[1].x, pa[1].y);
    outs[1] = vec4(_474.x, _474.y, outs[1].z, outs[1].w);
    vec2 _484 = vec2(pa[1].z, pa[1].w);
    outs[1] = vec4(outs[1].x, outs[1].y, _484.x, _484.y);
    vec2 _498 = vec2(pa[0].x, pa[0].y);
    vec2 _505 = vec2(pa[0].z, pa[0].w);
    internals[0] = vec4(_498.x, _498.y, _505.x, _505.y);
    internals[1] = sa[0] * vec4(internals[0].x, internals[0].x, internals[0].x, internals[0].x);
    internals[1] = (vec4(internals[0].y, internals[0].y, internals[0].y, interna